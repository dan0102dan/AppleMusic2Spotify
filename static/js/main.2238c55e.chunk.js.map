{"version":3,"sources":["constants/Constants.js","services/AuthService.js","services/ApiService.js","components/shared/Header.js","constants/RouteConstants.js","components/Home.js","services/AppleMusicPlaylist.js","components/apple/AppleStep3.js","components/vk/VKStep3.js","components/yandex/YandexStep3.js","components/apple/AppleStep1.js","components/apple/AppleStep2.js","services/UtilsService.js","components/apple/AppleStep4.js","components/apple/Apple.js","components/vk/VKStep1.js","components/vk/VKStep2.js","components/vk/VKStep4.js","components/vk/fetchdata.js","components/yandex/YandexStep1.js","components/yandex/YandexStep2.js","components/yandex/YandexStep4.js","components/yandex/Yandex.js","components/LoginCallback.js","components/Routes.js","App.js","index.js"],"names":["API_URL","getLoginUrl","scopes","queryArgs","push","encodeURIComponent","window","location","protocol","host","join","isLoggedIn","localStorage","getItem","getToken","axios","instance","originalAxios","create","headers","Authorization","getCurrentUser","get","getPlaylists","createPlaylist","userId","name","description","isPublic","post","addTrackToPlaylist","playlistId","uris","Header","props","state","photo","isFetchingUser","then","res","setState","data","images","url","display_name","title","subTitle","this","extra","key","style","marginTop","Link","to","avatar","src","React","Component","withRouter","Home","removeItem","forceUpdate","className","size","background","color","display","margin","width","height","borderRadius","alignItems","justifyContent","cursor","onClick","logout","bind","href","textAlign","role","aria-label","loginMessage","axiosCancel","completed","finded","failed","AppleMusicPlaylist","settings","_playlist","changeCallbacks","spotifyStatus","searchFormat","playlist","parsed","Papa","parse","header","errors","length","Error","pop","index","track","keys","Object","includes","Name","artist","Artist","album","Album","composer","Composer","discCount","discNumber","genre","Genre","trackCount","trackNumber","year","Year","spotifyResults","spotifySelected","response","x","items","value","Date","date","getFullYear","indexes","newPlaylist","i","status","output","trackIndex","id","selectedIndex","findIndex","triggerChange","cb","searchTimeout","setTimeout","_search","placeholders","keyword","replace","slice","requestId","params","type","q","searchKeyword","limit","tracks","total","catch","error","isCancel","finally","clearTimeout","cancel","AppleStep1","file","reader","FileReader","readAsText","onload","evt","text","target","result","setPlaylist","onUpload","notification","message","onerror","marginRight","marginLeft","maxWidth","beforeUpload","fileList","before","appleStep2","selectedRowKeys","onSelectChange","filter","next","hasSelected","nextStep","disabled","rowSelection","onChange","padding","nextStepButton","columns","dataIndex","rowKey","dataSource","pagination","bordered","formatSeconds","seconds","setSeconds","toISOString","substr","FormItem","Form","Item","appleStep3","settingsItem","settingsVisible","placement","nextStepDisabled","Math","round","resume","pause","trigger","content","onConfirm","okText","cancelText","pauseSearch","startSearch","row","trackLabel","getFieldDecorator","form","onSubmit","settingsFormSave","label","help","initialValue","rules","required","placeholder","marginBottom","htmlType","e","preventDefault","validateFields","values","each","option","selectedTrack","spotifyTrack","link","external_urls","spotify","image","duration","duration_ms","track_number","artistName","artists","artistLink","albumName","albumLink","visible","footer","onCancel","itemLayout","renderItem","item","switchAction","checked","setSpotifySelected","actions","Meta","rel","innerWidth","percent","strokeColor","buttons","render","statusColumn","songSettingsModal","TextArea","Input","appleStep4","userPlaylists","fetchingPlaylists","isCreatingPlaylist","createPlaylistModalVisible","isImporting","alert","event","importSong","map","closable","maskClosable","loading","validateTrigger","autosize","defaultChecked","err","user","setSpotifyStatus","songs","getPlaylist","chunks","chunk","songsUri","songIndex","uri","showIcon","overlay","selectPlaylistsMenu","selectPlaylist","importTable","createPlaylistModal","Apple","isFetching","step","appleMusicPlaylist","AppleStep3","AppleStep4","step1","step2","step3","step4","Step","Steps","current","VKStep1","onKeyDown","a","app","str","search","split","splice","toString","Number","access_key","setVKPlaylist","error_msg","VKStep2","VKStep3","VKStep4","VK","YandexStep1","setYandexPlaylist","YandexStep2","YandexStep3","YandexStep4","LoginCallback","token","hash","access_token","setItem","history","Routes","Switch","Route","exact","path","component","Yandex","App","ReactDOM","basename","document","getElementById"],"mappings":"kSAAaA,EAAU,0BCEVC,EAAc,WAQpB,IARqBC,EAQtB,uDAR+B,CACnC,wBACA,8BACA,yBACA,0BACA,oBACA,sBACA,iBAEIC,EAAY,GAKhB,OAJAA,EAAUC,KAAV,oBDX+B,qCCY/BD,EAAUC,KAAV,uBACAD,EAAUC,KAAV,uBAA+BC,mBAAmB,GAAD,OAAIC,OAAOC,SAASC,SAApB,aAAiCF,OAAOC,SAASE,KAAjD,+BACjDN,EAAUC,KAAV,gBAAwBF,EAAOQ,KAAK,OAC9B,2CAAN,OAAkDP,EAAUO,KAAK,OAGtDC,EAAa,kBAA0C,OAApCC,aAAaC,QAAQ,YAExCC,EAAW,kBAAMF,aAAaC,QAAQ,Y,iBChBtCE,EAAQ,SAARA,IAQX,MAP8B,qBAAnBA,EAAMC,WACfD,EAAMC,SAAWC,IAAcC,OAAO,CACpCC,QAAS,CACPC,cAAc,UAAD,OAAYN,SAIxBC,EAAMC,UAGFK,EAAiB,WAC5B,OAAON,IAAQO,IAAR,UACFtB,EADE,YAcIuB,EAAe,WAC1B,OAAOR,IAAQO,IAAR,UACFtB,EADE,sBAKIwB,EAAiB,SAACC,EAAQC,GAA8C,IAAxCC,EAAuC,uDAAzB,GAAIC,EAAqB,wDAClF,OAAOb,IAAQc,KAAR,UACF7B,EADE,qBACkByB,EADlB,cAEL,CACEC,OACAC,cACA,OAAUC,KAIHE,EAAqB,SAACL,EAAQM,EAAYC,GACrD,OAAOjB,IAAQc,KAAR,UACF7B,EADE,qBACkByB,EADlB,sBACsCM,EADtC,WAEL,CAACC,UC1CCC,E,kDAEJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CAAET,KAAM,IACrB,EAAKS,MAAQ,CAAEC,MAAO,IACtB,EAAKD,MAAQ,CAAEE,gBAAgB,GALb,E,gEAQE,IAAD,OACf1B,KACFU,IACGiB,MAAK,SAACC,GACL,EAAKC,SAAS,CACZH,gBAAgB,EAChBD,MAAOG,EAAIE,KAAKC,OAAO,GAAGC,IAC1BjB,KAAMa,EAAIE,KAAKG,oB,+BAOvB,OACE,kBAAC,IAAD,CACFC,MAAM,YACNC,SAAYC,KAAKZ,MAAME,eAAX,iBAAsCU,KAAKZ,MAAMT,KAAjD,KAA2D,iBACvEsB,MAAO,CACL,kBAAC,IAAD,CAAQC,ICrCM,IDqCoBC,MAAO,CAACC,UAAW,QAAQ,kBAACC,EAAA,EAAD,CAAMC,GCrCrD,KDqC+C,SAC7D,kBAAC,IAAD,CAAQJ,ICrCO,SDqCoBC,MAAO,CAACC,UAAW,QAAQ,kBAACC,EAAA,EAAD,CAAMC,GCrCrD,UDqC+C,gBAC9D,kBAAC,IAAD,CAAQJ,ICrCI,MDqCoBC,MAAO,CAACC,UAAW,QAAQ,kBAACC,EAAA,EAAD,CAAMC,GCrCrD,ODqC+C,cAC3D,kBAAC,IAAD,CAAQJ,ICrCQ,UDqCoBC,MAAO,CAACC,UAAW,QAAQ,kBAACC,EAAA,EAAD,CAAMC,GCrCrD,WDqC+C,YAEjEC,OAASP,KAAKZ,MAAME,eAAiB,CAACkB,IAAKR,KAAKZ,MAAMC,OAAS,W,GAlC9CoB,IAAMC,WAwCZC,cAAWzB,G,0BE3CL0B,G,6KJkBO/C,aAAagD,WAAW,WIdhDb,KAAKc,gB,qCAIL,OAAO,yBAAKC,UAAU,UACnBnD,IACG,kBAAC,IAAD,CAAQoD,KAAK,IAAIb,MAAO,CAAEc,WAAY,mBAAoBC,MAAO,OAAQC,QAAS,OAAQC,OAAQ,SAAUC,MAAO,QAASC,OAAQ,OAAQC,aAAc,QAASC,WAAY,SAAUC,eAAgB,SAAUC,OAAQ,WAAaC,QAAS3B,KAAK4B,OAAOC,KAAK7B,OAAlQ,UACA,kBAAC,IAAD,CAAQgB,KAAK,IAAIb,MAAO,CAAEc,WAAY,UAAWC,MAAO,OAAQC,QAAS,OAAQC,OAAQ,SAAUC,MAAO,QAASC,OAAQ,OAAQC,aAAc,QAASC,WAAY,SAAUC,eAAgB,SAAUC,OAAQ,WAAaI,KAAM5E,KAArO,Y,+BAKN,OACE,6BACE,wBAAIiD,MAAO,CAAC4B,UAAW,WAAvB,aAA4C,0BAAMC,KAAK,MAAMC,aAAW,SAA5B,iBAC5C,wBAAI9B,MAAO,CAAC4B,UAAW,WAAvB,gFAGC/B,KAAKkC,oB,GAtBoBzB,IAAMC,Y,uECGxCyB,IAAYnE,K,ICkBRoE,EAAWC,EAAQC,ECAnBF,ECAAA,EHhBiBG,E,WAEnB,WAAaC,GAAW,oBACtBxC,KAAKyC,UAAY,GACjBzC,KAAK0C,gBAAkB,GACvB1C,KAAK2C,cAAgB,KACrB3C,KAAKwC,SAAL,aACEI,aAAc,mBACXJ,G,wDAIMK,GACX,IAAIC,EAASC,IAAKC,MAAMH,EAAU,CAChCI,QAAQ,IAEV,GAAIH,EAAOI,OAAOC,SAAWL,EAAOpD,KAAKyD,OACvC,MAAM,IAAIC,MAAM,gCAElBN,EAAOpD,KAAK2D,MACZ,IAAK,IAAIC,EAAQ,EAAGR,EAAOpD,KAAKyD,OAASG,EAAOA,IAAS,CACvD,IACEC,EAAQT,EAAOpD,KAAK4D,GACpBE,EAAOC,OAAOD,KAAKD,GACrB,IAAKC,EAAKE,SAAS,UAAYF,EAAKE,SAAS,YAAcF,EAAKE,SAAS,SACvE,MAAM,IAAIN,MAAM,iDAElBpD,KAAKyC,UAAUpF,KAAK,CAClBiG,QACA3E,KAAiB4E,EAAMI,KACvBC,OAAiBL,EAAMM,OACvBC,MAAiBP,EAAMQ,MACvBC,SAAiBT,EAAMU,SACvBC,UAAiBX,EAAM,cACvBY,WAAiBZ,EAAM,eACvBa,MAAiBb,EAAMc,MACvBC,WAAiBf,EAAM,eACvBgB,YAAiBhB,EAAM,gBACvBiB,KAAiBjB,EAAMkB,KACvB9B,cAAiB,UACjB+B,eAAiB,KACjBC,gBAAiB,U,oCAKRC,GACb,IADuB,EACnBC,EAAI,EADe,cAELD,EAASlF,KAAKoF,OAFT,IAEvB,2BAAuC,CAAC,IAA/BC,EAA8B,QACrC/E,KAAKyC,UAAUpF,KAAK,CAClBiG,MAAiBuB,EACjBlG,KAAiBoG,EAAMjF,MACvB8D,OAAiBmB,EAAMnB,OAGvBM,UAAiB,IACjBC,WAAiB,IACjBK,KAAiB,IAAIQ,KAAkB,IAAbD,EAAME,MAAaC,cAC7CvC,cAAiB,UACjB+B,eAAiB,KACjBC,gBAAiB,OAEnBE,KAhBqB,iC,wCAoBND,GACjB5E,KAAKyC,UAAYmC,EAASlF,O,6BAGpByF,GAEN,IADA,IAAMC,EAAc,GACXC,EAAI,EAAGF,EAAQhC,OAASkC,EAAGA,IAClCD,EAAY/H,KAAK2C,KAAKyC,UAAU0C,EAAQE,KAE1CrF,KAAKyC,UAAY2C,I,kCAONE,GAEX,IADA,IAAMC,EAAS,GACNjC,EAAQ,EAAGtD,KAAKyC,UAAUU,OAASG,EAAOA,IAC7CtD,KAAKyC,UAAUa,GAAOX,gBAAkB2C,GAC1CC,EAAOlI,KAAK2C,KAAKyC,UAAUa,IAG/B,OAAOiC,I,yCAGWC,EAAYC,GAC9B,IAAMlC,EAAQvD,KAAKyC,UAAU+C,GACzBE,EAAgBC,oBAAUpC,EAAMmB,eAAgB,CAACe,OAGrD,OAFAlC,EAAMoB,gBAAkBpB,EAAMmB,eAAegB,GAC7C1F,KAAK4F,gBACE5F,O,uCAGSsF,GAIhB,OAHAtF,KAAK2C,cAAgB2C,EACrBtF,KAAK4F,gBAEE5F,O,+BAGC6F,GACR7F,KAAK0C,gBAAgBrF,KAAKwI,K,sCAI1B,IAAK,IAAIvC,EAAQ,EAAGtD,KAAK0C,gBAAgBS,OAASG,EAAOA,IACvDtD,KAAK0C,gBAAgBY,O,oCAKvBtD,KAAK8F,cAAgBC,WAAW/F,KAAKgG,QAAQnE,KAAK7B,MAAO,K,oCAG5CuD,GAGb,IAFA,IAAM0C,EAAe,CAAC,SAAU,WAAY,UAAW,aAAc,cAAe,eAAgB,UAAW,eAAgB,gBAAiB,UAC5IC,EAAUlG,KAAKwC,SAASI,aACnBU,EAAQ,EAAG2C,EAAa9C,OAASG,EAAOA,IAC/C4C,EAAUA,EAAQC,QAAQF,EAAa3C,GAAQC,EAAM0C,EAAa3C,GAAO8C,MAAM,GAAI,KAErF,OAAOF,I,6BAGDhG,EAAK6E,GAGX,OAFA/E,KAAKwC,SAAStC,GAAO6E,EAEd/E,O,gCAKP,IAFU,IACNuD,EADK,OAEAD,EAAQ,EAAGtD,KAAKyC,UAAUU,OAASG,EAAOA,IACjD,GAA4C,YAAxCtD,KAAKyC,UAAUa,GAAOX,cAA6B,CACrDY,EAAQvD,KAAKyC,UAAUa,GACvB,MAGJ,IAAKC,EAGH,OAFAvD,KAAK2C,cAAgB,sBACrB3C,KAAK4F,gBAGP5F,KAAK2C,cAAgB,YACrBY,EAAMZ,cAAgB,YACtB3C,KAAK4F,gBACL5H,IAAMO,IAAN,UACKtB,EADL,cAEE,CACEoJ,UAAW,SACXjI,QAAW,CACTC,cAAc,UAAD,OAAYN,MAE3BuI,OAAW,CACTC,KAAO,QACPC,EAAOxG,KAAKyG,cAAclD,GAC1BmD,MAAO,MAIVnH,MAAK,SAACC,GACL+D,EAAMZ,cAA0C,IAA1BnD,EAAIE,KAAKiH,OAAOC,MAAc,WAAa,aACjErD,EAAMmB,eAAiBlF,EAAIE,KAAKiH,OAAO7B,MACnCtF,EAAIE,KAAKiH,OAAOC,QAClBrD,EAAMoB,gBAAkBnF,EAAIE,KAAKiH,OAAO7B,MAAM,IAChD,EAAKgB,cAAgBC,WAAW,EAAKC,QAAQnE,KAAK,GAAO,OAE1DgF,OAAM,SAACC,GACNvD,EAAMZ,cAAgB3E,IAAM+I,SAASD,GAAS,UAAY,YAE3DE,SAAQ,WACP,EAAKpB,qB,oCAMT5F,KAAK2C,cAAgB,SACrBsE,aAAajH,KAAK8F,eAClB9F,KAAK4F,gBACL5H,IAAMkJ,OAAO,Y,+BA3Gb,OAAOlH,KAAKyC,c,kDIjFK0E,E,2KAELC,GAAO,IAAD,OACdC,EAAS,IAAIC,WAqBjB,OApBAD,EAAOE,WAAWH,EAAM,SACxBC,EAAOG,OAAS,SAACC,GACf,IAAMC,EAAOD,EAAIE,OAAOC,OACxB,IACE,EAAKzI,MAAM0D,SAASgF,YAAYH,GAChC,EAAKvI,MAAM2I,WAEb,MAAOhB,GACLiB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAakI,EAAMkB,YAIzBX,EAAOY,QAAU,SAAUR,GACzBM,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAa,oDAGV,I,+BAIP,OAAO,kBAAC,IAAD,CAAMuB,MAAO,CAAC+H,YAAa,OAAQC,WAAY,OAAQC,SAAU,QAASrG,UAAW,WAC1F,6HACiG,6BADjG,+EAE8E,sCAF9E,UAEsG,6BAFtG,8CAKA,kBAAC,IAAD,CAAQsG,aAAcrI,KAAKqI,aAAaxG,KAAK7B,MAAOsI,SAAU,IAC5D,kBAAC,IAAD,CAAQC,OAAQ,kBAAC,IAAD,MAA0BpI,MAAO,CAACe,MAAO,UAAWD,WAAY,UAAWS,OAAQ,YAAnG,qB,GAnCgCjB,IAAMC,W,8BCCzB8H,G,4MAEnBpJ,MAAQ,CACNqJ,gBAAiB,I,EAQnBC,eAAiB,SAACD,GAChB,EAAKhJ,SAAS,CAACgJ,qB,yDALfzI,KAAKb,MAAM0D,SAAS8F,OAAO3I,KAAKZ,MAAMqJ,iBACtCzI,KAAKb,MAAMyJ,S,uCAOM,IACVH,EAAmBzI,KAAKZ,MAAxBqJ,gBACDI,EAAcJ,EAAgBtF,OAAS,EAC7C,OAAO,yBAAKhD,MAAO,CAACiB,OAAQ,SAAUW,UAAW,UAC1C,0BAAM5B,MAAO,CAAC+H,YAAa,IACzBW,EAAW,mBAAeJ,EAAgBtF,OAA/B,UAAgD,IAElE,kBAAC,IAAD,CACAnC,KAAK,IACLb,MAAO,CAAEc,WAAY,UAAWC,MAAO,OAAQK,aAAc,SAC7DI,QAAS3B,KAAK8I,SAASjH,KAAK7B,MAC5B+I,UAAWF,GACT,yBACA1H,QAAQ,QACJ,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,W,+BAOnD,IAEHa,EAAe,CACnBP,gBAFwBzI,KAAKZ,MAAxBqJ,gBAGLQ,SAAUjJ,KAAK0I,gBAEjB,OACE,yBAAKvI,MAAO,CAAC+I,QAAS,QACnBlJ,KAAKmJ,iBACN,kBAAC,KAAD,CACEH,aAAcA,EACdI,QAAS,CACP,CACEtJ,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfC,OAAQ,QACRC,WAAYvJ,KAAKb,MAAM0D,SAASA,SAChC2G,YAAY,EACZC,UAAQ,IAETzJ,KAAKmJ,sB,GAnE0B1I,IAAMC,W,gKCTjCgJ,GAAgB,SAACC,GAC5B,IAAM1E,EAAO,IAAID,KAAK,MAEtB,OADAC,EAAK2E,WAAWD,GACT1E,EACJ4E,cACAC,OAAO,GAAI,ILsBVC,GAAWC,KAAKC,KAEhBC,G,4MAEJ9K,MAAQ,CACN+K,aAAiB,KACjBC,iBAAiB,G,kEAGG,IAAD,OACnBpK,KAAKb,MAAM0D,SAASoG,UAAS,WAC3B,EAAKnI,mB,8BAIAuJ,GACP,IAAIC,GAAmB,EAChBzH,EAAY7C,KAAKb,MAAjB0D,SACAF,EAAiBE,EAAjBF,cACPP,EAAY,EACZC,EAAS,EACTC,EAAS,EACT,IAAK,IAAIgB,EAAQ,EAAGT,EAASA,SAASM,OAASG,EAAOA,IACL,eAA3CT,EAASA,SAASS,GAAOX,gBAC3B2H,GAAmB,GAE0B,YAA3CzH,EAASA,SAASS,GAAOX,eAC3BP,IAE6C,eAA3CS,EAASA,SAASS,GAAOX,eAC3BN,IAE6C,aAA3CQ,EAASA,SAASS,GAAOX,eAC3BL,IAIJ,OADAF,EAAYmI,KAAKC,MAAMpI,EAAUS,EAASA,SAASM,OAAO,KACnD,yBAAKhD,MAAO,CAACiB,OAAQ,SAAUW,UAAW,UAC/C,kBAAC,IAAD,CACEf,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,GAC7E2I,SAA4B,WAAlBpG,GAAgD,OAAlBA,EACxChB,QAAS3B,KAAKyK,OAAO5I,KAAK7B,MAC1BuG,KAAK,UALP,gBASA,kBAAC,IAAD,CACEvF,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,GAC7E2I,SAA4B,cAAlBpG,EACVhB,QAAS3B,KAAK0K,MAAM7I,KAAK7B,OAEzB,yBAAKmB,QAAQ,QACT,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,QACG,kBAAC,KAAD,CAAaJ,MAAO,GAAIC,OAAQ,GAAInB,MAAO,CAACgI,WAAY,QAIjE,kBAAC,KAAD,CACEwC,QAAQ,QACRN,UAAyB,QAAdA,EAAsB,cAAgB,WACjDO,QAAS5K,KAAKwC,YAEd,kBAAC,IAAD,CACExB,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,IAE7E,yBAAKe,QAAQ,QACX,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,kBACa,kBAAC,KAAD,CAAuBJ,MAAO,GAAIC,OAAQ,GAAInB,MAAO,CAACgI,WAAY,SAOxD,mBAA3BtF,EAASF,eACT,kBAAC,KAAD,CACE7C,MAAM,4EACN+K,UAAW7K,KAAK8I,SAASjH,KAAK7B,MAC9B8K,OAAO,MACPT,UAAyB,QAAdA,EAAsB,cAAgB,WACjDU,WAAW,MACX,kBAAC,IAAD,CACExE,KAAK,UACLvF,KAAM,QACN+H,SAAUuB,EACVnK,MAAO,CAACoB,aAAc,QAASG,OAAQ,UAAWtB,UAAW,IAE7D,yBAAKe,QAAQ,QACX,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,SAO/B,mBAA3BtF,EAASF,eACT,kBAAC,IAAD,CACE4D,KAAK,OACLvF,KAAM,QACNb,MAAO,CAAEc,WAAY,UAAWC,MAAO,OAAQK,aAAc,QAASnB,UAAW,GACjFuB,QAAS3B,KAAK8I,SAASjH,KAAK7B,MAC5B+I,SAAUuB,GAEV,yBAAKnJ,QAAQ,QACT,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,W,iCAU9DnI,KAAKb,MAAM2J,a,8BAIX9I,KAAKb,MAAM0D,SAASmI,gB,+BAIpBhL,KAAKb,MAAM0D,SAASoI,gB,iCAGV1H,GAEV,OADeA,EAAMZ,eAEnB,QACA,IAAK,UACH,OAAO,kBAAC,KAAD,CAAKzB,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,WACT,IAAK,SACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,UACT,IAAK,YACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,aACT,IAAK,WACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,aACT,IAAK,aACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,Y,mCAICmG,EAAMwD,GAAM,IAAD,OACjB5F,EAAS4F,EAAIvI,cACnB,OAAO,yBAAKxC,MAAO,CAACgB,QAAS,OAAQK,WAAY,WAC9CxB,KAAKmL,WAAWD,GAEJ,eAAX5F,GACA,kBAAC,IAAD,CACEnF,MAAO,CAACoB,aAAc,SACtBP,KAAM,QACNW,QAAS,WACP,EAAKlC,SAAS,CAAC0K,aAAce,EAAI5H,MAAO8G,iBAAiB,MACxD,kBAAC,KAAD,CAAuB/I,MAAO,GAAIC,OAAQ,S,iCAIxC,IACJ8J,EAAqBpL,KAAKb,MAAMkM,KAAhCD,kBACP,OACE,kBAAC,KAAD,CACEjL,MAAO,CAACkB,MAAO,KACfiK,SAAUtL,KAAKuL,iBAAiB1J,KAAK7B,OAErC,kBAAC+J,GAAD,CACEyB,MAAM,gBACNC,KAAK,mIAEJL,EAAkB,eACjB,CACEM,aAAc1L,KAAKb,MAAM0D,SAASL,SAASI,aAC3C+I,MAAc,CAAC,CAACC,UAAU,EAAM5D,QAAS,4BAH5CoD,CAKC,kBAAC,KAAD,CAAOS,YAAY,oBAGvB,kBAAC9B,GAAD,CAAU5J,MAAO,CAAC2L,aAAc,IAC9B,kBAAC,IAAD,CACEvF,KAAK,UACLpG,MAAO,CAACkB,MAAO,QACf0K,SAAS,UACV,yBAAK5K,QAAQ,QACd,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,SAAUC,OAAQ,YAAtF,OACM,kBAAC,KAAD,CAAoBL,MAAO,GAAIC,OAAQ,GAAKnB,MAAO,CAACgI,WAAY,Y,uCAS5D6D,GAChBA,EAAEC,iBADiB,IAEZ9M,EAASa,KAATb,MACPA,EAAMkM,KAAKa,gBAAe,SAAChJ,EAAQiJ,GAC5BjJ,GACHkJ,eAAKD,GAAQ,SAACpH,EAAO7E,GACnBf,EAAM0D,SAASwJ,OAAOnM,EAAK6E,W,0CAMb,IAGhBxB,EAAkB+I,EAHH,OACZzJ,EAAY7C,KAAKb,MAAjB0D,SACAsH,EAAgBnK,KAAKZ,MAArB+K,aACIzK,EAAO,GAClB,GAAgC,OAA5BM,KAAKZ,MAAM+K,aAAuB,CACpC5G,EAAQV,EAASA,SAASsH,GAC1BmC,EAAgBzJ,EAASA,SAASsH,GAAcxF,gBAChD,IAAK,IAAIrB,EAAQ,EAAGC,EAAMmB,eAAevB,OAASG,EAAOA,IAAS,CAChE,IAAIiJ,EAAehJ,EAAMmB,eAAepB,GACxC5D,EAAKrC,KAAK,CACRiG,QACAmC,GAAa8G,EAAa9G,GAC1B9G,KAAa4N,EAAa5N,KAC1B6N,KAAaD,EAAaE,cAAcC,QACxCC,MAAaJ,EAAazI,MAAMnE,OAAO,GAAGC,IAC1CgN,SAAaL,EAAaM,YAAc,IACxCtI,YAAagI,EAAaO,aAC1BC,WAAaR,EAAaS,QAAQ,GAAGrO,KACrCsO,WAAaV,EAAaS,QAAQ,GAAGP,cAAcC,QACnDQ,UAAaX,EAAazI,MAAMnF,KAChCwO,UAAaZ,EAAazI,MAAM2I,cAAcC,QAC9CnJ,MAAagJ,KAInB,OAAO,kBAAC,KAAD,CACLzM,MAAM,gBACNsN,QAASpN,KAAKZ,MAAMgL,gBACpBiD,OAAQ,KACRC,SAAU,WACR,EAAK7N,SAAS,CAAC2K,iBAAiB,IAChCrE,YAAW,kBAAM,EAAKtG,SAAS,CAAC0K,aAAc,SAAQ,OAGxD,kBAAC,KAAD,CACEoD,WAAW,aACXhE,WAAY7J,EACZ8N,WAAY,SAAAC,GACV,IAAMC,EAAe,kBAAC,KAAD,CACnBC,QAASrB,EAAc7G,KAAOgI,EAAKhI,GACnCwD,SAAU,WACRpG,EAAS+K,mBAAmBzD,EAAcsD,EAAKhI,OAEnD,OAAO,kBAAC,KAAKwE,KAAN,CAAW4D,QAAS,CAACH,IAC1B,kBAAC,KAAKzD,KAAK6D,KAAX,CACEvN,OAAQ,kBAAC,KAAD,CAAQC,IAAKiN,EAAKd,MAAO3L,KAAK,UACtCpC,YAAa,qCAAU,uBAAGkD,KAAM2L,EAAKN,WAAYM,EAAKP,WAAzC,MAA2DxD,GAAc+D,EAAKb,WAC3F9M,MAAO,uBAAGiO,IAAI,sBAAsBjM,KAAM2L,EAAKjB,KAAM7E,OAAO,UAAU8F,EAAKV,WAApE,MAAmFU,EAAK9O,e,+BASzG,OAAO,6BACL,yBAAKwB,MAAO,CAACiI,SAAU7K,OAAOyQ,WAA6B,GAAlBzQ,OAAOyQ,WAAgB9F,YAAa,OAAQC,WAAY,OAAQpG,UAAW,WACpH,kBAAC,KAAD,CAAUkM,QAAS5L,IACnB,kBAAC,KAAD,CAAU4L,QAAS3L,EAAQgD,OAAO,cAClC,kBAAC,KAAD,CAAU2I,QAAS7L,EAAWkD,OAAO,SAAS4I,YAAa,CACzD,KAAM,UACN,OAAQ,cAGTlO,KAAKmO,QAAQ,OACd,kBAAC,KAAD,CACE7E,OAAO,QACPF,QAAS,CACP,CACEtJ,MAAW,SACXuJ,UAAW,SACXhI,MAAW,MACX+M,OAAWpO,KAAKqO,aAAaxM,KAAK7B,OAEpC,CACEF,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfE,WAAYvJ,KAAKb,MAAM0D,SAASA,SAChC2G,YAAY,EACZC,UAAQ,IAETzJ,KAAKmO,QAAQ,UACbnO,KAAKsO,yB,GA5Sa7N,IAAMC,WAsThBsJ,QAAK7L,QAAL6L,CAAcE,I,mEM5UvBH,GAAWC,KAAKC,KACfsE,GAAYC,KAAZD,SAEDE,G,4MAEJrP,MAAQ,CACNyD,SAA4B,KAC5B6L,cAA4B,KAC5BC,mBAA4B,EAC5BC,oBAA4B,EAC5BC,4BAA4B,EAC5BC,aAA4B,G,kEAGR,IAAD,OACnB9O,KAAKb,MAAM0D,SAASoG,UAAS,WAC3B,EAAKnI,mB,uCAIU,IAAD,OACiB,OAA7Bd,KAAKZ,MAAMsP,gBAGf1O,KAAKP,SAAS,CAACkP,mBAAmB,IAClCnQ,IACGe,MAAK,SAACC,GACL,EAAKC,SAAS,CACZkP,mBAAmB,EACnBD,cAAmBlP,EAAIE,UAG1BmH,OAAM,WACLkI,MAAM,mD,4CAIY,IAAD,OACrB,OAAO,kBAAC,KAAD,CAAMpN,QAAS,SAACqN,GACrB,EAAKvP,SAAS,CACZoD,SAAUmM,EAAMvB,KAAKtO,MAAM0D,WAC1B,WACD,EAAKoM,kBAGuB,OAA7BjP,KAAKZ,MAAMsP,cAAyB,KAAO1O,KAAKZ,MAAMsP,cAAc5J,MAAMoK,KAAI,SAACrM,EAAUS,GACxF,OAAO,kBAAC,KAAK2G,KAAN,CAAW/J,IAAKoD,EAAOT,SAAUA,GACrCA,EAASlE,Y,4CAMM,IAAD,OACdyM,EAAqBpL,KAAKb,MAAMkM,KAAhCD,kBACP,OAAO,kBAAC,KAAD,CACLtL,MAAM,kBACNqP,UAAU,EACVC,cAAc,EACdhC,QAASpN,KAAKZ,MAAMyP,2BACpBvB,SAAU,kBAAM,EAAK7N,SAAS,CAACoP,4BAA4B,KAC3DxB,OAAQ,CACN,kBAAC,IAAD,CAAQlN,MAAO,CAACuB,OAAQ,WAAYxB,IAAI,OAAOyB,QAAS,kBAAM,EAAKlC,SAAS,CAACoP,4BAA4B,MAAzG,UACA,kBAAC,IAAD,CAAQ1O,MAAO,CAACuB,OAAQ,WAAYxB,IAAI,SAASqG,KAAK,UAAU8I,QAASrP,KAAKZ,MAAMwP,mBAAoBjN,QAAS3B,KAAKvB,eAAeoD,KAAK7B,OAA1I,YAKF,kBAAC,KAAD,CAAMsL,SAAUtL,KAAKvB,eAAeoD,KAAK7B,OACvC,kBAAC,GAAD,KACGoL,EAAkB,OAAQ,CACzBkE,gBAAiB,SACjB3D,MAAiB,CACf,CACEC,UAAU,EACV5D,QAAU,yBALfoD,CASC,kBAAC,KAAD,CAAOS,YAAY,oBAGvB,kBAAC,GAAD,KACGT,EAAkB,cAAe,CAChCM,aAAc,IADfN,CAGC,kBAACmD,GAAD,CAAUgB,UAAU,EAAM1D,YAAY,2BAG1C,kBAAC,GAAD,KACGT,EAAkB,WAAY,CAC7BM,cAAc,GADfN,CAGC,kBAAC,KAAD,CAAUoE,gBAAgB,GAA1B,oC,qCAOMxD,GAAI,IAAD,OACbA,GACFA,EAAEC,iBACJjM,KAAKb,MAAMkM,KAAKa,gBAAe,SAACuD,EAAKtD,GAC9BsD,IACH,EAAKhQ,SAAS,CACZmP,oBAAoB,IAEtBnQ,EACE,EAAKU,MAAMuQ,KAAKjK,GAChB0G,EAAOxN,KACPwN,EAAOvN,YACPuN,EAAOtN,UAENU,MAAK,SAACC,GACL,EAAKC,SAAS,CACZmP,oBAA4B,EAC5BC,4BAA4B,EAC5BhM,SAA4BrD,EAAIE,OAElC,EAAKuP,gBAENpI,OAAM,WACLkI,MAAM,mE,8JAQd/O,KAAKb,MAAM0D,SAAS8M,iBAAiB,aAC/BC,EAAQ5P,KAAKb,MAAM0D,SAASgN,YAAY,cACxCC,EAASC,gBAAMH,EAAO,KACnBtM,EAAQ,E,YAAGwM,EAAO3M,OAASG,G,iBAElC,IADI0M,EAAW,GACNC,EAAY,EAAGH,EAAOxM,GAAOH,OAAS8M,EAAWA,IACxDD,EAAS3S,KAAKyS,EAAOxM,GAAO2M,GAAWtL,gBAAgBuL,K,gBAEnDnR,EAAmBiB,KAAKb,MAAMuQ,KAAKjK,GAAIzF,KAAKZ,MAAMyD,SAAS4C,GAAIuK,G,OAL5B1M,I,uBAO3CtD,KAAKb,MAAM0D,SAAS8M,iBAAiB,Q,2IAIrC,OACE,kBAAC,KAAD,CACEN,QAASrP,KAAKZ,MAAM0P,YACpBrF,UAAU,EACVH,OAAO,QACPF,QAAS,CACP,CACEtJ,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfE,WAAYvJ,KAAKb,MAAM0D,SAASgN,YAAY,cAC5CrG,YAAY,M,+BAIP,IAAD,OAER,MAA+B,SADZxJ,KAAKb,MAAjB0D,SACMF,cACJ,kBAAC,KAAD,CACLqF,QAAQ,qBACRpJ,YAAa,oDACS,6BACpB,uBAAGkD,KAAM9B,KAAKZ,MAAMyD,SAAS4J,cAAcC,SAAU1M,KAAKZ,MAAMyD,SAASlE,OAE3E4H,KAAK,UACL4J,UAAQ,IAGL,6BACoB,OAAxBnQ,KAAKZ,MAAMyD,UACZ,kBAAC,IAAD,CAAM1C,MAAO,CAAC+H,YAAa,OAAQC,WAAY,OAAQC,SAAU,QAASrG,UAAW,WACnF,0GAGA,kBAAC,IAAD,CACEwE,KAAK,OACLvF,KAAM,QACNW,QAAS,kBAAM,EAAKlC,SAAS,CAACoP,4BAA4B,KAC1D1O,MAAO,CAACgI,WAAY,EAAG/H,UAAW,GAAImB,aAAc,QAAS6G,SAAU,QAAS9G,OAAQ,OAAQL,WAAY,UAAWC,MAAO,OAAQQ,OAAQ,YAJhJ,yBAOA,kBAAC,KAAD,CAAUiJ,QAAS,CAAC,SAAUyF,QAASpQ,KAAKqQ,sBAAuBhG,UAAU,cAC3E,kBAAC,IAAD,CACE9D,KAAK,OACLvF,KAAM,QACNW,QAAS3B,KAAKsQ,eAAezO,KAAK7B,MAClCqP,QAASrP,KAAKZ,MAAMuP,kBACpBxO,MAAO,CAACgI,WAAY,EAAG/H,UAAW,GAAImB,aAAc,QAAS6G,SAAU,QAAS9G,OAAQ,OAAQL,WAAY,UAAWC,MAAO,OAAQQ,OAAQ,YALhJ,iCAUqB,OAAxB1B,KAAKZ,MAAMyD,UAAqB7C,KAAKuQ,cAErCvQ,KAAKwQ,2B,GA7Ma/P,IAAMC,WAuNhBsJ,QAAK7L,QAAL6L,CAAcyE,ICtNRgC,G,kDASnB,aAAgB,IAAD,8BACb,gBARFrR,MAAQ,CACNsR,YAAgB,EAChBpR,gBAAgB,EAChBoQ,KAAgB,KAChBiB,KAAgB,GAKhB,EAAKC,mBAAqB,IAAIrO,EAAmB,IAFpC,E,iEAKQ,IAAD,OAChB3E,MACFoC,KAAKP,SAAS,CACZH,gBAAgB,IAElBhB,IACGiB,MAAK,SAACC,GACL,EAAKC,SAAS,CACZH,gBAAgB,EAChBoQ,KAAgBlQ,EAAIE,UAGvBmH,OAAM,WACLkI,MAAM,oF,8BAKJ,IAAD,OACP,OAAO,kBAAC,EAAD,CACLlM,SAAU7C,KAAK4Q,mBACf9I,SAAU,WACR,EAAKrI,SAAS,CACZkR,KAAM,S,8BAMJ,IAAD,OACP,OAAO,kBAAC,GAAD,CACL9N,SAAU7C,KAAK4Q,mBACfhI,KAAM,kBAAM,EAAKnJ,SAAS,CAACkR,KAAM,S,8BAI3B,IAAD,OACP,OAAO,kBAACE,GAAD,CACLhO,SAAU7C,KAAK4Q,mBACf9H,SAAU,kBAAM,EAAKrJ,SAAS,CAACkR,KAAM,S,8BAKvC,OAAO,kBAACG,GAAD,CACLpB,KAAM1P,KAAKZ,MAAMsQ,KACjB7M,SAAU7C,KAAK4Q,uB,gCAKjB,OAAQ5Q,KAAKZ,MAAMuR,MACjB,QACA,KAAK,EACH,OAAO3Q,KAAK+Q,QACd,KAAK,EACH,OAAO/Q,KAAKgR,QACd,KAAK,EACH,OAAOhR,KAAKiR,QACd,KAAK,EACH,OAAOjR,KAAKkR,W,+BAKhB,IAAMC,EAAOC,IAAMD,KACnB,OAAKvT,IAGDoC,KAAKZ,MAAME,eACN,uBAAGa,MAAO,CAAC4B,UAAW,WAAtB,yBAGP,6BACE,wBAAI5B,MAAO,CAAE4B,UAAW,SAAUb,MAAO,YAAzC,eAAsE,6BACtE,kBAAC,IAAD,CAAOmQ,QAASrR,KAAKZ,MAAMuR,MACzB,kBAACQ,EAAD,CAAMrR,MAAM,kBAAkBlB,YAAY,yBAC1C,kBAACuS,EAAD,CAAMrR,MAAM,wBAAwBlB,YAAY,sDAChD,kBAACuS,EAAD,CAAMrR,MAAM,sBAAsBlB,YAAY,mDAC9C,kBAACuS,EAAD,CAAMrR,MAAM,eAAelB,YAAY,iDAEzC,yBAAKuB,MAAO,CAACC,UAAW,KACrBJ,KAAK4K,YAfH,wBAAIzK,MAAO,CAAC4B,UAAW,WAAvB,gC,GAjFsBtB,IAAMC,W,qBCHpB4Q,G,kDACnB,WAAanS,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAE2J,UAAU,GAFP,E,qDAKT,IAAD,OACR,OAAO,kBAAC,IAAD,CAAM5I,MAAO,CAAC+H,YAAa,OAAQC,WAAY,OAAQC,SAAU,QAASrG,UAAW,WAC1F,uFAGE,kBAAC,IAAD,CACAgH,SAAU/I,KAAKZ,MAAM2J,SACrBwI,UAAS,yCAAE,WAAOvF,GAAP,wBAAAwF,EAAA,yDACK,UAAVxF,EAAE9L,IADG,oBAEP,EAAKT,SAAS,CAAEsJ,UAAU,IAFnB,SAKP0I,EAAM,QACFC,EAAM1F,EAAErE,OAAO5C,OACX4M,OAAO,cAAgB,GAPxB,kBAQLD,EAAMA,EAAIE,MAAM,aACZC,OAAO,EAAG,GAEdH,GADAA,EAAMA,EAAI,GAAGI,YACHF,MAAM,KAChBlT,EAASqT,OAAOL,EAAI,GAAGvL,QAAQ,WAAY,KAC3CuL,EAAMA,EAAI,GAAGE,MAAM,KACnB5S,EAAa+S,OAAOL,EAAI,IACxBM,EAAaN,EAAI,GAfZ,6BAiBEA,EAAIC,OAAO,WAAa,GAjB1B,kBAkBLD,EAAMA,EAAIE,MAAM,UACZC,OAAO,EAAG,GAEdH,GADAA,EAAMA,EAAI,GAAGI,YACHF,MAAM,KAChBlT,EAASqT,OAAOL,EAAI,GAAGvL,QAAQ,WAAY,KAC3CnH,EAAa+S,OAAOL,EAAI,IACxBM,EAAaN,EAAI,GAxBZ,+BA2BL,EAAKjS,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAa,sCA9BV,oFAmCL,EAAKa,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAa,sCAtCV,sDA2CDZ,KAAMc,KAAK,+BAAgC,CAC/CY,KAAM,CACJhB,SAAQM,aAAYgT,aAAYP,SAGnClS,MAAK,SAACqF,GACL,IACA,EAAKzF,MAAM0D,SAASoP,cAAcrN,GAClC,EAAKzF,MAAM2I,WACT,SAAO,IAAD,IACN,EAAKrI,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,aAAa,UAAAgG,EAASlF,YAAT,eAAewS,WAAf,UAA2BtN,EAASlF,YAApC,aAA2B,EAAewS,UAAY,qBAxDlE,2DA6DP,EAAKzS,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAa,4CAhER,kEAAF,sDAoENiN,YAAY,2C,GAjFcpL,IAAMC,WCCtByR,G,4MAEnB/S,MAAQ,CACNqJ,gBAAiB,I,EAQnBC,eAAiB,SAACD,GAChB,EAAKhJ,SAAS,CAACgJ,qB,yDALfzI,KAAKb,MAAM0D,SAAS8F,OAAO3I,KAAKZ,MAAMqJ,iBACtCzI,KAAKb,MAAMyJ,S,uCAOM,IACVH,EAAmBzI,KAAKZ,MAAxBqJ,gBACDI,EAAcJ,EAAgBtF,OAAS,EAC7C,OAAO,yBAAKhD,MAAO,CAACiB,OAAQ,SAAUW,UAAW,UAC1C,0BAAM5B,MAAO,CAAC+H,YAAa,IACzBW,EAAW,mBAAeJ,EAAgBtF,OAA/B,UAAgD,IAElE,kBAAC,IAAD,CACAnC,KAAK,IACLb,MAAO,CAAEc,WAAY,UAAWC,MAAO,OAAQK,aAAc,SAC7DI,QAAS3B,KAAK8I,SAASjH,KAAK7B,MAC5B+I,UAAWF,GACT,yBACA1H,QAAQ,QACJ,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,W,+BAOnD,IAEHa,EAAe,CACnBP,gBAFwBzI,KAAKZ,MAAxBqJ,gBAGLQ,SAAUjJ,KAAK0I,gBAEjB,OACE,yBAAKvI,MAAO,CAAC+I,QAAS,QACnBlJ,KAAKmJ,iBACN,kBAAC,KAAD,CACEH,aAAcA,EACdI,QAAS,CACP,CACEtJ,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfC,OAAQ,QACRC,WAAYvJ,KAAKb,MAAM0D,SAASA,SAChC2G,YAAY,EACZC,UAAQ,IAETzJ,KAAKmJ,sB,GAnEuB1I,IAAMC,WRkBrCqJ,GAAWC,KAAKC,KAEhBmI,G,4MAEJhT,MAAQ,CACN+K,aAAiB,KACjBC,iBAAiB,G,kEAGG,IAAD,OACnBpK,KAAKb,MAAM0D,SAASoG,UAAS,WAC3B,EAAKnI,mB,8BAIAuJ,GACP,IAAIC,GAAmB,EAChBzH,EAAY7C,KAAKb,MAAjB0D,SACAF,EAAiBE,EAAjBF,cACPP,EAAY,EACZ,IAAK,IAAIkB,EAAQ,EAAGT,EAASA,SAASM,OAASG,EAAOA,IACL,eAA3CT,EAASA,SAASS,GAAOX,gBAC3B2H,GAAmB,GAE0B,YAA3CzH,EAASA,SAASS,GAAOX,eAC3BP,IAIJ,OADAA,EAAYmI,KAAKC,MAAMpI,EAAUS,EAASA,SAASM,OAAO,KACnD,yBAAKhD,MAAO,CAACiB,OAAQ,SAAUW,UAAW,UAC/C,kBAAC,IAAD,CACEf,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,GAC7E2I,SAA4B,WAAlBpG,GAAgD,OAAlBA,EACxChB,QAAS3B,KAAKyK,OAAO5I,KAAK7B,MAC1BuG,KAAK,UALP,gBASA,kBAAC,IAAD,CACEvF,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,GAC7E2I,SAA4B,cAAlBpG,EACVhB,QAAS3B,KAAK0K,MAAM7I,KAAK7B,OAEzB,yBAAKmB,QAAQ,QACT,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,QACG,kBAAC,KAAD,CAAaJ,MAAO,GAAIC,OAAQ,GAAInB,MAAO,CAACgI,WAAY,QAIjE,kBAAC,KAAD,CACEwC,QAAQ,QACRN,UAAyB,QAAdA,EAAsB,cAAgB,WACjDO,QAAS5K,KAAKwC,YAEd,kBAAC,IAAD,CACExB,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,IAE7E,yBAAKe,QAAQ,QACX,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,kBACa,kBAAC,KAAD,CAAuBJ,MAAO,GAAIC,OAAQ,GAAInB,MAAO,CAACgI,WAAY,SAOxD,mBAA3BtF,EAASF,eACT,kBAAC,KAAD,CACE7C,MAAM,4EACN+K,UAAW7K,KAAK8I,SAASjH,KAAK7B,MAC9B8K,OAAO,MACPT,UAAyB,QAAdA,EAAsB,cAAgB,WACjDU,WAAW,MACX,kBAAC,IAAD,CACExE,KAAK,UACLvF,KAAM,QACN+H,SAAUuB,EACVnK,MAAO,CAACoB,aAAc,QAASG,OAAQ,UAAWtB,UAAW,IAE7D,yBAAKe,QAAQ,QACX,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,SAO/B,mBAA3BtF,EAASF,eACT,kBAAC,IAAD,CACE4D,KAAK,OACLvF,KAAM,QACNb,MAAO,CAAEc,WAAY,UAAWC,MAAO,OAAQK,aAAc,QAASnB,UAAW,GACjFuB,QAAS3B,KAAK8I,SAASjH,KAAK7B,MAC5B+I,SAAUuB,GAEV,yBAAKnJ,QAAQ,QACT,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,W,iCAU9DnI,KAAKb,MAAM2J,a,8BAIX9I,KAAKb,MAAM0D,SAASmI,gB,+BAIpBhL,KAAKb,MAAM0D,SAASoI,gB,iCAGV1H,GAEV,OADeA,EAAMZ,eAEnB,QACA,IAAK,UACH,OAAO,kBAAC,KAAD,CAAKzB,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,WACT,IAAK,SACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,UACT,IAAK,YACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,aACT,IAAK,WACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,aACT,IAAK,aACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,Y,mCAICmG,EAAMwD,GAAM,IAAD,OACjB5F,EAAS4F,EAAIvI,cACnB,OAAO,yBAAKxC,MAAO,CAACgB,QAAS,OAAQK,WAAY,WAC9CxB,KAAKmL,WAAWD,GAEJ,eAAX5F,GACA,kBAAC,IAAD,CACEnF,MAAO,CAACoB,aAAc,SACtBP,KAAM,QACNW,QAAS,WACP,EAAKlC,SAAS,CAAC0K,aAAce,EAAI5H,MAAO8G,iBAAiB,MACxD,kBAAC,KAAD,CAAuB/I,MAAO,GAAIC,OAAQ,S,iCAIxC,IACJ8J,EAAqBpL,KAAKb,MAAMkM,KAAhCD,kBACP,OACE,kBAAC,KAAD,CACEjL,MAAO,CAACkB,MAAO,KACfiK,SAAUtL,KAAKuL,iBAAiB1J,KAAK7B,OAErC,kBAAC,GAAD,CACEwL,MAAM,gBACNC,KAAK,wEAEJL,EAAkB,eACjB,CACEM,aAAc1L,KAAKb,MAAM0D,SAASL,SAASI,aAC3C+I,MAAc,CAAC,CAACC,UAAU,EAAM5D,QAAS,4BAH5CoD,CAKC,kBAAC,KAAD,CAAOS,YAAY,oBAGvB,kBAAC,GAAD,CAAU1L,MAAO,CAAC2L,aAAc,IAC9B,kBAAC,IAAD,CACEvF,KAAK,UACLpG,MAAO,CAACkB,MAAO,QACf0K,SAAS,UACV,yBAAK5K,QAAQ,QACd,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,SAAUC,OAAQ,YAAtF,OACM,kBAAC,KAAD,CAAoBL,MAAO,GAAIC,OAAQ,GAAKnB,MAAO,CAACgI,WAAY,Y,uCAS5D6D,GAChBA,EAAEC,iBADiB,IAEZ9M,EAASa,KAATb,MACPA,EAAMkM,KAAKa,gBAAe,SAAChJ,EAAQiJ,GAC5BjJ,GACHkJ,eAAKD,GAAQ,SAACpH,EAAO7E,GACnBf,EAAM0D,SAASwJ,OAAOnM,EAAK6E,W,0CAMb,IAGhBxB,EAAkB+I,EAHH,OACZzJ,EAAY7C,KAAKb,MAAjB0D,SACAsH,EAAgBnK,KAAKZ,MAArB+K,aACIzK,EAAO,GAClB,GAAgC,OAA5BM,KAAKZ,MAAM+K,aAAuB,CACpC5G,EAAQV,EAASA,SAASsH,GAC1BmC,EAAgBzJ,EAASA,SAASsH,GAAcxF,gBAChD,IAAK,IAAIrB,EAAQ,EAAGC,EAAMmB,eAAevB,OAASG,EAAOA,IAAS,CAChE,IAAIiJ,EAAehJ,EAAMmB,eAAepB,GACxC5D,EAAKrC,KAAK,CACRiG,QACAmC,GAAa8G,EAAa9G,GAC1B9G,KAAa4N,EAAa5N,KAC1B6N,KAAaD,EAAaE,cAAcC,QACxCC,MAAaJ,EAAazI,MAAMnE,OAAO,GAAGC,IAC1CgN,SAAaL,EAAaM,YAAc,IACxCtI,YAAagI,EAAaO,aAC1BC,WAAaR,EAAaS,QAAQ,GAAGrO,KACrCsO,WAAaV,EAAaS,QAAQ,GAAGP,cAAcC,QACnDQ,UAAaX,EAAazI,MAAMnF,KAChCwO,UAAaZ,EAAazI,MAAM2I,cAAcC,QAC9CnJ,MAAagJ,KAInB,OAAO,kBAAC,KAAD,CACLzM,MAAM,gBACNsN,QAASpN,KAAKZ,MAAMgL,gBACpBiD,OAAQ,KACRC,SAAU,WACR,EAAK7N,SAAS,CAAC2K,iBAAiB,IAChCrE,YAAW,kBAAM,EAAKtG,SAAS,CAAC0K,aAAc,SAAQ,OAGxD,kBAAC,KAAD,CACEoD,WAAW,aACXhE,WAAY7J,EACZ8N,WAAY,SAAAC,GACV,IAAMC,EAAe,kBAAC,KAAD,CACnBC,QAASrB,EAAc7G,KAAOgI,EAAKhI,GACnCwD,SAAU,WACRpG,EAAS+K,mBAAmBzD,EAAcsD,EAAKhI,OAEnD,OAAO,kBAAC,KAAKwE,KAAN,CAAW4D,QAAS,CAACH,IAC1B,kBAAC,KAAKzD,KAAK6D,KAAX,CACEvN,OAAQ,kBAAC,KAAD,CAAQC,IAAKiN,EAAKd,MAAO3L,KAAK,UACtCpC,YAAa,qCAAU,uBAAGkD,KAAM2L,EAAKN,WAAYM,EAAKP,WAAzC,MAA2DxD,GAAc+D,EAAKb,WAC3F9M,MAAO,uBAAGiO,IAAI,sBAAsBjM,KAAM2L,EAAKjB,KAAM7E,OAAO,UAAU8F,EAAKV,WAApE,MAAmFU,EAAK9O,e,+BASzG,OAAO,6BACL,kBAAC,KAAD,CAAUsP,QAAS7L,EAAWkD,OAAO,WACpCtF,KAAKmO,QAAQ,OACd,kBAAC,KAAD,CACE7E,OAAO,QACPF,QAAS,CACP,CACEtJ,MAAW,SACXuJ,UAAW,SACXhI,MAAW,MACX+M,OAAWpO,KAAKqO,aAAaxM,KAAK7B,OAEpC,CACEF,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfE,WAAYvJ,KAAKb,MAAM0D,SAASA,SAChC2G,YAAY,EACZC,UAAQ,IAETzJ,KAAKmO,QAAQ,UACbnO,KAAKsO,yB,GA7RU7N,IAAMC,WAuSbsJ,QAAK7L,QAAL6L,CAAcoI,IS7TvBrI,GAAWC,KAAKC,KACfsE,GAAYC,KAAZD,SAED8D,G,4MAEJjT,MAAQ,CACNyD,SAA4B,KAC5B6L,cAA4B,KAC5BC,mBAA4B,EAC5BC,oBAA4B,EAC5BC,4BAA4B,EAC5BC,aAA4B,G,kEAGR,IAAD,OACnB9O,KAAKb,MAAM0D,SAASoG,UAAS,WAC3B,EAAKnI,mB,uCAIU,IAAD,OACiB,OAA7Bd,KAAKZ,MAAMsP,gBAGf1O,KAAKP,SAAS,CAACkP,mBAAmB,IAClCnQ,IACGe,MAAK,SAACC,GACL,EAAKC,SAAS,CACZkP,mBAAmB,EACnBD,cAAmBlP,EAAIE,UAG1BmH,OAAM,WACLkI,MAAM,mD,4CAIY,IAAD,OACrB,OAAO,kBAAC,KAAD,CAAMpN,QAAS,SAACqN,GACrB,EAAKvP,SAAS,CACZoD,SAAUmM,EAAMvB,KAAKtO,MAAM0D,WAC1B,WACD,EAAKoM,kBAGuB,OAA7BjP,KAAKZ,MAAMsP,cAAyB,KAAO1O,KAAKZ,MAAMsP,cAAc5J,MAAMoK,KAAI,SAACrM,EAAUS,GACxF,OAAO,kBAAC,KAAK2G,KAAN,CAAW/J,IAAKoD,EAAOT,SAAUA,GACrCA,EAASlE,Y,4CAMM,IAAD,OACdyM,EAAqBpL,KAAKb,MAAMkM,KAAhCD,kBACP,OAAO,kBAAC,KAAD,CACLtL,MAAM,kBACNqP,UAAU,EACVC,cAAc,EACdhC,QAASpN,KAAKZ,MAAMyP,2BACpBvB,SAAU,kBAAM,EAAK7N,SAAS,CAACoP,4BAA4B,KAC3DxB,OAAQ,CACN,kBAAC,IAAD,CAAQlN,MAAO,CAACuB,OAAQ,WAAYxB,IAAI,OAAOyB,QAAS,kBAAM,EAAKlC,SAAS,CAACoP,4BAA4B,MAAzG,UACA,kBAAC,IAAD,CAAQ1O,MAAO,CAACuB,OAAQ,WAAYxB,IAAI,SAASqG,KAAK,UAAU8I,QAASrP,KAAKZ,MAAMwP,mBAAoBjN,QAAS3B,KAAKvB,eAAeoD,KAAK7B,OAA1I,YAKF,kBAAC,KAAD,CAAMsL,SAAUtL,KAAKvB,eAAeoD,KAAK7B,OACvC,kBAAC,GAAD,KACGoL,EAAkB,OAAQ,CACzBkE,gBAAiB,SACjB3D,MAAiB,CACf,CACEC,UAAU,EACV5D,QAAU,yBALfoD,CASC,kBAAC,KAAD,CAAOS,YAAY,oBAGvB,kBAAC,GAAD,KACGT,EAAkB,cAAe,CAChCM,aAAc,IADfN,CAGC,kBAAC,GAAD,CAAUmE,UAAU,EAAM1D,YAAY,2BAG1C,kBAAC,GAAD,KACGT,EAAkB,WAAY,CAC7BM,cAAc,GADfN,CAGC,kBAAC,KAAD,CAAUoE,gBAAgB,GAA1B,oC,qCAOMxD,GAAI,IAAD,OACbA,GACFA,EAAEC,iBACJjM,KAAKb,MAAMkM,KAAKa,gBAAe,SAACuD,EAAKtD,GAC9BsD,IACH,EAAKhQ,SAAS,CACZmP,oBAAoB,IAEtBnQ,EACE,EAAKU,MAAMuQ,KAAKjK,GAChB0G,EAAOxN,KACPwN,EAAOvN,YACPuN,EAAOtN,UAENU,MAAK,SAACC,GACL,EAAKC,SAAS,CACZmP,oBAA4B,EAC5BC,4BAA4B,EAC5BhM,SAA4BrD,EAAIE,OAElC,EAAKuP,gBAENpI,OAAM,WACLkI,MAAM,mE,8JAQd/O,KAAKb,MAAM0D,SAAS8M,iBAAiB,aAC/BC,EAAQ5P,KAAKb,MAAM0D,SAASgN,YAAY,cACxCC,EAASC,gBAAMH,EAAO,KACnBtM,EAAQ,E,YAAGwM,EAAO3M,OAASG,G,iBAElC,IADI0M,EAAW,GACNC,EAAY,EAAGH,EAAOxM,GAAOH,OAAS8M,EAAWA,IACxDD,EAAS3S,KAAKyS,EAAOxM,GAAO2M,GAAWtL,gBAAgBuL,K,gBAEnDnR,EAAmBiB,KAAKb,MAAMuQ,KAAKjK,GAAIzF,KAAKZ,MAAMyD,SAAS4C,GAAIuK,G,OAL5B1M,I,uBAO3CtD,KAAKb,MAAM0D,SAAS8M,iBAAiB,Q,2IAIrC,OACE,kBAAC,KAAD,CACEN,QAASrP,KAAKZ,MAAM0P,YACpBrF,UAAU,EACVH,OAAO,QACPF,QAAS,CACP,CACEtJ,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfE,WAAYvJ,KAAKb,MAAM0D,SAASgN,YAAY,cAC5CrG,YAAY,M,+BAIP,IAAD,OAER,MAA+B,SADZxJ,KAAKb,MAAjB0D,SACMF,cACJ,kBAAC,KAAD,CACLqF,QAAQ,qBACRpJ,YAAa,oDACS,6BACpB,uBAAGkD,KAAM9B,KAAKZ,MAAMyD,SAAS4J,cAAcC,SAAU1M,KAAKZ,MAAMyD,SAASlE,OAE3E4H,KAAK,UACL4J,UAAQ,IAGL,6BACoB,OAAxBnQ,KAAKZ,MAAMyD,UACZ,kBAAC,IAAD,CAAM1C,MAAO,CAAC+H,YAAa,OAAQC,WAAY,OAAQC,SAAU,QAASrG,UAAW,WACnF,0GAGA,kBAAC,IAAD,CACEwE,KAAK,OACLvF,KAAM,QACNW,QAAS,kBAAM,EAAKlC,SAAS,CAACoP,4BAA4B,KAC1D1O,MAAO,CAACgI,WAAY,EAAG/H,UAAW,GAAImB,aAAc,QAAS6G,SAAU,QAAS9G,OAAQ,OAAQL,WAAY,UAAWC,MAAO,OAAQQ,OAAQ,YAJhJ,yBAOA,kBAAC,KAAD,CAAUiJ,QAAS,CAAC,SAAUyF,QAASpQ,KAAKqQ,sBAAuBhG,UAAU,cAC3E,kBAAC,IAAD,CACE9D,KAAK,OACLvF,KAAM,QACNW,QAAS3B,KAAKsQ,eAAezO,KAAK7B,MAClCqP,QAASrP,KAAKZ,MAAMuP,kBACpBxO,MAAO,CAACgI,WAAY,EAAG/H,UAAW,GAAImB,aAAc,QAAS6G,SAAU,QAAS9G,OAAQ,OAAQL,WAAY,UAAWC,MAAO,OAAQQ,OAAQ,YALhJ,iCAUqB,OAAxB1B,KAAKZ,MAAMyD,UAAqB7C,KAAKuQ,cAErCvQ,KAAKwQ,2B,GA7MU/P,IAAMC,WAuNbsJ,QAAK7L,QAAL6L,CAAcqI,ICtNRC,G,kDASnB,aAAgB,IAAD,8BACb,gBARFlT,MAAQ,CACNsR,YAAgB,EAChBpR,gBAAgB,EAChBoQ,KAAgB,KAChBiB,KAAgB,GAKhB,EAAKC,mBAAqB,IAAIrO,EAAmB,IAFpC,E,iEAKQ,IAAD,OAChB3E,MACFoC,KAAKP,SAAS,CACZH,gBAAgB,IAElBhB,IACGiB,MAAK,SAACC,GACL,EAAKC,SAAS,CACZH,gBAAgB,EAChBoQ,KAAgBlQ,EAAIE,UAGvBmH,OAAM,WACLkI,MAAM,oF,8BAKJ,IAAD,OACP,OAAO,kBAAC,GAAD,CACLlM,SAAU7C,KAAK4Q,mBACf9I,SAAU,WACR,EAAKrI,SAAS,CACZkR,KAAM,S,8BAMJ,IAAD,OACP,OAAO,kBAAC,GAAD,CACL9N,SAAU7C,KAAK4Q,mBACfhI,KAAM,kBAAM,EAAKnJ,SAAS,CAACkR,KAAM,S,8BAI3B,IAAD,OACP,OAAO,kBAAC,GAAD,CACL9N,SAAU7C,KAAK4Q,mBACf9H,SAAU,kBAAM,EAAKrJ,SAAS,CAACkR,KAAM,S,8BAKvC,OAAO,kBAAC,GAAD,CACLjB,KAAM1P,KAAKZ,MAAMsQ,KACjB7M,SAAU7C,KAAK4Q,uB,gCAKjB,OAAQ5Q,KAAKZ,MAAMuR,MACjB,QACA,KAAK,EACH,OAAO3Q,KAAK+Q,QACd,KAAK,EACH,OAAO/Q,KAAKgR,QACd,KAAK,EACH,OAAOhR,KAAKiR,QACd,KAAK,EACH,OAAOjR,KAAKkR,W,+BAKhB,IAAMC,EAAOC,IAAMD,KACnB,OAAKvT,IAGDoC,KAAKZ,MAAME,eACN,uBAAGa,MAAO,CAAC4B,UAAW,WAAtB,yBAGP,6BACE,wBAAI5B,MAAO,CAAE4B,UAAW,SAAUb,MAAO,YAAzC,YAAmE,6BACnE,kBAAC,IAAD,CAAOmQ,QAASrR,KAAKZ,MAAMuR,MACzB,kBAACQ,EAAD,CAAMrR,MAAM,kBAAkBlB,YAAY,oBAC1C,kBAACuS,EAAD,CAAMrR,MAAM,wBAAwBlB,YAAY,sDAChD,kBAACuS,EAAD,CAAMrR,MAAM,sBAAsBlB,YAAY,mDAC9C,kBAACuS,EAAD,CAAMrR,MAAM,eAAelB,YAAY,iDAEzC,yBAAKuB,MAAO,CAACC,UAAW,KACrBJ,KAAK4K,YAfH,wBAAIzK,MAAO,CAAC4B,UAAW,WAAvB,gC,GAjFmBtB,IAAMC,WCHjB6R,G,kDACnB,WAAapT,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAE2J,UAAU,GAFP,E,qDAKT,IAAD,OACR,OAAO,kBAAC,IAAD,CAAM5I,MAAO,CAAC+H,YAAa,OAAQC,WAAY,OAAQC,SAAU,QAASrG,UAAW,WAC1F,0FAGE,kBAAC,IAAD,CACAgH,SAAU/I,KAAKZ,MAAM2J,SACrBwI,UAAS,yCAAE,WAAOvF,GAAP,sBAAAwF,EAAA,yDACK,UAAVxF,EAAE9L,IADG,oBAEP,EAAKT,SAAS,CAAEsJ,UAAU,IAFnB,SAKP0I,EAAM,YACFC,EAAM1F,EAAErE,OAAO5C,OACX4M,OAAO,cAAgB,GAPxB,iBAQLD,EAAMA,EAAIE,MAAM,YAChB5S,EAAa+S,OAAOL,EAAI,GAAGvL,QAAQ,SAAU,KAC7CuL,EAAIG,OAAO,EAAG,GACdH,GADkBA,EAAMA,EAAI,IAClBE,MAAM,SAChBlC,EAAOgC,EAAI,GAAGvL,QAAQ,MAAO,IAZxB,+BAcL,EAAK1G,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAa,sCAjBV,oFAsBL,EAAKa,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAa,sCAzBV,sDA8BDZ,KAAMc,KAAK,+BAAgC,CAC/CY,KAAM,CACJgQ,OAAM1Q,aAAYyS,SAGrBlS,MAAK,SAACqF,GACL,IACA,EAAKzF,MAAM0D,SAAS2P,kBAAkB5N,GACtC,EAAKzF,MAAM2I,WACT,SAAO,IAAD,IACN,EAAKrI,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,aAAa,UAAAgG,EAASlF,YAAT,eAAewS,WAAf,UAA2BtN,EAASlF,YAApC,aAA2B,EAAewS,UAAY,qBA3ClE,2DAgDP,EAAKzS,SAAS,CAAEsJ,UAAU,IAC1BhB,IAAajB,MAAM,CACjBkB,QAAa,QACbpJ,YAAa,4CAnDR,kEAAF,sDAuDNiN,YAAY,2C,GApEkBpL,IAAMC,WCC1B+R,G,4MAEnBrT,MAAQ,CACNqJ,gBAAiB,I,EAQnBC,eAAiB,SAACD,GAChB,EAAKhJ,SAAS,CAACgJ,qB,yDALfzI,KAAKb,MAAM0D,SAAS8F,OAAO3I,KAAKZ,MAAMqJ,iBACtCzI,KAAKb,MAAMyJ,S,uCAOM,IACVH,EAAmBzI,KAAKZ,MAAxBqJ,gBACDI,EAAcJ,EAAgBtF,OAAS,EAC7C,OAAO,yBAAKhD,MAAO,CAACiB,OAAQ,SAAUW,UAAW,UAC1C,0BAAM5B,MAAO,CAAC+H,YAAa,IACzBW,EAAW,mBAAeJ,EAAgBtF,OAA/B,UAAgD,IAElE,kBAAC,IAAD,CACAnC,KAAK,IACLb,MAAO,CAAEc,WAAY,UAAWC,MAAO,OAAQK,aAAc,SAC7DI,QAAS3B,KAAK8I,SAASjH,KAAK7B,MAC5B+I,UAAWF,GACT,yBACA1H,QAAQ,QACJ,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,W,+BAOnD,IAEHa,EAAe,CACnBP,gBAFwBzI,KAAKZ,MAAxBqJ,gBAGLQ,SAAUjJ,KAAK0I,gBAEjB,OACE,yBAAKvI,MAAO,CAAC+I,QAAS,QACnBlJ,KAAKmJ,iBACN,kBAAC,KAAD,CACEH,aAAcA,EACdI,QAAS,CACP,CACEtJ,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfC,OAAQ,QACRC,WAAYvJ,KAAKb,MAAM0D,SAASA,SAChC2G,YAAY,EACZC,UAAQ,IAETzJ,KAAKmJ,sB,GAnE2B1I,IAAMC,WXkBzCqJ,GAAWC,KAAKC,KAEhByI,G,4MAEJtT,MAAQ,CACN+K,aAAiB,KACjBC,iBAAiB,G,kEAGG,IAAD,OACnBpK,KAAKb,MAAM0D,SAASoG,UAAS,WAC3B,EAAKnI,mB,8BAIAuJ,GACP,IAAIC,GAAmB,EAChBzH,EAAY7C,KAAKb,MAAjB0D,SACAF,EAAiBE,EAAjBF,cACPP,EAAY,EACZ,IAAK,IAAIkB,EAAQ,EAAGT,EAASA,SAASM,OAASG,EAAOA,IACL,eAA3CT,EAASA,SAASS,GAAOX,gBAC3B2H,GAAmB,GAE0B,YAA3CzH,EAASA,SAASS,GAAOX,eAC3BP,IAIJ,OADAA,EAAYmI,KAAKC,MAAMpI,EAAUS,EAASA,SAASM,OAAO,KACnD,yBAAKhD,MAAO,CAACiB,OAAQ,SAAUW,UAAW,UAC/C,kBAAC,IAAD,CACEf,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,GAC7E2I,SAA4B,WAAlBpG,GAAgD,OAAlBA,EACxChB,QAAS3B,KAAKyK,OAAO5I,KAAK7B,MAC1BuG,KAAK,UALP,gBASA,kBAAC,IAAD,CACEvF,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,GAC7E2I,SAA4B,cAAlBpG,EACVhB,QAAS3B,KAAK0K,MAAM7I,KAAK7B,OAEzB,yBAAKmB,QAAQ,QACT,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,QACG,kBAAC,KAAD,CAAaJ,MAAO,GAAIC,OAAQ,GAAInB,MAAO,CAACgI,WAAY,QAIjE,kBAAC,KAAD,CACEwC,QAAQ,QACRN,UAAyB,QAAdA,EAAsB,cAAgB,WACjDO,QAAS5K,KAAKwC,YAEd,kBAAC,IAAD,CACExB,KAAM,QACNb,MAAO,CAAC+H,YAAa,EAAG3G,aAAc,QAASG,OAAQ,UAAWtB,UAAW,IAE7E,yBAAKe,QAAQ,QACX,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,kBACa,kBAAC,KAAD,CAAuBJ,MAAO,GAAIC,OAAQ,GAAInB,MAAO,CAACgI,WAAY,SAOxD,mBAA3BtF,EAASF,eACT,kBAAC,KAAD,CACE7C,MAAM,4EACN+K,UAAW7K,KAAK8I,SAASjH,KAAK7B,MAC9B8K,OAAO,MACPT,UAAyB,QAAdA,EAAsB,cAAgB,WACjDU,WAAW,MACX,kBAAC,IAAD,CACExE,KAAK,UACLvF,KAAM,QACN+H,SAAUuB,EACVnK,MAAO,CAACoB,aAAc,QAASG,OAAQ,UAAWtB,UAAW,IAE7D,yBAAKe,QAAQ,QACX,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,SAO/B,mBAA3BtF,EAASF,eACT,kBAAC,IAAD,CACE4D,KAAK,OACLvF,KAAM,QACNb,MAAO,CAAEc,WAAY,UAAWC,MAAO,OAAQK,aAAc,QAASnB,UAAW,GACjFuB,QAAS3B,KAAK8I,SAASjH,KAAK7B,MAC5B+I,SAAUuB,GAEV,yBAAKnJ,QAAQ,QACT,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,WAApE,YACO,kBAAC,KAAD,CAAyBtB,MAAO,CAACgI,WAAY,W,iCAU9DnI,KAAKb,MAAM2J,a,8BAIX9I,KAAKb,MAAM0D,SAASmI,gB,+BAIpBhL,KAAKb,MAAM0D,SAASoI,gB,iCAGV1H,GAEV,OADeA,EAAMZ,eAEnB,QACA,IAAK,UACH,OAAO,kBAAC,KAAD,CAAKzB,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,WACT,IAAK,SACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,UACT,IAAK,YACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,aACT,IAAK,WACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,aACT,IAAK,aACH,OAAO,kBAAC,KAAD,CAAKL,MAAM,UAAUf,MAAO,CAACoB,aAAc,UAA3C,Y,mCAICmG,EAAMwD,GAAM,IAAD,OACjB5F,EAAS4F,EAAIvI,cACnB,OAAO,yBAAKxC,MAAO,CAACgB,QAAS,OAAQK,WAAY,WAC9CxB,KAAKmL,WAAWD,GAEJ,eAAX5F,GACA,kBAAC,IAAD,CACEnF,MAAO,CAACoB,aAAc,SACtBP,KAAM,QACNW,QAAS,WACP,EAAKlC,SAAS,CAAC0K,aAAce,EAAI5H,MAAO8G,iBAAiB,MACxD,kBAAC,KAAD,CAAuB/I,MAAO,GAAIC,OAAQ,S,iCAIxC,IACJ8J,EAAqBpL,KAAKb,MAAMkM,KAAhCD,kBACP,OACE,kBAAC,KAAD,CACEjL,MAAO,CAACkB,MAAO,KACfiK,SAAUtL,KAAKuL,iBAAiB1J,KAAK7B,OAErC,kBAAC,GAAD,CACEwL,MAAM,gBACNC,KAAK,mIAEJL,EAAkB,eACjB,CACEM,aAAc1L,KAAKb,MAAM0D,SAASL,SAASI,aAC3C+I,MAAc,CAAC,CAACC,UAAU,EAAM5D,QAAS,4BAH5CoD,CAKC,kBAAC,KAAD,CAAOS,YAAY,oBAGvB,kBAAC,GAAD,CAAU1L,MAAO,CAAC2L,aAAc,IAC9B,kBAAC,IAAD,CACEvF,KAAK,UACLpG,MAAO,CAACkB,MAAO,QACf0K,SAAS,UACV,yBAAK5K,QAAQ,QACd,yBAAKhB,MAAO,CAACgB,QAAS,OAAQK,WAAY,SAAUC,eAAgB,SAAUC,OAAQ,YAAtF,OACM,kBAAC,KAAD,CAAoBL,MAAO,GAAIC,OAAQ,GAAKnB,MAAO,CAACgI,WAAY,Y,uCAS5D6D,GAChBA,EAAEC,iBADiB,IAEZ9M,EAASa,KAATb,MACPA,EAAMkM,KAAKa,gBAAe,SAAChJ,EAAQiJ,GAC5BjJ,GACHkJ,eAAKD,GAAQ,SAACpH,EAAO7E,GACnBf,EAAM0D,SAASwJ,OAAOnM,EAAK6E,W,0CAMb,IAGhBxB,EAAkB+I,EAHH,OACZzJ,EAAY7C,KAAKb,MAAjB0D,SACAsH,EAAgBnK,KAAKZ,MAArB+K,aACIzK,EAAO,GAClB,GAAgC,OAA5BM,KAAKZ,MAAM+K,aAAuB,CACpC5G,EAAQV,EAASA,SAASsH,GAC1BmC,EAAgBzJ,EAASA,SAASsH,GAAcxF,gBAChD,IAAK,IAAIrB,EAAQ,EAAGC,EAAMmB,eAAevB,OAASG,EAAOA,IAAS,CAChE,IAAIiJ,EAAehJ,EAAMmB,eAAepB,GACxC5D,EAAKrC,KAAK,CACRiG,QACAmC,GAAa8G,EAAa9G,GAC1B9G,KAAa4N,EAAa5N,KAC1B6N,KAAaD,EAAaE,cAAcC,QACxCC,MAAaJ,EAAazI,MAAMnE,OAAO,GAAGC,IAC1CgN,SAAaL,EAAaM,YAAc,IACxCtI,YAAagI,EAAaO,aAC1BC,WAAaR,EAAaS,QAAQ,GAAGrO,KACrCsO,WAAaV,EAAaS,QAAQ,GAAGP,cAAcC,QACnDQ,UAAaX,EAAazI,MAAMnF,KAChCwO,UAAaZ,EAAazI,MAAM2I,cAAcC,QAC9CnJ,MAAagJ,KAInB,OAAO,kBAAC,KAAD,CACLzM,MAAM,gBACNsN,QAASpN,KAAKZ,MAAMgL,gBACpBiD,OAAQ,KACRC,SAAU,WACR,EAAK7N,SAAS,CAAC2K,iBAAiB,IAChCrE,YAAW,kBAAM,EAAKtG,SAAS,CAAC0K,aAAc,SAAQ,OAGxD,kBAAC,KAAD,CACEoD,WAAW,aACXhE,WAAY7J,EACZ8N,WAAY,SAAAC,GACV,IAAMC,EAAe,kBAAC,KAAD,CACnBC,QAASrB,EAAc7G,KAAOgI,EAAKhI,GACnCwD,SAAU,WACRpG,EAAS+K,mBAAmBzD,EAAcsD,EAAKhI,OAEnD,OAAO,kBAAC,KAAKwE,KAAN,CAAW4D,QAAS,CAACH,IAC1B,kBAAC,KAAKzD,KAAK6D,KAAX,CACEvN,OAAQ,kBAAC,KAAD,CAAQC,IAAKiN,EAAKd,MAAO3L,KAAK,UACtCpC,YAAa,qCAAU,uBAAGkD,KAAM2L,EAAKN,WAAYM,EAAKP,WAAzC,MAA2DxD,GAAc+D,EAAKb,WAC3F9M,MAAO,uBAAGiO,IAAI,sBAAsBjM,KAAM2L,EAAKjB,KAAM7E,OAAO,UAAU8F,EAAKV,WAApE,MAAmFU,EAAK9O,e,+BASzG,OAAO,6BACL,kBAAC,KAAD,CAAUsP,QAAS7L,EAAWkD,OAAO,WACpCtF,KAAKmO,QAAQ,OACd,kBAAC,KAAD,CACE7E,OAAO,QACPF,QAAS,CACP,CACEtJ,MAAW,SACXuJ,UAAW,SACXhI,MAAW,MACX+M,OAAWpO,KAAKqO,aAAaxM,KAAK7B,OAEpC,CACEF,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfE,WAAYvJ,KAAKb,MAAM0D,SAASA,SAChC2G,YAAY,EACZC,UAAQ,IAETzJ,KAAKmO,QAAQ,UACbnO,KAAKsO,yB,GA7Rc7N,IAAMC,WAuSjBsJ,QAAK7L,QAAL6L,CAAc0I,IY7TvB3I,GAAWC,KAAKC,KACfsE,GAAYC,KAAZD,SAEDoE,G,4MAEJvT,MAAQ,CACNyD,SAA4B,KAC5B6L,cAA4B,KAC5BC,mBAA4B,EAC5BC,oBAA4B,EAC5BC,4BAA4B,EAC5BC,aAA4B,G,kEAGR,IAAD,OACnB9O,KAAKb,MAAM0D,SAASoG,UAAS,WAC3B,EAAKnI,mB,uCAIU,IAAD,OACiB,OAA7Bd,KAAKZ,MAAMsP,gBAGf1O,KAAKP,SAAS,CAACkP,mBAAmB,IAClCnQ,IACGe,MAAK,SAACC,GACL,EAAKC,SAAS,CACZkP,mBAAmB,EACnBD,cAAmBlP,EAAIE,UAG1BmH,OAAM,WACLkI,MAAM,mD,4CAIY,IAAD,OACrB,OAAO,kBAAC,KAAD,CAAMpN,QAAS,SAACqN,GACrB,EAAKvP,SAAS,CACZoD,SAAUmM,EAAMvB,KAAKtO,MAAM0D,WAC1B,WACD,EAAKoM,kBAGuB,OAA7BjP,KAAKZ,MAAMsP,cAAyB,KAAO1O,KAAKZ,MAAMsP,cAAc5J,MAAMoK,KAAI,SAACrM,EAAUS,GACxF,OAAO,kBAAC,KAAK2G,KAAN,CAAW/J,IAAKoD,EAAOT,SAAUA,GACrCA,EAASlE,Y,4CAMM,IAAD,OACdyM,EAAqBpL,KAAKb,MAAMkM,KAAhCD,kBACP,OAAO,kBAAC,KAAD,CACLtL,MAAM,kBACNqP,UAAU,EACVC,cAAc,EACdhC,QAASpN,KAAKZ,MAAMyP,2BACpBvB,SAAU,kBAAM,EAAK7N,SAAS,CAACoP,4BAA4B,KAC3DxB,OAAQ,CACN,kBAAC,IAAD,CAAQlN,MAAO,CAACuB,OAAQ,WAAYxB,IAAI,OAAOyB,QAAS,kBAAM,EAAKlC,SAAS,CAACoP,4BAA4B,MAAzG,UACA,kBAAC,IAAD,CAAQ1O,MAAO,CAACuB,OAAQ,WAAYxB,IAAI,SAASqG,KAAK,UAAU8I,QAASrP,KAAKZ,MAAMwP,mBAAoBjN,QAAS3B,KAAKvB,eAAeoD,KAAK7B,OAA1I,YAKF,kBAAC,KAAD,CAAMsL,SAAUtL,KAAKvB,eAAeoD,KAAK7B,OACvC,kBAAC,GAAD,KACGoL,EAAkB,OAAQ,CACzBkE,gBAAiB,SACjB3D,MAAiB,CACf,CACEC,UAAU,EACV5D,QAAU,yBALfoD,CASC,kBAAC,KAAD,CAAOS,YAAY,oBAGvB,kBAAC,GAAD,KACGT,EAAkB,cAAe,CAChCM,aAAc,IADfN,CAGC,kBAAC,GAAD,CAAUmE,UAAU,EAAM1D,YAAY,2BAG1C,kBAAC,GAAD,KACGT,EAAkB,WAAY,CAC7BM,cAAc,GADfN,CAGC,kBAAC,KAAD,CAAUoE,gBAAgB,GAA1B,oC,qCAOMxD,GAAI,IAAD,OACbA,GACFA,EAAEC,iBACJjM,KAAKb,MAAMkM,KAAKa,gBAAe,SAACuD,EAAKtD,GAC9BsD,IACH,EAAKhQ,SAAS,CACZmP,oBAAoB,IAEtBnQ,EACE,EAAKU,MAAMuQ,KAAKjK,GAChB0G,EAAOxN,KACPwN,EAAOvN,YACPuN,EAAOtN,UAENU,MAAK,SAACC,GACL,EAAKC,SAAS,CACZmP,oBAA4B,EAC5BC,4BAA4B,EAC5BhM,SAA4BrD,EAAIE,OAElC,EAAKuP,gBAENpI,OAAM,WACLkI,MAAM,mE,8JAQd/O,KAAKb,MAAM0D,SAAS8M,iBAAiB,aAC/BC,EAAQ5P,KAAKb,MAAM0D,SAASgN,YAAY,cACxCC,EAASC,gBAAMH,EAAO,KACnBtM,EAAQ,E,YAAGwM,EAAO3M,OAASG,G,iBAElC,IADI0M,EAAW,GACNC,EAAY,EAAGH,EAAOxM,GAAOH,OAAS8M,EAAWA,IACxDD,EAAS3S,KAAKyS,EAAOxM,GAAO2M,GAAWtL,gBAAgBuL,K,gBAEnDnR,EAAmBiB,KAAKb,MAAMuQ,KAAKjK,GAAIzF,KAAKZ,MAAMyD,SAAS4C,GAAIuK,G,OAL5B1M,I,uBAO3CtD,KAAKb,MAAM0D,SAAS8M,iBAAiB,Q,2IAIrC,OACE,kBAAC,KAAD,CACEN,QAASrP,KAAKZ,MAAM0P,YACpBrF,UAAU,EACVH,OAAO,QACPF,QAAS,CACP,CACEtJ,MAAW,OACXuJ,UAAW,QAEb,CACEvJ,MAAW,SACXuJ,UAAW,UAEb,CACEvJ,MAAW,QACXuJ,UAAW,UAGfE,WAAYvJ,KAAKb,MAAM0D,SAASgN,YAAY,cAC5CrG,YAAY,M,+BAIP,IAAD,OAER,MAA+B,SADZxJ,KAAKb,MAAjB0D,SACMF,cACJ,kBAAC,KAAD,CACLqF,QAAQ,qBACRpJ,YAAa,oDACS,6BACpB,uBAAGkD,KAAM9B,KAAKZ,MAAMyD,SAAS4J,cAAcC,SAAU1M,KAAKZ,MAAMyD,SAASlE,OAE3E4H,KAAK,UACL4J,UAAQ,IAGL,6BACoB,OAAxBnQ,KAAKZ,MAAMyD,UACZ,kBAAC,IAAD,CAAM1C,MAAO,CAAC+H,YAAa,OAAQC,WAAY,OAAQC,SAAU,QAASrG,UAAW,WACnF,0GAGA,kBAAC,IAAD,CACEwE,KAAK,OACLvF,KAAM,QACNW,QAAS,kBAAM,EAAKlC,SAAS,CAACoP,4BAA4B,KAC1D1O,MAAO,CAACgI,WAAY,EAAG/H,UAAW,GAAImB,aAAc,QAAS6G,SAAU,QAAS9G,OAAQ,OAAQL,WAAY,UAAWC,MAAO,OAAQQ,OAAQ,YAJhJ,yBAOA,kBAAC,KAAD,CAAUiJ,QAAS,CAAC,SAAUyF,QAASpQ,KAAKqQ,sBAAuBhG,UAAU,cAC3E,kBAAC,IAAD,CACE9D,KAAK,OACLvF,KAAM,QACNW,QAAS3B,KAAKsQ,eAAezO,KAAK7B,MAClCqP,QAASrP,KAAKZ,MAAMuP,kBACpBxO,MAAO,CAACgI,WAAY,EAAG/H,UAAW,GAAImB,aAAc,QAAS6G,SAAU,QAAS9G,OAAQ,OAAQL,WAAY,UAAWC,MAAO,OAAQQ,OAAQ,YALhJ,iCAUqB,OAAxB1B,KAAKZ,MAAMyD,UAAqB7C,KAAKuQ,cAErCvQ,KAAKwQ,2B,GA7Mc/P,IAAMC,WAuNjBsJ,QAAK7L,QAAL6L,CAAc2I,ICtNRlC,G,kDASnB,aAAgB,IAAD,8BACb,gBARFrR,MAAQ,CACNsR,YAAgB,EAChBpR,gBAAgB,EAChBoQ,KAAgB,KAChBiB,KAAgB,GAKhB,EAAKC,mBAAqB,IAAIrO,EAAmB,IAFpC,E,iEAKQ,IAAD,OAChB3E,MACFoC,KAAKP,SAAS,CACZH,gBAAgB,IAElBhB,IACGiB,MAAK,SAACC,GACL,EAAKC,SAAS,CACZH,gBAAgB,EAChBoQ,KAAgBlQ,EAAIE,UAGvBmH,OAAM,WACLkI,MAAM,oF,8BAKJ,IAAD,OACP,OAAO,kBAAC,GAAD,CACLlM,SAAU7C,KAAK4Q,mBACf9I,SAAU,WACR,EAAKrI,SAAS,CACZkR,KAAM,S,8BAMJ,IAAD,OACP,OAAO,kBAAC,GAAD,CACL9N,SAAU7C,KAAK4Q,mBACfhI,KAAM,kBAAM,EAAKnJ,SAAS,CAACkR,KAAM,S,8BAI3B,IAAD,OACP,OAAO,kBAAC,GAAD,CACL9N,SAAU7C,KAAK4Q,mBACf9H,SAAU,kBAAM,EAAKrJ,SAAS,CAACkR,KAAM,S,8BAKvC,OAAO,kBAAC,GAAD,CACLjB,KAAM1P,KAAKZ,MAAMsQ,KACjB7M,SAAU7C,KAAK4Q,uB,gCAKjB,OAAQ5Q,KAAKZ,MAAMuR,MACjB,QACA,KAAK,EACH,OAAO3Q,KAAK+Q,QACd,KAAK,EACH,OAAO/Q,KAAKgR,QACd,KAAK,EACH,OAAOhR,KAAKiR,QACd,KAAK,EACH,OAAOjR,KAAKkR,W,+BAKhB,IAAMC,EAAOC,IAAMD,KACnB,OAAKvT,IAGDoC,KAAKZ,MAAME,eACN,uBAAGa,MAAO,CAAC4B,UAAW,WAAtB,yBAGP,6BACE,wBAAI5B,MAAO,CAAE4B,UAAW,SAAUb,MAAO,kBAAzC,UAAuE,6BACvE,kBAAC,IAAD,CAAOmQ,QAASrR,KAAKZ,MAAMuR,MAC3B,kBAACQ,EAAD,CAAMrR,MAAM,kBAAkBlB,YAAY,oBACxC,kBAACuS,EAAD,CAAMrR,MAAM,wBAAwBlB,YAAY,sDAChD,kBAACuS,EAAD,CAAMrR,MAAM,sBAAsBlB,YAAY,mDAC9C,kBAACuS,EAAD,CAAMrR,MAAM,eAAelB,YAAY,iDAEzC,yBAAKuB,MAAO,CAACC,UAAW,KACrBJ,KAAK4K,YAfH,wBAAIzK,MAAO,CAAC4B,UAAW,WAAvB,gC,GAjFsBtB,IAAMC,W,UCLnCkS,G,kLtBmBkB,IAACC,IsBfnB7P,iBAAMhD,KAAKb,MAAM3B,SAASsV,KAAK1M,MAAM,IAAI2M,atBgB7ClV,aAAamV,QAAQ,UAAWH,GsBd9B7S,KAAKb,MAAM8T,QAAQ5V,KAAK,O,+BAIxB,OACE,yC,GAXsBoD,IAAMC,WAgBnBC,eAAWiS,ICZLM,G,uKAEjB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KpBdD,IoBc4BC,UAAW3S,IACnD,kBAACwS,EAAA,EAAD,CAAOE,KpBdM,SoBcsBC,UAAW9C,KAC9C,kBAAC2C,EAAA,EAAD,CAAOE,KpBdG,MoBcsBC,UAAWjB,KAC3C,kBAACc,EAAA,EAAD,CAAOE,KpBdO,UoBcsBC,UAAWC,KAC/C,kBAACJ,EAAA,EAAD,CAAOE,KpBde,kBoBcsBC,UAAWX,U,GAR3BnS,IAAMC,WCe3B+S,I,4LAbX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKhO,GAAG,WACN,yBAAK1E,UAAU,aACb,kBAAC,GAAD,a,GAPML,cCLlBgT,IAAStF,OACP,kBAAC,IAAD,CAAQuF,SAAU,aAChB,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2238c55e.chunk.js","sourcesContent":["export const API_URL = 'https://api.spotify.com';\nexport const SPOTIFY_CLIENT_ID = 'b1a70e47e2fa4e01bc095a4098cbcb0a';","import { SPOTIFY_CLIENT_ID } from '../constants/Constants';\n\nexport const getLoginUrl = (scopes = [\n  'playlist-read-private',\n  'playlist-read-collaborative',\n  'playlist-modify-public',\n  'playlist-modify-private',\n  'user-library-read',\n  'user-library-modify',\n  'user-top-read'\n]) => {\n  let queryArgs = [];\n  queryArgs.push(`client_id=${SPOTIFY_CLIENT_ID}`);\n  queryArgs.push(`response_type=token`);\n  queryArgs.push(`redirect_uri=${encodeURIComponent(`${window.location.protocol}//${window.location.host}/2spotify/login-callback`)}`);\n  queryArgs.push(`scope=${scopes.join(' ')}`);\n  return `https://accounts.spotify.com/authorize/?${queryArgs.join('&')}`;\n};\n\nexport const isLoggedIn = () => localStorage.getItem('__token') !== null;\n\nexport const getToken = () => localStorage.getItem('__token');\n\nexport const logout = () => localStorage.removeItem('__token');\n\nexport const setToken = (token) => {\n  localStorage.setItem('__token', token);\n};","import originalAxios from 'axios';\n\nimport { API_URL } from '../constants/Constants';\nimport { getToken } from './AuthService';\n\nexport const axios = () => {\n  if (typeof axios.instance === 'undefined') {\n    axios.instance = originalAxios.create({\n      headers: {\n        Authorization: `Bearer ${getToken()}`\n      }\n    });\n  }\n  return axios.instance;\n};\n\nexport const getCurrentUser = () => {\n  return axios().get(\n    `${API_URL}/v1/me`\n  );\n};\n\nexport const search = (search) => {\n  return axios().get(\n    `${API_URL}/v1/search`,\n    {\n      params: search\n    }\n  );\n};\n\nexport const getPlaylists = () => {\n  return axios().get(\n    `${API_URL}/v1/me/playlists`\n  );\n};\n\nexport const createPlaylist = (userId, name, description = '', isPublic = false) => {\n  return axios().post(\n    `${API_URL}/v1/users/${userId}/playlists`,\n    {\n      name,\n      description,\n      'public': isPublic\n    }\n  );\n};\nexport const addTrackToPlaylist = (userId, playlistId, uris) => {\n  return axios().post(\n    `${API_URL}/v1/users/${userId}/playlists/${playlistId}/tracks`,\n    {uris}\n  );\n};","import React from 'react';\nimport { PageHeader, Button } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { isLoggedIn } from '../../services/AuthService';\nimport { getCurrentUser } from '../../services/ApiService';\nimport * as RouteConstants from '../../constants/RouteConstants';\n\nclass Header extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = { name: '' }\n    this.state = { photo: '' }\n    this.state = { isFetchingUser: false }\n  }\n\n  componentDidMount () {\n    if (isLoggedIn()) {\n      getCurrentUser()\n        .then((res) => {\n          this.setState({\n            isFetchingUser: true,\n            photo: res.data.images[0].url,\n            name: res.data.display_name\n          });\n        })\n    }\n  }\n\n  render () {\n    return (\n      <PageHeader\n    title=\"2 Spotify\"\n    subTitle = {this.state.isFetchingUser ? `Hello, ${this.state.name}!` : 'Hello, friend!'}\n    extra={[\n      <Button key={RouteConstants.HOME} style={{marginTop: '6px'}}><Link to={RouteConstants.HOME}>Home</Link></Button>,\n      <Button key={RouteConstants.APPlE} style={{marginTop: '6px'}}><Link to={RouteConstants.APPlE}>Apple Music</Link></Button>,\n      <Button key={RouteConstants.VK} style={{marginTop: '6px'}}><Link to={RouteConstants.VK}>Boom (VK)</Link></Button>,\n      <Button key={RouteConstants.YANDEX} style={{marginTop: '6px'}}><Link to={RouteConstants.YANDEX}>Yandex</Link></Button>\n    ]}\n    avatar={ this.state.isFetchingUser ? {src: this.state.photo} : null}\n    ></PageHeader>\n    );\n  }\n}\n\nexport default withRouter(Header);","export const HOME = '/';\nexport const APPlE = '/apple';\nexport const VK = '/vk';\nexport const YANDEX = '/yandex';\nexport const LOGIN_CALLBACK = '/login-callback';","import React from 'react';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { isLoggedIn, getLoginUrl, logout } from '../services/AuthService';\n\nexport default class Home extends React.Component {\n\n  logout () {\n    logout();\n    this.forceUpdate();\n  }\n\n  loginMessage () {\n    return <div className='button'>\n      {isLoggedIn()\n        ? <Button size=\"l\" style={{ background: 'rgb(240, 54, 63)', color: '#fff', display: 'flex', margin: '0 auto', width: '202px', height: '53px', borderRadius: '500px', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }} onClick={this.logout.bind(this)}>Logout</Button>\n        : <Button size=\"l\" style={{ background: '#1DB954', color: '#fff', display: 'flex', margin: '0 auto', width: '202px', height: '53px', borderRadius: '500px', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }} href={getLoginUrl()}>Login</Button>}\n    </div>;\n  }\n\n  render () {\n    return (\n      <div>\n        <h1 style={{textAlign: 'center'}}>2 Spotify <span role=\"img\" aria-label=\"music\">🎸</span></h1>\n        <h2 style={{textAlign: 'center'}}>\n          This tool will help you transfer your playlists from any service to Spotify.\n        </h2>\n        {this.loginMessage()}\n      </div>\n    );\n  }\n}","import Papa from 'papaparse';\nimport axios from 'axios';\nimport axiosCancel from 'axios-cancel';\nimport { findIndex } from 'lodash';\n\nimport { API_URL } from '../constants/Constants';\nimport { getToken } from './AuthService';\n\naxiosCancel(axios);\n\nexport default class AppleMusicPlaylist {\n\n  constructor (settings) {\n    this._playlist = [];\n    this.changeCallbacks = [];\n    this.spotifyStatus = null;\n    this.settings = {\n      searchFormat: '{name} {artist}',\n      ...settings\n    };\n  }\n\n  setPlaylist (playlist) {\n    let parsed = Papa.parse(playlist, {\n      header: true\n    });\n    if (parsed.errors.length && !parsed.data.length) {\n      throw new Error('Couldn\\'t parse the playlist.');\n    }\n    parsed.data.pop();\n    for (let index = 0; parsed.data.length > index; index++) {\n      const\n        track = parsed.data[index],\n        keys = Object.keys(track);\n      if (!keys.includes('Name') || !keys.includes('Artist') || !keys.includes('Album')) {\n        throw new Error('Playlist is not a valid apple music playlist.');\n      }\n      this._playlist.push({\n        index,\n        name           : track.Name,\n        artist         : track.Artist,\n        album          : track.Album,\n        composer       : track.Composer,\n        discCount      : track['Disc Count'],\n        discNumber     : track['Disc Number'],\n        genre          : track.Genre,\n        trackCount     : track['Track Count'],\n        trackNumber    : track['Track Number'],\n        year           : track.Year,\n        spotifyStatus  : 'pending',\n        spotifyResults : null,\n        spotifySelected: null\n      });\n    }\n  }\n\n  setVKPlaylist (response) {\n    var x = 0\n    for (var value of response.data.items) {\n      this._playlist.push({\n        index          : x,\n        name           : value.title,\n        artist         : value.artist,\n        //album          : value.album.title,\n        //composer       : value.main_artists.name,\n        discCount      : '1',\n        discNumber     : '1',\n        year           : new Date(value.date * 1000).getFullYear(),\n        spotifyStatus  : 'pending',\n        spotifyResults : null,\n        spotifySelected: null\n      });\n      x++\n    }\n  }\n\n  setYandexPlaylist (response) {\n    this._playlist = response.data\n  }\n\n  filter (indexes) {\n    const newPlaylist = [];\n    for (let i = 0; indexes.length > i; i++) {\n      newPlaylist.push(this._playlist[indexes[i]]);\n    }\n    this._playlist = newPlaylist;\n  }\n\n  get playlist () {\n    return this._playlist;\n  }\n\n  getPlaylist (status) {\n    const output = [];\n    for (let index = 0; this._playlist.length > index; index++) {\n      if (this._playlist[index].spotifyStatus === status) {\n        output.push(this._playlist[index]);\n      }\n    }\n    return output;\n  }\n\n  setSpotifySelected (trackIndex, id) {\n    const track = this._playlist[trackIndex];\n    let selectedIndex = findIndex(track.spotifyResults, {id});\n    track.spotifySelected = track.spotifyResults[selectedIndex];\n    this.triggerChange();\n    return this;\n  }\n\n  setSpotifyStatus (status) {\n    this.spotifyStatus = status;\n    this.triggerChange();\n\n    return this;\n  }\n\n  onChange (cb) {\n    this.changeCallbacks.push(cb);\n  }\n\n  triggerChange () {\n    for (let index = 0; this.changeCallbacks.length > index; index++) {\n      this.changeCallbacks[index]();\n    }\n  }\n\n  startSearch () {\n    this.searchTimeout = setTimeout(this._search.bind(this), 1);\n  }\n\n  searchKeyword (track) {\n    const placeholders = ['{name}', '{artist}', '{album}', '{composer}', '{discCount}', '{discNumber}', '{genre}', '{trackCount}', '{trackNumber}', '{year}'];\n    let keyword = this.settings.searchFormat;\n    for (let index = 0; placeholders.length > index; index++) {\n      keyword = keyword.replace(placeholders[index], track[placeholders[index].slice(1, -1)]);\n    }\n    return keyword;\n  }\n\n  option (key, value) {\n    this.settings[key] = value;\n\n    return this;\n  }\n\n  _search () {\n    let track;\n    for (let index = 0; this._playlist.length > index; index++) {\n      if (this._playlist[index].spotifyStatus === 'pending') {\n        track = this._playlist[index];\n        break;\n      }\n    }\n    if (!track) {\n      this.spotifyStatus = 'searchComplete';\n      this.triggerChange();\n      return;\n    }\n    this.spotifyStatus = 'searching';\n    track.spotifyStatus = 'searching';\n    this.triggerChange();\n    axios.get(\n      `${API_URL}/v1/search`,\n      {\n        requestId: 'search',\n        headers  : {\n          Authorization: `Bearer ${getToken()}`\n        },\n        params   : {\n          type : 'track',\n          q    : this.searchKeyword(track),\n          limit: 10\n        }\n      }\n    )\n      .then((res) => {\n        track.spotifyStatus = res.data.tracks.total === 0 ? 'noResult' : 'withResult';\n        track.spotifyResults = res.data.tracks.items;\n        if (res.data.tracks.total)\n          track.spotifySelected = res.data.tracks.items[0];\n        this.searchTimeout = setTimeout(this._search.bind(this), 10);\n      })\n      .catch((error) => {\n        track.spotifyStatus = axios.isCancel(error) ? 'pending' : 'failed';\n      })\n      .finally(() => {\n        this.triggerChange();\n      });\n\n  }\n\n  pauseSearch () {\n    this.spotifyStatus = 'paused';\n    clearTimeout(this.searchTimeout);\n    this.triggerChange();\n    axios.cancel('search');\n  }\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/56/settings_outline';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport Icon28SmileOutline from '@vkontakte/icons/dist/44/smile_outline';\nimport Icon28Pause from '@vkontakte/icons/dist/48/pause';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {\n  Table,\n  Button,\n  Tag,\n  Modal,\n  List,\n  Avatar,\n  Switch,\n  Popconfirm,\n  Popover,\n  Form,\n  Input,\n  Progress\n} from 'antd';\nimport { each } from 'lodash';\nimport { formatSeconds } from '../../services/UtilsService';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nvar completed, finded, failed;\nconst FormItem = Form.Item;\n\nclass appleStep3 extends React.Component {\n\n  state = {\n    settingsItem   : null,\n    settingsVisible: false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  buttons (placement) {\n    let nextStepDisabled = true;\n    const {playlist} = this.props;\n    const {spotifyStatus} = playlist;\n    completed = 0;\n    finded = 0;\n    failed = 0;\n    for (let index = 0; playlist.playlist.length > index; index++) {\n      if (playlist.playlist[index].spotifyStatus === 'withResult') {\n        nextStepDisabled = false;\n      }\n      if (playlist.playlist[index].spotifyStatus !== 'pending') {\n        completed++\n      }\n      if (playlist.playlist[index].spotifyStatus === 'withResult') {\n        finded++\n      }\n      if (playlist.playlist[index].spotifyStatus === 'noResult') {\n        failed++\n      }\n    }\n    completed = Math.round(completed/playlist.playlist.length*100)\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        disabled={spotifyStatus !== 'paused' && spotifyStatus !== null}\n        onClick={this.resume.bind(this)}\n        type='dashed'\n      >\n        Start/Resume\n      </Button>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3 }}\n        disabled={spotifyStatus !== 'searching'}\n        onClick={this.pause.bind(this)}\n      >\n        <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Pause<Icon28Pause width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n      </Button>\n      <Popover\n        trigger=\"click\"\n        placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n        content={this.settings()}\n      >\n        <Button\n          size={'large'}\n          style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        >\n          <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Search Settings<Icon24SettingsOutline width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n        </Button>\n      </Popover>\n\n      {\n        playlist.spotifyStatus !== 'searchComplete' &&\n        <Popconfirm\n          title=\"The search is not complete. Are you sure you want to go to the next step?\"\n          onConfirm={this.nextStep.bind(this)}\n          okText=\"Yes\"\n          placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n          cancelText=\"No\">\n          <Button\n            type=\"primary\"\n            size={'large'}\n            disabled={nextStepDisabled}\n            style={{borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n          >\n            <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n          </Button>\n        </Popconfirm>\n      }\n      {\n        playlist.spotifyStatus === 'searchComplete' &&\n        <Button\n          type=\"link\"\n          size={'large'}\n          style={{ background: '#d6363f', color: '#fff', borderRadius: '500px', marginTop: 3 }}\n          onClick={this.nextStep.bind(this)}\n          disabled={nextStepDisabled}\n        >\n          <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n        </Button>\n      }\n\n    </div>;\n  }\n\n  nextStep () {\n    this.props.nextStep();\n  }\n\n  pause () {\n    this.props.playlist.pauseSearch();\n  }\n\n  resume () {\n    this.props.playlist.startSearch();\n  }\n\n  trackLabel (track) {\n    const status = track.spotifyStatus;\n    switch (status) {\n      default:\n      case 'pending':\n        return <Tag color=\"#7f8c8d\" style={{borderRadius: '500px'}}>Pending</Tag>;\n      case 'failed':\n        return <Tag color=\"#e74c3c\" style={{borderRadius: '500px'}}>Failed</Tag>;\n      case 'searching':\n        return <Tag color=\"#8e44ad\" style={{borderRadius: '500px'}}>Searching</Tag>;\n      case 'noResult':\n        return <Tag color=\"#f1c40f\" style={{borderRadius: '500px'}}>No Result</Tag>;\n      case 'withResult':\n        return <Tag color=\"#27ae60\" style={{borderRadius: '500px'}}>Found</Tag>;\n    }\n  }\n\n  statusColumn (text, row) {\n    const status = row.spotifyStatus;\n    return <div style={{display: 'flex', alignItems: 'center'}}>\n      {this.trackLabel(row)}\n      {\n        status === 'withResult' &&\n        <Button\n          style={{borderRadius: '500px'}}\n          size={'small'}\n          onClick={() => {\n            this.setState({settingsItem: row.index, settingsVisible: true});\n          }}><Icon24SettingsOutline width={20} height={20}/></Button>}\n    </div>;\n  }\n\n  settings () {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form\n        style={{width: 300}}\n        onSubmit={this.settingsFormSave.bind(this)}\n      >\n        <FormItem\n          label='Search Format'\n          help=\"Placeholders: {name}, {artist}, {album}, {composer}, {discCount}, {discNumber}, {genre}, {trackCount}, {trackNumber} and {year}\"\n        >\n          {getFieldDecorator('searchFormat',\n            {\n              initialValue: this.props.playlist.settings.searchFormat,\n              rules       : [{required: true, message: 'Please fill the field.'}],\n            })(\n            <Input placeholder=\"Search Format\"/>\n          )}\n        </FormItem>\n        <FormItem style={{marginBottom: 0}}>\n          <Button\n            type=\"primary\"\n            style={{width: '100%'}}\n            htmlType=\"submit\"\n          ><div display='flex'>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer'}}>\n            Done<Icon28SmileOutline width={20} height={20}  style={{marginLeft: 4}}/>\n          </div>\n        </div>\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n\n  settingsFormSave (e) {\n    e.preventDefault();\n    const {props} = this;\n    props.form.validateFields((errors, values) => {\n      if (!errors) {\n        each(values, (value, key) => {\n          props.playlist.option(key, value);\n        });\n      }\n    });\n  }\n\n  songSettingsModal () {\n    const {playlist} = this.props;\n    const {settingsItem} = this.state;\n    let track, data = [], selectedTrack;\n    if (this.state.settingsItem !== null) {\n      track = playlist.playlist[settingsItem];\n      selectedTrack = playlist.playlist[settingsItem].spotifySelected;\n      for (let index = 0; track.spotifyResults.length > index; index++) {\n        let spotifyTrack = track.spotifyResults[index];\n        data.push({\n          index,\n          id         : spotifyTrack.id,\n          name       : spotifyTrack.name,\n          link       : spotifyTrack.external_urls.spotify,\n          image      : spotifyTrack.album.images[1].url,\n          duration   : spotifyTrack.duration_ms / 1000,\n          trackNumber: spotifyTrack.track_number,\n          artistName : spotifyTrack.artists[0].name,\n          artistLink : spotifyTrack.artists[0].external_urls.spotify,\n          albumName  : spotifyTrack.album.name,\n          albumLink  : spotifyTrack.album.external_urls.spotify,\n          track      : spotifyTrack\n        });\n      }\n    }\n    return <Modal\n      title=\"Song Settings\"\n      visible={this.state.settingsVisible}\n      footer={null}\n      onCancel={() => {\n        this.setState({settingsVisible: false});\n        setTimeout(() => this.setState({settingsItem: null}), 200);\n      }}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={item => {\n          const switchAction = <Switch\n            checked={selectedTrack.id === item.id}\n            onChange={() => {\n              playlist.setSpotifySelected(settingsItem, item.id);\n            }}/>;\n          return <List.Item actions={[switchAction]}>\n            <List.Item.Meta\n              avatar={<Avatar src={item.image} size=\"large\"/>}\n              description={<p>Album: <a href={item.albumLink}>{item.albumName}</a> - {formatSeconds(item.duration)}</p>}\n              title={<a rel=\"noopener noreferrer\" href={item.link} target=\"_blank\">{item.artistName} - {item.name}</a>}\n            />\n          </List.Item>;\n        }}\n      />\n    </Modal>;\n  }\n\n  render () {\n    return <div>\n      <div style={{maxWidth: window.innerWidth-window.innerWidth*0.3, marginRight: 'auto', marginLeft: 'auto', textAlign: 'center' }}>\n      <Progress percent={finded} />\n      <Progress percent={failed} status=\"exception\" />\n      <Progress percent={completed} status=\"active\" strokeColor={{\n        '0%': '#108ee9',\n        '100%': '#87d068',\n      }} />\n      </div>\n      {this.buttons('top')}\n      <Table\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Status',\n            dataIndex: 'status',\n            width    : '13%',\n            render   : this.statusColumn.bind(this)\n          },\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.playlist}\n        pagination={false}\n        bordered\n      />\n      {this.buttons('bottom')}\n      {this.songSettingsModal()}\n    </div>;\n  }\n}\n\nappleStep3.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  nextStep: PropTypes.func.isRequired\n};\n\nexport default Form.create()(appleStep3);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/56/settings_outline';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport Icon28SmileOutline from '@vkontakte/icons/dist/44/smile_outline';\nimport Icon28Pause from '@vkontakte/icons/dist/48/pause';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {\n  Table,\n  Button,\n  Tag,\n  Modal,\n  List,\n  Avatar,\n  Switch,\n  Popconfirm,\n  Popover,\n  Form,\n  Input,\n  Progress\n} from 'antd';\nimport { each } from 'lodash';\nimport { formatSeconds } from '../../services/UtilsService';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nvar completed;\nconst FormItem = Form.Item;\n\nclass VKStep3 extends React.Component {\n\n  state = {\n    settingsItem   : null,\n    settingsVisible: false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  buttons (placement) {\n    let nextStepDisabled = true;\n    const {playlist} = this.props;\n    const {spotifyStatus} = playlist;\n    completed = 0;\n    for (let index = 0; playlist.playlist.length > index; index++) {\n      if (playlist.playlist[index].spotifyStatus === 'withResult') {\n        nextStepDisabled = false;\n      }\n      if (playlist.playlist[index].spotifyStatus !== 'pending') {\n        completed++\n      }\n    }\n    completed = Math.round(completed/playlist.playlist.length*100)\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        disabled={spotifyStatus !== 'paused' && spotifyStatus !== null}\n        onClick={this.resume.bind(this)}\n        type='dashed'\n      >\n        Start/Resume\n      </Button>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3 }}\n        disabled={spotifyStatus !== 'searching'}\n        onClick={this.pause.bind(this)}\n      >\n        <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Pause<Icon28Pause width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n      </Button>\n      <Popover\n        trigger=\"click\"\n        placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n        content={this.settings()}\n      >\n        <Button\n          size={'large'}\n          style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        >\n          <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Search Settings<Icon24SettingsOutline width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n        </Button>\n      </Popover>\n\n      {\n        playlist.spotifyStatus !== 'searchComplete' &&\n        <Popconfirm\n          title=\"The search is not complete. Are you sure you want to go to the next step?\"\n          onConfirm={this.nextStep.bind(this)}\n          okText=\"Yes\"\n          placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n          cancelText=\"No\">\n          <Button\n            type=\"primary\"\n            size={'large'}\n            disabled={nextStepDisabled}\n            style={{borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n          >\n            <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n          </Button>\n        </Popconfirm>\n      }\n      {\n        playlist.spotifyStatus === 'searchComplete' &&\n        <Button\n          type=\"link\"\n          size={'large'}\n          style={{ background: '#d6363f', color: '#fff', borderRadius: '500px', marginTop: 3 }}\n          onClick={this.nextStep.bind(this)}\n          disabled={nextStepDisabled}\n        >\n          <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n        </Button>\n      }\n\n    </div>;\n  }\n\n  nextStep () {\n    this.props.nextStep();\n  }\n\n  pause () {\n    this.props.playlist.pauseSearch();\n  }\n\n  resume () {\n    this.props.playlist.startSearch();\n  }\n\n  trackLabel (track) {\n    const status = track.spotifyStatus;\n    switch (status) {\n      default:\n      case 'pending':\n        return <Tag color=\"#7f8c8d\" style={{borderRadius: '500px'}}>Pending</Tag>;\n      case 'failed':\n        return <Tag color=\"#e74c3c\" style={{borderRadius: '500px'}}>Failed</Tag>;\n      case 'searching':\n        return <Tag color=\"#8e44ad\" style={{borderRadius: '500px'}}>Searching</Tag>;\n      case 'noResult':\n        return <Tag color=\"#f1c40f\" style={{borderRadius: '500px'}}>No Result</Tag>;\n      case 'withResult':\n        return <Tag color=\"#27ae60\" style={{borderRadius: '500px'}}>Found</Tag>;\n    }\n  }\n\n  statusColumn (text, row) {\n    const status = row.spotifyStatus;\n    return <div style={{display: 'flex', alignItems: 'center'}}>\n      {this.trackLabel(row)}\n      {\n        status === 'withResult' &&\n        <Button\n          style={{borderRadius: '500px'}}\n          size={'small'}\n          onClick={() => {\n            this.setState({settingsItem: row.index, settingsVisible: true});\n          }}><Icon24SettingsOutline width={20} height={20}/></Button>}\n    </div>;\n  }\n\n  settings () {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form\n        style={{width: 300}}\n        onSubmit={this.settingsFormSave.bind(this)}\n      >\n        <FormItem\n          label='Search Format'\n          help=\"Placeholders: {name}, {artist}, {discCount}, {discNumber} and {year}\"\n        >\n          {getFieldDecorator('searchFormat',\n            {\n              initialValue: this.props.playlist.settings.searchFormat,\n              rules       : [{required: true, message: 'Please fill the field.'}],\n            })(\n            <Input placeholder=\"Search Format\"/>\n          )}\n        </FormItem>\n        <FormItem style={{marginBottom: 0}}>\n          <Button\n            type=\"primary\"\n            style={{width: '100%'}}\n            htmlType=\"submit\"\n          ><div display='flex'>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer'}}>\n            Done<Icon28SmileOutline width={20} height={20}  style={{marginLeft: 4}}/>\n          </div>\n        </div>\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n\n  settingsFormSave (e) {\n    e.preventDefault();\n    const {props} = this;\n    props.form.validateFields((errors, values) => {\n      if (!errors) {\n        each(values, (value, key) => {\n          props.playlist.option(key, value);\n        });\n      }\n    });\n  }\n\n  songSettingsModal () {\n    const {playlist} = this.props;\n    const {settingsItem} = this.state;\n    let track, data = [], selectedTrack;\n    if (this.state.settingsItem !== null) {\n      track = playlist.playlist[settingsItem];\n      selectedTrack = playlist.playlist[settingsItem].spotifySelected;\n      for (let index = 0; track.spotifyResults.length > index; index++) {\n        let spotifyTrack = track.spotifyResults[index];\n        data.push({\n          index,\n          id         : spotifyTrack.id,\n          name       : spotifyTrack.name,\n          link       : spotifyTrack.external_urls.spotify,\n          image      : spotifyTrack.album.images[1].url,\n          duration   : spotifyTrack.duration_ms / 1000,\n          trackNumber: spotifyTrack.track_number,\n          artistName : spotifyTrack.artists[0].name,\n          artistLink : spotifyTrack.artists[0].external_urls.spotify,\n          albumName  : spotifyTrack.album.name,\n          albumLink  : spotifyTrack.album.external_urls.spotify,\n          track      : spotifyTrack\n        });\n      }\n    }\n    return <Modal\n      title=\"Song Settings\"\n      visible={this.state.settingsVisible}\n      footer={null}\n      onCancel={() => {\n        this.setState({settingsVisible: false});\n        setTimeout(() => this.setState({settingsItem: null}), 200);\n      }}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={item => {\n          const switchAction = <Switch\n            checked={selectedTrack.id === item.id}\n            onChange={() => {\n              playlist.setSpotifySelected(settingsItem, item.id);\n            }}/>;\n          return <List.Item actions={[switchAction]}>\n            <List.Item.Meta\n              avatar={<Avatar src={item.image} size=\"large\"/>}\n              description={<p>Album: <a href={item.albumLink}>{item.albumName}</a> - {formatSeconds(item.duration)}</p>}\n              title={<a rel=\"noopener noreferrer\" href={item.link} target=\"_blank\">{item.artistName} - {item.name}</a>}\n            />\n          </List.Item>;\n        }}\n      />\n    </Modal>;\n  }\n\n  render () {\n    return <div>\n      <Progress percent={completed} status=\"active\" />\n      {this.buttons('top')}\n      <Table\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Status',\n            dataIndex: 'status',\n            width    : '13%',\n            render   : this.statusColumn.bind(this)\n          },\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.playlist}\n        pagination={false}\n        bordered\n      />\n      {this.buttons('bottom')}\n      {this.songSettingsModal()}\n    </div>;\n  }\n}\n\nVKStep3.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  nextStep: PropTypes.func.isRequired\n};\n\nexport default Form.create()(VKStep3);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/56/settings_outline';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport Icon28SmileOutline from '@vkontakte/icons/dist/44/smile_outline';\nimport Icon28Pause from '@vkontakte/icons/dist/48/pause';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {\n  Table,\n  Button,\n  Tag,\n  Modal,\n  List,\n  Avatar,\n  Switch,\n  Popconfirm,\n  Popover,\n  Form,\n  Input,\n  Progress\n} from 'antd';\nimport { each } from 'lodash';\nimport { formatSeconds } from '../../services/UtilsService';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nvar completed;\nconst FormItem = Form.Item;\n\nclass YandexStep3 extends React.Component {\n\n  state = {\n    settingsItem   : null,\n    settingsVisible: false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  buttons (placement) {\n    let nextStepDisabled = true;\n    const {playlist} = this.props;\n    const {spotifyStatus} = playlist;\n    completed = 0;\n    for (let index = 0; playlist.playlist.length > index; index++) {\n      if (playlist.playlist[index].spotifyStatus === 'withResult') {\n        nextStepDisabled = false;\n      }\n      if (playlist.playlist[index].spotifyStatus !== 'pending') {\n        completed++\n      }\n    }\n    completed = Math.round(completed/playlist.playlist.length*100)\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        disabled={spotifyStatus !== 'paused' && spotifyStatus !== null}\n        onClick={this.resume.bind(this)}\n        type='dashed'\n      >\n        Start/Resume\n      </Button>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3 }}\n        disabled={spotifyStatus !== 'searching'}\n        onClick={this.pause.bind(this)}\n      >\n        <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Pause<Icon28Pause width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n      </Button>\n      <Popover\n        trigger=\"click\"\n        placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n        content={this.settings()}\n      >\n        <Button\n          size={'large'}\n          style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        >\n          <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Search Settings<Icon24SettingsOutline width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n        </Button>\n      </Popover>\n\n      {\n        playlist.spotifyStatus !== 'searchComplete' &&\n        <Popconfirm\n          title=\"The search is not complete. Are you sure you want to go to the next step?\"\n          onConfirm={this.nextStep.bind(this)}\n          okText=\"Yes\"\n          placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n          cancelText=\"No\">\n          <Button\n            type=\"primary\"\n            size={'large'}\n            disabled={nextStepDisabled}\n            style={{borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n          >\n            <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n          </Button>\n        </Popconfirm>\n      }\n      {\n        playlist.spotifyStatus === 'searchComplete' &&\n        <Button\n          type=\"link\"\n          size={'large'}\n          style={{ background: '#d6363f', color: '#fff', borderRadius: '500px', marginTop: 3 }}\n          onClick={this.nextStep.bind(this)}\n          disabled={nextStepDisabled}\n        >\n          <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n        </Button>\n      }\n\n    </div>;\n  }\n\n  nextStep () {\n    this.props.nextStep();\n  }\n\n  pause () {\n    this.props.playlist.pauseSearch();\n  }\n\n  resume () {\n    this.props.playlist.startSearch();\n  }\n\n  trackLabel (track) {\n    const status = track.spotifyStatus;\n    switch (status) {\n      default:\n      case 'pending':\n        return <Tag color=\"#7f8c8d\" style={{borderRadius: '500px'}}>Pending</Tag>;\n      case 'failed':\n        return <Tag color=\"#e74c3c\" style={{borderRadius: '500px'}}>Failed</Tag>;\n      case 'searching':\n        return <Tag color=\"#8e44ad\" style={{borderRadius: '500px'}}>Searching</Tag>;\n      case 'noResult':\n        return <Tag color=\"#f1c40f\" style={{borderRadius: '500px'}}>No Result</Tag>;\n      case 'withResult':\n        return <Tag color=\"#27ae60\" style={{borderRadius: '500px'}}>Found</Tag>;\n    }\n  }\n\n  statusColumn (text, row) {\n    const status = row.spotifyStatus;\n    return <div style={{display: 'flex', alignItems: 'center'}}>\n      {this.trackLabel(row)}\n      {\n        status === 'withResult' &&\n        <Button\n          style={{borderRadius: '500px'}}\n          size={'small'}\n          onClick={() => {\n            this.setState({settingsItem: row.index, settingsVisible: true});\n          }}><Icon24SettingsOutline width={20} height={20}/></Button>}\n    </div>;\n  }\n\n  settings () {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form\n        style={{width: 300}}\n        onSubmit={this.settingsFormSave.bind(this)}\n      >\n        <FormItem\n          label='Search Format'\n          help=\"Placeholders: {name}, {artist}, {album}, {composer}, {discCount}, {discNumber}, {genre}, {trackCount}, {trackNumber} and {year}\"\n        >\n          {getFieldDecorator('searchFormat',\n            {\n              initialValue: this.props.playlist.settings.searchFormat,\n              rules       : [{required: true, message: 'Please fill the field.'}],\n            })(\n            <Input placeholder=\"Search Format\"/>\n          )}\n        </FormItem>\n        <FormItem style={{marginBottom: 0}}>\n          <Button\n            type=\"primary\"\n            style={{width: '100%'}}\n            htmlType=\"submit\"\n          ><div display='flex'>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer'}}>\n            Done<Icon28SmileOutline width={20} height={20}  style={{marginLeft: 4}}/>\n          </div>\n        </div>\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n\n  settingsFormSave (e) {\n    e.preventDefault();\n    const {props} = this;\n    props.form.validateFields((errors, values) => {\n      if (!errors) {\n        each(values, (value, key) => {\n          props.playlist.option(key, value);\n        });\n      }\n    });\n  }\n\n  songSettingsModal () {\n    const {playlist} = this.props;\n    const {settingsItem} = this.state;\n    let track, data = [], selectedTrack;\n    if (this.state.settingsItem !== null) {\n      track = playlist.playlist[settingsItem];\n      selectedTrack = playlist.playlist[settingsItem].spotifySelected;\n      for (let index = 0; track.spotifyResults.length > index; index++) {\n        let spotifyTrack = track.spotifyResults[index];\n        data.push({\n          index,\n          id         : spotifyTrack.id,\n          name       : spotifyTrack.name,\n          link       : spotifyTrack.external_urls.spotify,\n          image      : spotifyTrack.album.images[1].url,\n          duration   : spotifyTrack.duration_ms / 1000,\n          trackNumber: spotifyTrack.track_number,\n          artistName : spotifyTrack.artists[0].name,\n          artistLink : spotifyTrack.artists[0].external_urls.spotify,\n          albumName  : spotifyTrack.album.name,\n          albumLink  : spotifyTrack.album.external_urls.spotify,\n          track      : spotifyTrack\n        });\n      }\n    }\n    return <Modal\n      title=\"Song Settings\"\n      visible={this.state.settingsVisible}\n      footer={null}\n      onCancel={() => {\n        this.setState({settingsVisible: false});\n        setTimeout(() => this.setState({settingsItem: null}), 200);\n      }}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={item => {\n          const switchAction = <Switch\n            checked={selectedTrack.id === item.id}\n            onChange={() => {\n              playlist.setSpotifySelected(settingsItem, item.id);\n            }}/>;\n          return <List.Item actions={[switchAction]}>\n            <List.Item.Meta\n              avatar={<Avatar src={item.image} size=\"large\"/>}\n              description={<p>Album: <a href={item.albumLink}>{item.albumName}</a> - {formatSeconds(item.duration)}</p>}\n              title={<a rel=\"noopener noreferrer\" href={item.link} target=\"_blank\">{item.artistName} - {item.name}</a>}\n            />\n          </List.Item>;\n        }}\n      />\n    </Modal>;\n  }\n\n  render () {\n    return <div>\n      <Progress percent={completed} status=\"active\" />\n      {this.buttons('top')}\n      <Table\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Status',\n            dataIndex: 'status',\n            width    : '13%',\n            render   : this.statusColumn.bind(this)\n          },\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.playlist}\n        pagination={false}\n        bordered\n      />\n      {this.buttons('bottom')}\n      {this.songSettingsModal()}\n    </div>;\n  }\n}\n\nYandexStep3.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  nextStep: PropTypes.func.isRequired\n};\n\nexport default Form.create()(YandexStep3);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28DownloadOutline from '@vkontakte/icons/dist/28/download_outline';\nimport { Upload, Card, notification } from 'antd';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nexport default class AppleStep1 extends React.Component {\n\n  beforeUpload (file) {\n    let reader = new FileReader();\n    reader.readAsText(file, 'UTF-8');\n    reader.onload = (evt) => {\n      const text = evt.target.result;\n      try {\n        this.props.playlist.setPlaylist(text);\n        this.props.onUpload();\n      }\n      catch (error) {\n        notification.error({\n          message    : 'Error',\n          description: error.message\n        });\n      }\n    };\n    reader.onerror = function (evt) {\n      notification.error({\n        message    : 'Error',\n        description: 'Couldn\\'t read file content. Please try again.'\n      });\n    };\n    return false;\n  }\n\n  render () {\n    return <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n      <p>\n        Select your playlist in iTunes and from \"File\" menu click on \"Library\" then \"Export Playlist\". <br/>\n        Then from \"Format\" menu select \"Unicode Text\" and save the file. (must be a <code>.txt</code> file) <br/>\n        Upload this file from the following field:\n      </p>\n      <Upload beforeUpload={this.beforeUpload.bind(this)} fileList={[]}>\n        <Button before={<Icon28DownloadOutline/>} style={{color: '#1DB954', background: '#e2f1e5', cursor: 'pointer'}}>\n          Select File\n        </Button>\n      </Upload>\n    </Card>;\n  }\n}\n\nAppleStep1.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  onUpload: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport { Table } from 'antd';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nexport default class appleStep2 extends React.Component {\n\n  state = {\n    selectedRowKeys: []\n  };\n\n  nextStep () {\n    this.props.playlist.filter(this.state.selectedRowKeys);\n    this.props.next();\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    this.setState({selectedRowKeys});\n  };\n\n  nextStepButton () {\n    const {selectedRowKeys} = this.state;\n    const hasSelected = selectedRowKeys.length > 0;\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n           <span style={{marginRight: 8}}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n      <Button\n      size=\"l\" \n      style={{ background: '#d6363f', color: '#fff', borderRadius: '500px' }}\n      onClick={this.nextStep.bind(this)}\n      disabled={!hasSelected}>\n        <div\n        display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n            </div>\n          </div>\n      </Button>\n    </div>;\n  }\n\n  render () {\n    const {selectedRowKeys} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    return (\n      <div style={{padding: '0 0'}}>\n        {this.nextStepButton()}\n        <Table\n          rowSelection={rowSelection}\n          columns={[\n            {\n              title    : 'Name',\n              dataIndex: 'name',\n            },\n            {\n              title    : 'Artist',\n              dataIndex: 'artist',\n            },\n            {\n              title    : 'Album',\n              dataIndex: 'album',\n            }\n          ]}\n          rowKey={'index'}\n          dataSource={this.props.playlist.playlist}\n          pagination={false}\n          bordered\n        />\n        {this.nextStepButton()}\n      </div>\n    );\n  }\n}\n\nappleStep2.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  next    : PropTypes.func.isRequired\n};","export const formatSeconds = (seconds) => {\n  const date = new Date(null);\n  date.setSeconds(seconds);\n  return date\n    .toISOString()\n    .substr(11, 8);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { chunk } from 'lodash';\nimport { Card, Dropdown, Button, Menu, Form, Input, Modal, Checkbox, Table, Alert } from 'antd';\n\nimport { getPlaylists, createPlaylist, addTrackToPlaylist } from '../../services/ApiService';\n\nconst FormItem = Form.Item;\nconst {TextArea} = Input;\n\nclass appleStep4 extends React.Component {\n\n  state = {\n    playlist                  : null,\n    userPlaylists             : null,\n    fetchingPlaylists         : false,\n    isCreatingPlaylist        : false,\n    createPlaylistModalVisible: false,\n    isImporting               : false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  selectPlaylist () {\n    if (this.state.userPlaylists !== null) {\n      return;\n    }\n    this.setState({fetchingPlaylists: true});\n    getPlaylists()\n      .then((res) => {\n        this.setState({\n          fetchingPlaylists: false,\n          userPlaylists    : res.data\n        });\n      })\n      .catch(() => {\n        alert('Couldn\\'t get playlists. Please try again.');\n      });\n  }\n\n  selectPlaylistsMenu () {\n    return <Menu onClick={(event) => {\n      this.setState({\n        playlist: event.item.props.playlist\n      }, () => {\n        this.importSong();\n      });\n    }}>\n      {this.state.userPlaylists === null ? null : this.state.userPlaylists.items.map((playlist, index) => {\n        return <Menu.Item key={index} playlist={playlist}>\n          {playlist.name}\n        </Menu.Item>;\n      })}\n    </Menu>;\n  }\n\n  createPlaylistModal () {\n    const {getFieldDecorator} = this.props.form;\n    return <Modal\n      title=\"Create Playlist\"\n      closable={false}\n      maskClosable={true}\n      visible={this.state.createPlaylistModalVisible}\n      onCancel={() => this.setState({createPlaylistModalVisible: false})}\n      footer={[\n        <Button style={{cursor: 'pointer'}} key=\"back\" onClick={() => this.setState({createPlaylistModalVisible: false})}>Cancel</Button>,\n        <Button style={{cursor: 'pointer'}} key=\"submit\" type=\"primary\" loading={this.state.isCreatingPlaylist} onClick={this.createPlaylist.bind(this)}>\n          Create\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={this.createPlaylist.bind(this)}>\n        <FormItem>\n          {getFieldDecorator('name', {\n            validateTrigger: 'onBlur',\n            rules          : [\n              {\n                required: true,\n                message : 'Please enter a name'\n              }\n            ]\n          })(\n            <Input placeholder=\"Playlist Name\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('description', {\n            initialValue: ''\n          })(\n            <TextArea autosize={true} placeholder=\"Playlist Description\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('isPublic', {\n            initialValue: true\n          })(\n            <Checkbox defaultChecked={true}>This is a public playlist!</Checkbox>\n          )}\n        </FormItem>\n      </Form>\n    </Modal>;\n  }\n\n  createPlaylist (e) {\n    if (e)\n      e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.setState({\n          isCreatingPlaylist: true\n        });\n        createPlaylist(\n          this.props.user.id,\n          values.name,\n          values.description,\n          values.isPublic\n        )\n          .then((res) => {\n            this.setState({\n              isCreatingPlaylist        : false,\n              createPlaylistModalVisible: false,\n              playlist                  : res.data\n            });\n            this.importSong();\n          })\n          .catch(() => {\n            alert(`Couldn't create the playlist. Please refresh the page.`);\n          });\n      }\n    });\n\n  }\n\n  async importSong () {\n    this.props.playlist.setSpotifyStatus('importing');\n    const songs = this.props.playlist.getPlaylist('withResult');\n    const chunks = chunk(songs, 100);\n    for (let index = 0; chunks.length > index; index++) {\n      let songsUri = [];\n      for (let songIndex = 0; chunks[index].length > songIndex; songIndex++) {\n        songsUri.push(chunks[index][songIndex].spotifySelected.uri);\n      }\n      await addTrackToPlaylist(this.props.user.id, this.state.playlist.id, songsUri);\n    }\n    this.props.playlist.setSpotifyStatus('done');\n  }\n\n  importTable () {\n    return (\n      <Table\n        loading={this.state.isImporting}\n        bordered={true}\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.getPlaylist('withResult')}\n        pagination={false}/>\n    );\n  }\n\n  render () {\n    const {playlist} = this.props;\n    if (playlist.spotifyStatus === 'done') {\n      return <Alert\n        message=\"All Songs Imported\"\n        description={<div>\n          All songs imported. <br/>\n          <a href={this.state.playlist.external_urls.spotify}>{this.state.playlist.name}</a>\n        </div>}\n        type=\"success\"\n        showIcon\n      />;\n    }\n    return <div>\n      {this.state.playlist === null &&\n      <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n        <p>\n        Choose where you want to move the songs, to a new album or an existing one?\n        </p>\n        <Button\n          type=\"link\"\n          size={'large'}\n          onClick={() => this.setState({createPlaylistModalVisible: true})}\n          style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '45px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n          Create a New Playlist\n        </Button>\n        <Dropdown trigger={['click']} overlay={this.selectPlaylistsMenu()} placement=\"bottomLeft\">\n          <Button\n            type=\"link\"\n            size={'large'}\n            onClick={this.selectPlaylist.bind(this)}\n            loading={this.state.fetchingPlaylists}\n            style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '45px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n            Import to Existing Playlist\n          </Button>\n        </Dropdown>\n      </Card>}\n      {this.state.playlist !== null && this.importTable()}\n\n      {this.createPlaylistModal()}\n    </div>;\n  }\n}\n\nappleStep4.propTypes = {\n  user    : PropTypes.object.isRequired,\n  playlist: PropTypes.object.isRequired\n};\n\nexport default Form.create()(appleStep4);","import React from 'react';\nimport { Steps } from 'antd';\n\nimport { isLoggedIn } from '../../services/AuthService';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\nimport { getCurrentUser } from '../../services/ApiService';\nimport AppleStep1 from './AppleStep1';\nimport AppleStep2 from './AppleStep2';\nimport AppleStep3 from './AppleStep3';\nimport AppleStep4 from './AppleStep4';\n\nexport default class Apple extends React.Component {\n\n  state = {\n    isFetching    : false,\n    isFetchingUser: false,\n    user          : null,\n    step          : 0\n  };\n\n  constructor () {\n    super();\n    this.appleMusicPlaylist = new AppleMusicPlaylist({});\n  }\n\n  componentWillMount () {\n    if (isLoggedIn()) {\n      this.setState({\n        isFetchingUser: true\n      });\n      getCurrentUser()\n        .then((res) => {\n          this.setState({\n            isFetchingUser: false,\n            user          : res.data\n          });\n        })\n        .catch(() => {\n          alert(`Couldn't fetch your data. Please refresh the page or try logging in again!`);\n        });\n    }\n  }\n\n  step1 () {\n    return <AppleStep1\n      playlist={this.appleMusicPlaylist}\n      onUpload={() => {\n        this.setState({\n          step: 1\n        });\n      }}\n    />;\n  }\n\n  step2 () {\n    return <AppleStep2\n      playlist={this.appleMusicPlaylist}\n      next={() => this.setState({step: 2})}\n    />;\n  }\n\n  step3 () {\n    return <AppleStep3\n      playlist={this.appleMusicPlaylist}\n      nextStep={() => this.setState({step: 3})}\n    />;\n  }\n\n  step4 () {\n    return <AppleStep4\n      user={this.state.user}\n      playlist={this.appleMusicPlaylist}\n    />;\n  }\n\n  content () {\n    switch (this.state.step) {\n      default:\n      case 0:\n        return this.step1();\n      case 1:\n        return this.step2();\n      case 2:\n        return this.step3();\n      case 3:\n        return this.step4();\n    }\n  }\n\n  render () {\n    const Step = Steps.Step;\n    if (!isLoggedIn()) {\n      return <h2 style={{textAlign: 'center'}}>You need to login first.</h2>;\n    }\n    if (this.state.isFetchingUser) {\n      return <p style={{textAlign: 'center'}}>Fetching your data...</p>;\n    }\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center', color: '#d6514c' }}>Apple Music</h2><br/>\n        <Steps current={this.state.step}>\n          <Step title=\"Upload Playlist\" description=\"Upload playlist file\"/>\n          <Step title=\"Select Playlist Songs\" description=\"Select specific songs of the playlist to transfer\"/>\n          <Step title=\"Find Playlist Songs\" description=\"Automatic search for playlist songs on Spotify\"/>\n          <Step title=\"Import Songs\" description=\"Import playlist songs to a Spotify playlist\"/>\n        </Steps>\n        <div style={{marginTop: 50}}>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { Card, notification } from 'antd';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\nimport axios from 'axios-jsonp-pro';\n\nexport default class VKStep1 extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { disabled: false }\n  }\n\n  render () {\n    return <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n      <p>\n        Insert the album link in the lower field and press Enter\n      </p>\n        <Input\n        disabled={this.state.disabled}\n        onKeyDown={async (e) => {\n          if (e.key === 'Enter') {\n            this.setState({ disabled: true })\n           try {\n            var userId; var playlistId; var access_key; var app;\n            app = 'vk'\n            var str = e.target.value\n            if (str.search(/playlist/i) > -1) {\n              str = str.split('playlist')\n              str.splice(0, 1)\n              str = str[0].toString()\n              str = str.split('_')\n              userId = Number(str[0].replace(/[^-_\\d]/g, ''))\n              str = str[1].split('/')\n              playlistId = Number(str[0])\n              access_key = str[1]\n            }\n            else if (str.search(/album/i) > -1) {\n              str = str.split('album')\n              str.splice(0, 1)\n              str = str[0].toString()\n              str = str.split('_')\n              userId = Number(str[0].replace(/[^-_\\d]/g, ''))\n              playlistId = Number(str[1])\n              access_key = str[2]\n            }\n            else {\n              this.setState({ disabled: false })\n              notification.error({\n                message    : 'Error',\n                description: 'Incorrect link. Please try again.'\n              });\n              return;\n            }\n            } catch {\n              this.setState({ disabled: false })\n              notification.error({\n                message    : 'Error',\n                description: 'Incorrect link. Please try again.'\n              });\n              return;\n            }\n          try {\n            await axios.post('https://server.dan0102dan.ru', {\n              data: {\n                userId, playlistId, access_key, app\n              }\n            })\n            .then((response) => {\n              try {\n              this.props.playlist.setVKPlaylist(response);\n              this.props.onUpload();\n              } catch {\n                this.setState({ disabled: false })\n                notification.error({\n                  message    : 'Error',\n                  description: response.data?.error_msg ? response.data?.error_msg : 'Server error'\n                });\n              }\n            })\n          } catch {\n            this.setState({ disabled: false })\n            notification.error({\n              message    : 'Error',\n              description: 'Your Internet connection is not stable.'\n            })\n          }\n        }\n        }} placeholder=\"https://vk.com/music/playlist/...\"/>\n    </Card>;\n  }\n}\n\nVKStep1.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  onUpload: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport { Table } from 'antd';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nexport default class VKStep2 extends React.Component {\n\n  state = {\n    selectedRowKeys: []\n  };\n\n  nextStep () {\n    this.props.playlist.filter(this.state.selectedRowKeys);\n    this.props.next();\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    this.setState({selectedRowKeys});\n  };\n\n  nextStepButton () {\n    const {selectedRowKeys} = this.state;\n    const hasSelected = selectedRowKeys.length > 0;\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n           <span style={{marginRight: 8}}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n      <Button\n      size=\"l\" \n      style={{ background: '#d6363f', color: '#fff', borderRadius: '500px' }}\n      onClick={this.nextStep.bind(this)}\n      disabled={!hasSelected}>\n        <div\n        display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n            </div>\n          </div>\n      </Button>\n    </div>;\n  }\n\n  render () {\n    const {selectedRowKeys} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    return (\n      <div style={{padding: '0 0'}}>\n        {this.nextStepButton()}\n        <Table\n          rowSelection={rowSelection}\n          columns={[\n            {\n              title    : 'Name',\n              dataIndex: 'name',\n            },\n            {\n              title    : 'Artist',\n              dataIndex: 'artist',\n            },\n            {\n              title    : 'Album',\n              dataIndex: 'album',\n            }\n          ]}\n          rowKey={'index'}\n          dataSource={this.props.playlist.playlist}\n          pagination={false}\n          bordered\n        />\n        {this.nextStepButton()}\n      </div>\n    );\n  }\n}\n\nVKStep2.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  next    : PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { chunk } from 'lodash';\nimport { Card, Dropdown, Button, Menu, Form, Input, Modal, Checkbox, Table, Alert } from 'antd';\n\nimport { getPlaylists, createPlaylist, addTrackToPlaylist } from '../../services/ApiService';\n\nconst FormItem = Form.Item;\nconst {TextArea} = Input;\n\nclass VKStep4 extends React.Component {\n\n  state = {\n    playlist                  : null,\n    userPlaylists             : null,\n    fetchingPlaylists         : false,\n    isCreatingPlaylist        : false,\n    createPlaylistModalVisible: false,\n    isImporting               : false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  selectPlaylist () {\n    if (this.state.userPlaylists !== null) {\n      return;\n    }\n    this.setState({fetchingPlaylists: true});\n    getPlaylists()\n      .then((res) => {\n        this.setState({\n          fetchingPlaylists: false,\n          userPlaylists    : res.data\n        });\n      })\n      .catch(() => {\n        alert('Couldn\\'t get playlists. Please try again.');\n      });\n  }\n\n  selectPlaylistsMenu () {\n    return <Menu onClick={(event) => {\n      this.setState({\n        playlist: event.item.props.playlist\n      }, () => {\n        this.importSong();\n      });\n    }}>\n      {this.state.userPlaylists === null ? null : this.state.userPlaylists.items.map((playlist, index) => {\n        return <Menu.Item key={index} playlist={playlist}>\n          {playlist.name}\n        </Menu.Item>;\n      })}\n    </Menu>;\n  }\n\n  createPlaylistModal () {\n    const {getFieldDecorator} = this.props.form;\n    return <Modal\n      title=\"Create Playlist\"\n      closable={false}\n      maskClosable={true}\n      visible={this.state.createPlaylistModalVisible}\n      onCancel={() => this.setState({createPlaylistModalVisible: false})}\n      footer={[\n        <Button style={{cursor: 'pointer'}} key=\"back\" onClick={() => this.setState({createPlaylistModalVisible: false})}>Cancel</Button>,\n        <Button style={{cursor: 'pointer'}} key=\"submit\" type=\"primary\" loading={this.state.isCreatingPlaylist} onClick={this.createPlaylist.bind(this)}>\n          Create\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={this.createPlaylist.bind(this)}>\n        <FormItem>\n          {getFieldDecorator('name', {\n            validateTrigger: 'onBlur',\n            rules          : [\n              {\n                required: true,\n                message : 'Please enter a name'\n              }\n            ]\n          })(\n            <Input placeholder=\"Playlist Name\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('description', {\n            initialValue: ''\n          })(\n            <TextArea autosize={true} placeholder=\"Playlist Description\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('isPublic', {\n            initialValue: true\n          })(\n            <Checkbox defaultChecked={true}>This is a public playlist!</Checkbox>\n          )}\n        </FormItem>\n      </Form>\n    </Modal>;\n  }\n\n  createPlaylist (e) {\n    if (e)\n      e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.setState({\n          isCreatingPlaylist: true\n        });\n        createPlaylist(\n          this.props.user.id,\n          values.name,\n          values.description,\n          values.isPublic\n        )\n          .then((res) => {\n            this.setState({\n              isCreatingPlaylist        : false,\n              createPlaylistModalVisible: false,\n              playlist                  : res.data\n            });\n            this.importSong();\n          })\n          .catch(() => {\n            alert(`Couldn't create the playlist. Please refresh the page.`);\n          });\n      }\n    });\n\n  }\n\n  async importSong () {\n    this.props.playlist.setSpotifyStatus('importing');\n    const songs = this.props.playlist.getPlaylist('withResult');\n    const chunks = chunk(songs, 100);\n    for (let index = 0; chunks.length > index; index++) {\n      let songsUri = [];\n      for (let songIndex = 0; chunks[index].length > songIndex; songIndex++) {\n        songsUri.push(chunks[index][songIndex].spotifySelected.uri);\n      }\n      await addTrackToPlaylist(this.props.user.id, this.state.playlist.id, songsUri);\n    }\n    this.props.playlist.setSpotifyStatus('done');\n  }\n\n  importTable () {\n    return (\n      <Table\n        loading={this.state.isImporting}\n        bordered={true}\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.getPlaylist('withResult')}\n        pagination={false}/>\n    );\n  }\n\n  render () {\n    const {playlist} = this.props;\n    if (playlist.spotifyStatus === 'done') {\n      return <Alert\n        message=\"All Songs Imported\"\n        description={<div>\n          All songs imported. <br/>\n          <a href={this.state.playlist.external_urls.spotify}>{this.state.playlist.name}</a>\n        </div>}\n        type=\"success\"\n        showIcon\n      />;\n    }\n    return <div>\n      {this.state.playlist === null &&\n      <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n        <p>\n        Choose where you want to move the songs, to a new album or an existing one?\n        </p>\n        <Button\n          type=\"link\"\n          size={'large'}\n          onClick={() => this.setState({createPlaylistModalVisible: true})}\n          style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '45px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n          Create a New Playlist\n        </Button>\n        <Dropdown trigger={['click']} overlay={this.selectPlaylistsMenu()} placement=\"bottomLeft\">\n          <Button\n            type=\"link\"\n            size={'large'}\n            onClick={this.selectPlaylist.bind(this)}\n            loading={this.state.fetchingPlaylists}\n            style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '45px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n            Import to Existing Playlist\n          </Button>\n        </Dropdown>\n      </Card>}\n      {this.state.playlist !== null && this.importTable()}\n\n      {this.createPlaylistModal()}\n    </div>;\n  }\n}\n\nVKStep4.propTypes = {\n  user    : PropTypes.object.isRequired,\n  playlist: PropTypes.object.isRequired\n};\n\nexport default Form.create()(VKStep4);","import React from 'react';\nimport { Steps } from 'antd';\n\nimport { isLoggedIn } from '../../services/AuthService';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\nimport { getCurrentUser } from '../../services/ApiService';\nimport VKStep1 from './VKStep1';\nimport VKStep2 from './VKStep2';\nimport VKStep3 from './VKStep3';\nimport VKStep4 from './VKStep4';\n\nexport default class VK extends React.Component {\n\n  state = {\n    isFetching    : false,\n    isFetchingUser: false,\n    user          : null,\n    step          : 0\n  };\n\n  constructor () {\n    super();\n    this.appleMusicPlaylist = new AppleMusicPlaylist({});\n  }\n\n  componentWillMount () {\n    if (isLoggedIn()) {\n      this.setState({\n        isFetchingUser: true\n      });\n      getCurrentUser()\n        .then((res) => {\n          this.setState({\n            isFetchingUser: false,\n            user          : res.data\n          });\n        })\n        .catch(() => {\n          alert(`Couldn't fetch your data. Please refresh the page or try logging in again!`);\n        });\n    }\n  }\n\n  step1 () {\n    return <VKStep1\n      playlist={this.appleMusicPlaylist}\n      onUpload={() => {\n        this.setState({\n          step: 1\n        });\n      }}\n    />;\n  }\n\n  step2 () {\n    return <VKStep2\n      playlist={this.appleMusicPlaylist}\n      next={() => this.setState({step: 2})}\n    />;\n  }\n\n  step3 () {\n    return <VKStep3\n      playlist={this.appleMusicPlaylist}\n      nextStep={() => this.setState({step: 3})}\n    />;\n  }\n\n  step4 () {\n    return <VKStep4\n      user={this.state.user}\n      playlist={this.appleMusicPlaylist}\n    />;\n  }\n\n  content () {\n    switch (this.state.step) {\n      default:\n      case 0:\n        return this.step1();\n      case 1:\n        return this.step2();\n      case 2:\n        return this.step3();\n      case 3:\n        return this.step4();\n    }\n  }\n\n  render () {\n    const Step = Steps.Step;\n    if (!isLoggedIn()) {\n      return <h2 style={{textAlign: 'center'}}>You need to login first.</h2>;\n    }\n    if (this.state.isFetchingUser) {\n      return <p style={{textAlign: 'center'}}>Fetching your data...</p>;\n    }\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center', color: '#374ed3' }}>VK Music</h2><br/>\n        <Steps current={this.state.step}>\n          <Step title=\"Upload Playlist\" description=\"Insert the link\"/>\n          <Step title=\"Select Playlist Songs\" description=\"Select specific songs of the playlist to transfer\"/>\n          <Step title=\"Find Playlist Songs\" description=\"Automatic search for playlist songs on Spotify\"/>\n          <Step title=\"Import Songs\" description=\"Import playlist songs to a Spotify playlist\"/>\n        </Steps>\n        <div style={{marginTop: 50}}>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { Card, notification } from 'antd';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\nimport axios from 'axios-jsonp-pro';\n\nexport default class YandexStep1 extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { disabled: false }\n  }\n\n  render () {\n    return <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n      <p>\n        Insert the playlist link in the lower field and press Enter\n      </p>\n        <Input\n        disabled={this.state.disabled}\n        onKeyDown={async (e) => {\n          if (e.key === 'Enter') {\n            this.setState({ disabled: true })\n           try {\n            var user; var playlistId; var app;\n            app = 'yandex'\n            var str = e.target.value\n            if (str.search(/playlist/i) > -1) {\n              str = str.split('playlist');\n              playlistId = Number(str[1].replace(/[^\\d]/g, ''));\n              str.splice(1, 1); str = str[0];\n              str = str.split('users');\n              user = str[1].replace(/\\//g, '');\n            } else {\n              this.setState({ disabled: false })\n              notification.error({\n                message    : 'Error',\n                description: 'Incorrect link. Please try again.'\n              });\n              return;\n            }\n            } catch {\n              this.setState({ disabled: false })\n              notification.error({\n                message    : 'Error',\n                description: 'Incorrect link. Please try again.'\n              });\n              return;\n            }\n          try {\n            await axios.post('https://server.dan0102dan.ru', {\n              data: {\n                user, playlistId, app\n              }\n            })\n            .then((response) => {\n              try {\n              this.props.playlist.setYandexPlaylist(response);\n              this.props.onUpload();\n              } catch {\n                this.setState({ disabled: false })\n                notification.error({\n                  message    : 'Error',\n                  description: response.data?.error_msg ? response.data?.error_msg : 'Server error'\n                });\n              }\n            })\n          } catch {\n            this.setState({ disabled: false })\n            notification.error({\n              message    : 'Error',\n              description: 'Your Internet connection is not stable.'\n            })\n          }\n        }\n        }} placeholder=\"https://music.yandex.ru/users/...\"/>\n    </Card>;\n  }\n}\n\nYandexStep1.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  onUpload: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport { Table } from 'antd';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nexport default class YandexStep2 extends React.Component {\n\n  state = {\n    selectedRowKeys: []\n  };\n\n  nextStep () {\n    this.props.playlist.filter(this.state.selectedRowKeys);\n    this.props.next();\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    this.setState({selectedRowKeys});\n  };\n\n  nextStepButton () {\n    const {selectedRowKeys} = this.state;\n    const hasSelected = selectedRowKeys.length > 0;\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n           <span style={{marginRight: 8}}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n      <Button\n      size=\"l\" \n      style={{ background: '#d6363f', color: '#fff', borderRadius: '500px' }}\n      onClick={this.nextStep.bind(this)}\n      disabled={!hasSelected}>\n        <div\n        display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n            </div>\n          </div>\n      </Button>\n    </div>;\n  }\n\n  render () {\n    const {selectedRowKeys} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    return (\n      <div style={{padding: '0 0'}}>\n        {this.nextStepButton()}\n        <Table\n          rowSelection={rowSelection}\n          columns={[\n            {\n              title    : 'Name',\n              dataIndex: 'name',\n            },\n            {\n              title    : 'Artist',\n              dataIndex: 'artist',\n            },\n            {\n              title    : 'Album',\n              dataIndex: 'album',\n            }\n          ]}\n          rowKey={'index'}\n          dataSource={this.props.playlist.playlist}\n          pagination={false}\n          bordered\n        />\n        {this.nextStepButton()}\n      </div>\n    );\n  }\n}\n\nYandexStep2.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  next    : PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { chunk } from 'lodash';\nimport { Card, Dropdown, Button, Menu, Form, Input, Modal, Checkbox, Table, Alert } from 'antd';\n\nimport { getPlaylists, createPlaylist, addTrackToPlaylist } from '../../services/ApiService';\n\nconst FormItem = Form.Item;\nconst {TextArea} = Input;\n\nclass YandexStep4 extends React.Component {\n\n  state = {\n    playlist                  : null,\n    userPlaylists             : null,\n    fetchingPlaylists         : false,\n    isCreatingPlaylist        : false,\n    createPlaylistModalVisible: false,\n    isImporting               : false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  selectPlaylist () {\n    if (this.state.userPlaylists !== null) {\n      return;\n    }\n    this.setState({fetchingPlaylists: true});\n    getPlaylists()\n      .then((res) => {\n        this.setState({\n          fetchingPlaylists: false,\n          userPlaylists    : res.data\n        });\n      })\n      .catch(() => {\n        alert('Couldn\\'t get playlists. Please try again.');\n      });\n  }\n\n  selectPlaylistsMenu () {\n    return <Menu onClick={(event) => {\n      this.setState({\n        playlist: event.item.props.playlist\n      }, () => {\n        this.importSong();\n      });\n    }}>\n      {this.state.userPlaylists === null ? null : this.state.userPlaylists.items.map((playlist, index) => {\n        return <Menu.Item key={index} playlist={playlist}>\n          {playlist.name}\n        </Menu.Item>;\n      })}\n    </Menu>;\n  }\n\n  createPlaylistModal () {\n    const {getFieldDecorator} = this.props.form;\n    return <Modal\n      title=\"Create Playlist\"\n      closable={false}\n      maskClosable={true}\n      visible={this.state.createPlaylistModalVisible}\n      onCancel={() => this.setState({createPlaylistModalVisible: false})}\n      footer={[\n        <Button style={{cursor: 'pointer'}} key=\"back\" onClick={() => this.setState({createPlaylistModalVisible: false})}>Cancel</Button>,\n        <Button style={{cursor: 'pointer'}} key=\"submit\" type=\"primary\" loading={this.state.isCreatingPlaylist} onClick={this.createPlaylist.bind(this)}>\n          Create\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={this.createPlaylist.bind(this)}>\n        <FormItem>\n          {getFieldDecorator('name', {\n            validateTrigger: 'onBlur',\n            rules          : [\n              {\n                required: true,\n                message : 'Please enter a name'\n              }\n            ]\n          })(\n            <Input placeholder=\"Playlist Name\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('description', {\n            initialValue: ''\n          })(\n            <TextArea autosize={true} placeholder=\"Playlist Description\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('isPublic', {\n            initialValue: true\n          })(\n            <Checkbox defaultChecked={true}>This is a public playlist!</Checkbox>\n          )}\n        </FormItem>\n      </Form>\n    </Modal>;\n  }\n\n  createPlaylist (e) {\n    if (e)\n      e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.setState({\n          isCreatingPlaylist: true\n        });\n        createPlaylist(\n          this.props.user.id,\n          values.name,\n          values.description,\n          values.isPublic\n        )\n          .then((res) => {\n            this.setState({\n              isCreatingPlaylist        : false,\n              createPlaylistModalVisible: false,\n              playlist                  : res.data\n            });\n            this.importSong();\n          })\n          .catch(() => {\n            alert(`Couldn't create the playlist. Please refresh the page.`);\n          });\n      }\n    });\n\n  }\n\n  async importSong () {\n    this.props.playlist.setSpotifyStatus('importing');\n    const songs = this.props.playlist.getPlaylist('withResult');\n    const chunks = chunk(songs, 100);\n    for (let index = 0; chunks.length > index; index++) {\n      let songsUri = [];\n      for (let songIndex = 0; chunks[index].length > songIndex; songIndex++) {\n        songsUri.push(chunks[index][songIndex].spotifySelected.uri);\n      }\n      await addTrackToPlaylist(this.props.user.id, this.state.playlist.id, songsUri);\n    }\n    this.props.playlist.setSpotifyStatus('done');\n  }\n\n  importTable () {\n    return (\n      <Table\n        loading={this.state.isImporting}\n        bordered={true}\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.getPlaylist('withResult')}\n        pagination={false}/>\n    );\n  }\n\n  render () {\n    const {playlist} = this.props;\n    if (playlist.spotifyStatus === 'done') {\n      return <Alert\n        message=\"All Songs Imported\"\n        description={<div>\n          All songs imported. <br/>\n          <a href={this.state.playlist.external_urls.spotify}>{this.state.playlist.name}</a>\n        </div>}\n        type=\"success\"\n        showIcon\n      />;\n    }\n    return <div>\n      {this.state.playlist === null &&\n      <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n        <p>\n        Choose where you want to move the songs, to a new album or an existing one?\n        </p>\n        <Button\n          type=\"link\"\n          size={'large'}\n          onClick={() => this.setState({createPlaylistModalVisible: true})}\n          style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '45px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n          Create a New Playlist\n        </Button>\n        <Dropdown trigger={['click']} overlay={this.selectPlaylistsMenu()} placement=\"bottomLeft\">\n          <Button\n            type=\"link\"\n            size={'large'}\n            onClick={this.selectPlaylist.bind(this)}\n            loading={this.state.fetchingPlaylists}\n            style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '45px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n            Import to Existing Playlist\n          </Button>\n        </Dropdown>\n      </Card>}\n      {this.state.playlist !== null && this.importTable()}\n\n      {this.createPlaylistModal()}\n    </div>;\n  }\n}\n\nYandexStep4.propTypes = {\n  user    : PropTypes.object.isRequired,\n  playlist: PropTypes.object.isRequired\n};\n\nexport default Form.create()(YandexStep4);","import React from 'react';\nimport { Steps } from 'antd';\n\nimport { isLoggedIn } from '../../services/AuthService';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\nimport { getCurrentUser } from '../../services/ApiService';\nimport YandexStep1 from './YandexStep1';\nimport YandexStep2 from './YandexStep2';\nimport YandexStep3 from './YandexStep3';\nimport YandexStep4 from './YandexStep4';\n\nexport default class Apple extends React.Component {\n\n  state = {\n    isFetching    : false,\n    isFetchingUser: false,\n    user          : null,\n    step          : 0\n  };\n\n  constructor () {\n    super();\n    this.appleMusicPlaylist = new AppleMusicPlaylist({});\n  }\n\n  componentWillMount () {\n    if (isLoggedIn()) {\n      this.setState({\n        isFetchingUser: true\n      });\n      getCurrentUser()\n        .then((res) => {\n          this.setState({\n            isFetchingUser: false,\n            user          : res.data\n          });\n        })\n        .catch(() => {\n          alert(`Couldn't fetch your data. Please refresh the page or try logging in again!`);\n        });\n    }\n  }\n\n  step1 () {\n    return <YandexStep1\n      playlist={this.appleMusicPlaylist}\n      onUpload={() => {\n        this.setState({\n          step: 1\n        });\n      }}\n    />;\n  }\n\n  step2 () {\n    return <YandexStep2\n      playlist={this.appleMusicPlaylist}\n      next={() => this.setState({step: 2})}\n    />;\n  }\n\n  step3 () {\n    return <YandexStep3\n      playlist={this.appleMusicPlaylist}\n      nextStep={() => this.setState({step: 3})}\n    />;\n  }\n\n  step4 () {\n    return <YandexStep4\n      user={this.state.user}\n      playlist={this.appleMusicPlaylist}\n    />;\n  }\n\n  content () {\n    switch (this.state.step) {\n      default:\n      case 0:\n        return this.step1();\n      case 1:\n        return this.step2();\n      case 2:\n        return this.step3();\n      case 3:\n        return this.step4();\n    }\n  }\n\n  render () {\n    const Step = Steps.Step;\n    if (!isLoggedIn()) {\n      return <h2 style={{textAlign: 'center'}}>You need to login first.</h2>;\n    }\n    if (this.state.isFetchingUser) {\n      return <p style={{textAlign: 'center'}}>Fetching your data...</p>;\n    }\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center', color: 'rgb(248, 219)' }}>Yandex</h2><br/>\n        <Steps current={this.state.step}>\n        <Step title=\"Upload Playlist\" description=\"Insert the link\"/>\n          <Step title=\"Select Playlist Songs\" description=\"Select specific songs of the playlist to transfer\"/>\n          <Step title=\"Find Playlist Songs\" description=\"Automatic search for playlist songs on Spotify\"/>\n          <Step title=\"Import Songs\" description=\"Import playlist songs to a Spotify playlist\"/>\n        </Steps>\n        <div style={{marginTop: 50}}>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { parse } from 'qs';\n\nimport { setToken } from '../services/AuthService';\n\nclass LoginCallback extends React.Component {\n\n  componentDidMount () {\n    setToken(\n      parse(this.props.location.hash.slice(1)).access_token\n    );\n    this.props.history.push('/');\n  }\n\n  render () {\n    return (\n      <span>...</span>\n    );\n  }\n}\n\nexport default withRouter(LoginCallback);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as RouteConstants from '../constants/RouteConstants';\n\nimport Home from './Home';\nimport Apple from './apple/Apple';\nimport VK from './vk/fetchdata';\nimport Yandex from './yandex/Yandex';\nimport LoginCallback from './LoginCallback';\n\nexport default class Routes extends React.Component {\n  render () {\n    return (\n      <Switch>\n        <Route exact path={RouteConstants.HOME} component={Home}/>\n        <Route path={RouteConstants.APPlE} component={Apple}/>\n        <Route path={RouteConstants.VK} component={VK}/>\n        <Route path={RouteConstants.YANDEX} component={Yandex}/>\n        <Route path={RouteConstants.LOGIN_CALLBACK} component={LoginCallback}/>\n      </Switch>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Layout } from 'antd';\n\nimport Header from './components/shared/Header';\nimport Routes from './components/Routes';\n\nimport 'antd/dist/antd.css';\nimport 'sanitize.css';\nimport './styles.css';\n\nclass App extends Component {\n  render () {\n    return (\n      <Layout>\n        <Header/>\n        <div id='content'>\n          <div className='container'>\n            <Routes/>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router basename={'/2spotify'}>\n    <App/>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}