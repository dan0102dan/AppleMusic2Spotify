{"version":3,"sources":["components/shared/Header.js","constants/RouteConstants.js","constants/Constants.js","services/AuthService.js","components/Home.js","services/AppleMusicPlaylist.js","services/ApiService.js","components/transfer-playlist/TransferPlaylistStep1.js","components/transfer-playlist/TransferPlaylistStep2.js","services/UtilsService.js","components/transfer-playlist/TransferPlaylistStep3.js","components/transfer-playlist/TransferPlaylistStep4.js","components/transfer-playlist/TransferPlaylist.js","components/LoginCallback.js","components/Routes.js","App.js","index.js"],"names":["Header","id","onClick","this","handleClick","selectedKeys","props","location","pathname","mode","Item","key","Link","to","React","Component","withRouter","API_URL","getLoginUrl","scopes","queryArgs","push","encodeURIComponent","window","protocol","host","join","isLoggedIn","localStorage","getItem","getToken","Home","removeItem","forceUpdate","className","size","style","background","color","display","margin","width","height","borderRadius","alignItems","justifyContent","cursor","logout","bind","href","textAlign","role","aria-label","loginMessage","axiosCancel","axios","AppleMusicPlaylist","settings","_playlist","changeCallbacks","spotifyStatus","searchFormat","playlist","parsed","Papa","parse","header","errors","length","data","Error","pop","index","track","keys","Object","includes","name","Name","artist","Artist","album","Album","composer","Composer","discCount","discNumber","genre","Genre","trackCount","trackNumber","year","Year","spotifyResults","spotifySelected","indexes","newPlaylist","i","status","output","trackIndex","selectedIndex","findIndex","triggerChange","cb","searchTimeout","setTimeout","_search","placeholders","keyword","replace","slice","value","get","requestId","headers","Authorization","params","type","q","searchKeyword","limit","then","res","tracks","total","items","catch","error","isCancel","finally","clearTimeout","cancel","instance","originalAxios","create","TransferPlaylistStep1","file","reader","FileReader","readAsText","onload","evt","text","target","result","setPlaylist","onUpload","notification","message","description","onerror","marginRight","marginLeft","maxWidth","beforeUpload","fileList","before","TransferPlaylistStep2","state","selectedRowKeys","onSelectChange","setState","filter","next","hasSelected","nextStep","disabled","rowSelection","onChange","padding","nextStepButton","columns","title","dataIndex","rowKey","dataSource","pagination","bordered","formatSeconds","seconds","date","Date","setSeconds","toISOString","substr","FormItem","Form","TransferPlaylistStep3","settingsItem","settingsVisible","placement","nextStepDisabled","trigger","content","marginTop","pause","resume","onConfirm","okText","cancelText","pauseSearch","startSearch","row","trackLabel","getFieldDecorator","form","onSubmit","settingsFormSave","label","help","initialValue","rules","required","placeholder","marginBottom","htmlType","e","preventDefault","validateFields","values","each","option","selectedTrack","spotifyTrack","link","external_urls","spotify","image","images","url","duration","duration_ms","track_number","artistName","artists","artistLink","albumName","albumLink","visible","footer","onCancel","itemLayout","renderItem","item","switchAction","checked","setSpotifySelected","actions","Meta","avatar","src","rel","buttons","render","statusColumn","songSettingsModal","TextArea","Input","TransferPlaylistStep4","userPlaylists","fetchingPlaylists","isCreatingPlaylist","createPlaylistModalVisible","isImporting","alert","event","importSong","map","closable","maskClosable","loading","createPlaylist","validateTrigger","autosize","defaultChecked","err","userId","isPublic","post","user","setSpotifyStatus","songs","getPlaylist","chunks","chunk","songsUri","songIndex","uri","playlistId","uris","showIcon","overlay","selectPlaylistsMenu","selectPlaylist","importTable","createPlaylistModal","TransferPlaylist","isFetching","isFetchingUser","step","appleMusicPlaylist","step1","step2","step3","step4","Step","Steps","current","LoginCallback","token","hash","access_token","setItem","history","Routes","Switch","Route","exact","path","component","App","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.46d671fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'antd';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport * as RouteConstants from '../../constants/RouteConstants';\n\nclass Header extends React.Component {\n  render () {\n    return (\n      <Menu id='menu' onClick={this.handleClick} selectedKeys={[this.props.location.pathname]} mode=\"horizontal\">\n        <Menu.Item key={RouteConstants.HOME}>\n          <Link to={RouteConstants.HOME}>Home</Link>\n        </Menu.Item>\n        <Menu.Item key={RouteConstants.TRANSFER_PLAYLIST}>\n          <Link to={RouteConstants.TRANSFER_PLAYLIST}>Transfer Playlist</Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(Header);","export const HOME = '/';\nexport const TRANSFER_PLAYLIST = '/transfer-playlist';\nexport const LOGIN_CALLBACK = '/login-callback';","export const API_URL = 'https://api.spotify.com';\nexport const SPOTIFY_CLIENT_ID = 'b1a70e47e2fa4e01bc095a4098cbcb0a';","import { SPOTIFY_CLIENT_ID } from '../constants/Constants';\n\nexport const getLoginUrl = (scopes = [\n  'playlist-read-private',\n  'playlist-read-collaborative',\n  'playlist-modify-public',\n  'playlist-modify-private',\n  'user-library-read',\n  'user-library-modify',\n  'user-top-read'\n]) => {\n  let queryArgs = [];\n  queryArgs.push(`client_id=${SPOTIFY_CLIENT_ID}`);\n  queryArgs.push(`response_type=token`);\n  queryArgs.push(`redirect_uri=${encodeURIComponent(`${window.location.protocol}//${window.location.host}/applemusic2spotify/login-callback`)}`);\n  queryArgs.push(`scope=${scopes.join(' ')}`);\n  return `https://accounts.spotify.com/authorize/?${queryArgs.join('&')}`;\n};\n\nexport const isLoggedIn = () => localStorage.getItem('__token') !== null;\n\nexport const getToken = () => localStorage.getItem('__token');\n\nexport const logout = () => localStorage.removeItem('__token');\n\nexport const setToken = (token) => {\n  localStorage.setItem('__token', token);\n};","import React from 'react';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { isLoggedIn, getLoginUrl, logout } from '../services/AuthService';\n\nexport default class Home extends React.Component {\n\n  logout () {\n    logout();\n    this.forceUpdate();\n  }\n\n  loginMessage () {\n    return <div className='button'>\n      {isLoggedIn()\n        ? <Button size=\"l\" style={{ background: '#1DB954', color: '#fff', display: 'flex', margin: '0 auto', width: '202px', height: '53px', borderRadius: '500px', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }} onClick={this.logout.bind(this)}>Logout</Button>\n        : <Button size=\"l\" style={{ background: '#1DB954', color: '#fff', display: 'flex', margin: '0 auto', width: '202px', height: '53px', borderRadius: '500px', alignItems: 'center', justifyContent: 'center', cursor: 'pointer' }} href={getLoginUrl()}>Login</Button>}\n    </div>;\n  }\n\n  render () {\n    return (\n      <div>\n        <h1 style={{textAlign: 'center'}}>Apple Music to Spotify <span role=\"img\" aria-label=\"music\">🎸</span></h1>\n        <h2 style={{textAlign: 'center'}}>\n          This tool helps you to transfer your playlists from apple music to Spotify.\n        </h2>\n        {this.loginMessage()}\n      </div>\n    );\n  }\n}","import Papa from 'papaparse';\nimport axios from 'axios';\nimport axiosCancel from 'axios-cancel';\nimport { findIndex } from 'lodash';\n\nimport { API_URL } from '../constants/Constants';\nimport { getToken } from './AuthService';\n\naxiosCancel(axios);\n\nexport default class AppleMusicPlaylist {\n\n  constructor (settings) {\n    this._playlist = [];\n    this.changeCallbacks = [];\n    this.spotifyStatus = null;\n    this.settings = {\n      searchFormat: '{name} {artist}',\n      ...settings\n    };\n  }\n\n  setPlaylist (playlist) {\n    let parsed = Papa.parse(playlist, {\n      header: true\n    });\n    if (parsed.errors.length && !parsed.data.length) {\n      throw new Error('Couldn\\'t parse the playlist.');\n    }\n    parsed.data.pop();\n    for (let index = 0; parsed.data.length > index; index++) {\n      const\n        track = parsed.data[index],\n        keys = Object.keys(track);\n      if (!keys.includes('Name') || !keys.includes('Artist') || !keys.includes('Album')) {\n        throw new Error('Playlist is not a valid apple music playlist.');\n      }\n      this._playlist.push({\n        index,\n        name           : track.Name,\n        artist         : track.Artist,\n        album          : track.Album,\n        composer       : track.Composer,\n        discCount      : track['Disc Count'],\n        discNumber     : track['Disc Number'],\n        genre          : track.Genre,\n        trackCount     : track['Track Count'],\n        trackNumber    : track['Track Number'],\n        year           : track.Year,\n        spotifyStatus  : 'pending',\n        spotifyResults : null,\n        spotifySelected: null\n      });\n    }\n  }\n\n  filter (indexes) {\n    const newPlaylist = [];\n    for (let i = 0; indexes.length > i; i++) {\n      newPlaylist.push(this._playlist[indexes[i]]);\n    }\n    this._playlist = newPlaylist;\n  }\n\n  get playlist () {\n    return this._playlist;\n  }\n\n  getPlaylist (status) {\n    const output = [];\n    for (let index = 0; this._playlist.length > index; index++) {\n      if (this._playlist[index].spotifyStatus === status) {\n        output.push(this._playlist[index]);\n      }\n    }\n    return output;\n  }\n\n  setSpotifySelected (trackIndex, id) {\n    const track = this._playlist[trackIndex];\n    let selectedIndex = findIndex(track.spotifyResults, {id});\n    track.spotifySelected = track.spotifyResults[selectedIndex];\n    this.triggerChange();\n    return this;\n  }\n\n  setSpotifyStatus (status) {\n    this.spotifyStatus = status;\n    this.triggerChange();\n\n    return this;\n  }\n\n  onChange (cb) {\n    this.changeCallbacks.push(cb);\n  }\n\n  triggerChange () {\n    for (let index = 0; this.changeCallbacks.length > index; index++) {\n      this.changeCallbacks[index]();\n    }\n  }\n\n  startSearch () {\n    this.searchTimeout = setTimeout(this._search.bind(this), 1);\n  }\n\n  searchKeyword (track) {\n    const placeholders = ['{name}', '{artist}', '{album}', '{composer}', '{discCount}', '{discNumber}', '{genre}', '{trackCount}', '{trackNumber}', '{year}'];\n    let keyword = this.settings.searchFormat;\n    for (let index = 0; placeholders.length > index; index++) {\n      keyword = keyword.replace(placeholders[index], track[placeholders[index].slice(1, -1)]);\n    }\n    return keyword;\n  }\n\n  option (key, value) {\n    this.settings[key] = value;\n\n    return this;\n  }\n\n  _search () {\n    let track;\n    for (let index = 0; this._playlist.length > index; index++) {\n      if (this._playlist[index].spotifyStatus === 'pending') {\n        track = this._playlist[index];\n        break;\n      }\n    }\n    if (!track) {\n      this.spotifyStatus = 'searchComplete';\n      this.triggerChange();\n      return;\n    }\n    this.spotifyStatus = 'searching';\n    track.spotifyStatus = 'searching';\n    this.triggerChange();\n    axios.get(\n      `${API_URL}/v1/search`,\n      {\n        requestId: 'search',\n        headers  : {\n          Authorization: `Bearer ${getToken()}`\n        },\n        params   : {\n          type : 'track',\n          q    : this.searchKeyword(track),\n          limit: 10\n        }\n      }\n    )\n      .then((res) => {\n        track.spotifyStatus = res.data.tracks.total === 0 ? 'noResult' : 'withResult';\n        track.spotifyResults = res.data.tracks.items;\n        if (res.data.tracks.total)\n          track.spotifySelected = res.data.tracks.items[0];\n        this.searchTimeout = setTimeout(this._search.bind(this), 10);\n      })\n      .catch((error) => {\n        track.spotifyStatus = axios.isCancel(error) ? 'pending' : 'failed';\n      })\n      .finally(() => {\n        this.triggerChange();\n      });\n\n  }\n\n  pauseSearch () {\n    this.spotifyStatus = 'paused';\n    clearTimeout(this.searchTimeout);\n    this.triggerChange();\n    axios.cancel('search');\n  }\n\n}","import originalAxios from 'axios';\n\nimport { API_URL } from '../constants/Constants';\nimport { getToken } from './AuthService';\n\nexport const axios = () => {\n  if (typeof axios.instance === 'undefined') {\n    axios.instance = originalAxios.create({\n      headers: {\n        Authorization: `Bearer ${getToken()}`\n      }\n    });\n  }\n  return axios.instance;\n};\n\nexport const getCurrentUser = () => {\n  return axios().get(\n    `${API_URL}/v1/me`\n  );\n};\n\nexport const search = (search) => {\n  return axios().get(\n    `${API_URL}/v1/search`,\n    {\n      params: search\n    }\n  );\n};\n\nexport const getPlaylists = () => {\n  return axios().get(\n    `${API_URL}/v1/me/playlists`\n  );\n};\n\nexport const createPlaylist = (userId, name, description = '', isPublic = false) => {\n  return axios().post(\n    `${API_URL}/v1/users/${userId}/playlists`,\n    {\n      name,\n      description,\n      'public': isPublic\n    }\n  );\n};\nexport const addTrackToPlaylist = (userId, playlistId, uris) => {\n  return axios().post(\n    `${API_URL}/v1/users/${userId}/playlists/${playlistId}/tracks`,\n    {uris}\n  );\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28DownloadOutline from '@vkontakte/icons/dist/28/download_outline';\nimport { Upload, Card, notification } from 'antd';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nexport default class TransferPlaylistStep1 extends React.Component {\n\n  beforeUpload (file) {\n    let reader = new FileReader();\n    reader.readAsText(file, 'UTF-8');\n    reader.onload = (evt) => {\n      const text = evt.target.result;\n      try {\n        this.props.playlist.setPlaylist(text);\n        this.props.onUpload();\n      }\n      catch (error) {\n        notification.error({\n          message    : 'Error',\n          description: error.message\n        });\n      }\n    };\n    reader.onerror = function (evt) {\n      notification.error({\n        message    : 'Error',\n        description: 'Couldn\\'t read file content. please try again.'\n      });\n    };\n    return false;\n  }\n\n  render () {\n    return <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n      <p>\n        Select your playlist in iTunes and from \"File\" menu click on \"Library\" then \"Export Playlist\". <br/>\n        Then from \"Format\" menu select \"Unicode Text\" and save the file. (must be a <code>.txt</code> file) <br/>\n        Upload this file from the following field:\n      </p>\n      <Upload beforeUpload={this.beforeUpload.bind(this)} fileList={[]}>\n        <Button before={<Icon28DownloadOutline/>} style={{color: '#1DB954', background: '#e2f1e5', cursor: 'pointer'}}>\n          Select File\n        </Button>\n      </Upload>\n    </Card>;\n  }\n}\n\nTransferPlaylistStep1.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  onUpload: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport { Table } from 'antd';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nexport default class TransferPlaylistStep2 extends React.Component {\n\n  state = {\n    selectedRowKeys: []\n  };\n\n  nextStep () {\n    this.props.playlist.filter(this.state.selectedRowKeys);\n    this.props.next();\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    this.setState({selectedRowKeys});\n  };\n\n  nextStepButton () {\n    const {selectedRowKeys} = this.state;\n    const hasSelected = selectedRowKeys.length > 0;\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n           <span style={{marginRight: 8}}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n      <Button\n      size=\"l\" \n      style={{ background: '#1DB954', color: '#fff', borderRadius: '500px' }}\n      onClick={this.nextStep.bind(this)}\n      disabled={!hasSelected}>\n        <div\n        display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n            </div>\n          </div>\n      </Button>\n    </div>;\n  }\n\n  render () {\n    const {selectedRowKeys} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    return (\n      <div style={{padding: '0 0'}}>\n        {this.nextStepButton()}\n        <Table\n          rowSelection={rowSelection}\n          columns={[\n            {\n              title    : 'Name',\n              dataIndex: 'name',\n            },\n            {\n              title    : 'Artist',\n              dataIndex: 'artist',\n            },\n            {\n              title    : 'Album',\n              dataIndex: 'album',\n            }\n          ]}\n          rowKey={'index'}\n          dataSource={this.props.playlist.playlist}\n          pagination={false}\n          bordered\n        />\n        {this.nextStepButton()}\n      </div>\n    );\n  }\n}\n\nTransferPlaylistStep2.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  next    : PropTypes.func.isRequired\n};","export const formatSeconds = (seconds) => {\n  const date = new Date(null);\n  date.setSeconds(seconds);\n  return date\n    .toISOString()\n    .substr(11, 8);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/56/settings_outline';\nimport Icon28ArrowRightOutline from '@vkontakte/icons/dist/28/arrow_right_outline';\nimport Icon28SmileOutline from '@vkontakte/icons/dist/44/smile_outline';\nimport Icon28Pause from '@vkontakte/icons/dist/48/pause';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {\n  Table,\n  Button,\n  Tag,\n  Modal,\n  List,\n  Avatar,\n  Switch,\n  Popconfirm,\n  Popover,\n  Form,\n  Input\n} from 'antd';\nimport { each } from 'lodash';\nimport { formatSeconds } from '../../services/UtilsService';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nconst FormItem = Form.Item;\n\nclass TransferPlaylistStep3 extends React.Component {\n\n  state = {\n    settingsItem   : null,\n    settingsVisible: false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  buttons (placement) {\n    let nextStepDisabled = true;\n    const {playlist} = this.props;\n    const {spotifyStatus} = playlist;\n    for (let index = 0; playlist.playlist.length > index; index++) {\n      if (playlist.playlist[index].spotifyStatus === 'withResult') {\n        nextStepDisabled = false;\n      }\n    }\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n      <Popover\n        trigger=\"click\"\n        placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n        content={this.settings()}\n      >\n        <Button\n          size={'large'}\n          style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        >\n          <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Search Settings<Icon24SettingsOutline width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n        </Button>\n      </Popover>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3 }}\n        disabled={spotifyStatus !== 'searching'}\n        onClick={this.pause.bind(this)}\n      >\n        <div display='flex'>\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          Pause<Icon28Pause width={20} height={20} style={{marginLeft: 4}}/>\n            </div>\n        </div>\n      </Button>\n      <Button\n        size={'large'}\n        style={{marginRight: 7, borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n        disabled={spotifyStatus !== 'paused' && spotifyStatus !== null}\n        onClick={this.resume.bind(this)}\n      >\n        Start/Resume\n      </Button>\n\n      {\n        playlist.spotifyStatus !== 'searchComplete' &&\n        <Popconfirm\n          title=\"The search is not complete. Are you sure you want to go to the next step?\"\n          onConfirm={this.nextStep.bind(this)}\n          okText=\"Yes\"\n          placement={placement === 'top' ? 'bottomRight' : 'topRight'}\n          cancelText=\"No\">\n          <Button\n            type=\"primary\"\n            size={'large'}\n            disabled={nextStepDisabled}\n            style={{borderRadius: '500px', cursor: 'pointer', marginTop: 3}}\n          >\n            <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n          </Button>\n        </Popconfirm>\n      }\n      {\n        playlist.spotifyStatus === 'searchComplete' &&\n        <Button\n          type=\"link\"\n          size={'large'}\n          style={{ background: '#1DB954', color: '#fff', borderRadius: '500px', marginTop: 3 }}\n          onClick={this.nextStep.bind(this)}\n          disabled={nextStepDisabled}\n        >\n          <div display='flex'>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            Next Step<Icon28ArrowRightOutline style={{marginLeft: 4}}/>\n              </div>\n            </div>\n        </Button>\n      }\n\n    </div>;\n  }\n\n  nextStep () {\n    this.props.nextStep();\n  }\n\n  pause () {\n    this.props.playlist.pauseSearch();\n  }\n\n  resume () {\n    this.props.playlist.startSearch();\n  }\n\n  trackLabel (track) {\n    const status = track.spotifyStatus;\n    switch (status) {\n      default:\n      case 'pending':\n        return <Tag color=\"#7f8c8d\" style={{borderRadius: '500px'}}>Pending</Tag>;\n      case 'failed':\n        return <Tag color=\"#e74c3c\" style={{borderRadius: '500px'}}>Failed</Tag>;\n      case 'searching':\n        return <Tag color=\"#8e44ad\" style={{borderRadius: '500px'}}>Searching</Tag>;\n      case 'noResult':\n        return <Tag color=\"#f1c40f\" style={{borderRadius: '500px'}}>No Result</Tag>;\n      case 'withResult':\n        return <Tag color=\"#27ae60\" style={{borderRadius: '500px'}}>Found</Tag>;\n    }\n  }\n\n  statusColumn (text, row) {\n    const status = row.spotifyStatus;\n    return <div style={{display: 'flex', alignItems: 'center'}}>\n      {this.trackLabel(row)}\n      {\n        status === 'withResult' &&\n        <Button\n          style={{borderRadius: '500px'}}\n          size={'small'}\n          onClick={() => {\n            this.setState({settingsItem: row.index, settingsVisible: true});\n          }}><Icon24SettingsOutline width={20} height={20}/></Button>}\n    </div>;\n  }\n\n  settings () {\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form\n        style={{width: 300}}\n        onSubmit={this.settingsFormSave.bind(this)}\n      >\n        <FormItem\n          label='Search Format'\n          help=\"Placeholders: {name}, {artist}, {album}, {composer}, {discCount}, {discNumber}, {genre}, {trackCount}, {trackNumber} and {year}\"\n        >\n          {getFieldDecorator('searchFormat',\n            {\n              initialValue: this.props.playlist.settings.searchFormat,\n              rules       : [{required: true, message: 'Please fill the field.'}],\n            })(\n            <Input placeholder=\"Search Format\"/>\n          )}\n        </FormItem>\n        <FormItem style={{marginBottom: 0}}>\n          <Button\n            type=\"primary\"\n            style={{width: '100%'}}\n            htmlType=\"submit\"\n          ><div display='flex'>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', cursor: 'pointer'}}>\n            Done<Icon28SmileOutline width={20} height={20}  style={{marginLeft: 4}}/>\n          </div>\n        </div>\n          </Button>\n        </FormItem>\n      </Form>\n    );\n  }\n\n  settingsFormSave (e) {\n    e.preventDefault();\n    const {props} = this;\n    props.form.validateFields((errors, values) => {\n      if (!errors) {\n        each(values, (value, key) => {\n          props.playlist.option(key, value);\n        });\n      }\n    });\n  }\n\n  songSettingsModal () {\n    const {playlist} = this.props;\n    const {settingsItem} = this.state;\n    let track, data = [], selectedTrack;\n    if (this.state.settingsItem !== null) {\n      track = playlist.playlist[settingsItem];\n      selectedTrack = playlist.playlist[settingsItem].spotifySelected;\n      for (let index = 0; track.spotifyResults.length > index; index++) {\n        let spotifyTrack = track.spotifyResults[index];\n        data.push({\n          index,\n          id         : spotifyTrack.id,\n          name       : spotifyTrack.name,\n          link       : spotifyTrack.external_urls.spotify,\n          image      : spotifyTrack.album.images[1].url,\n          duration   : spotifyTrack.duration_ms / 1000,\n          trackNumber: spotifyTrack.track_number,\n          artistName : spotifyTrack.artists[0].name,\n          artistLink : spotifyTrack.artists[0].external_urls.spotify,\n          albumName  : spotifyTrack.album.name,\n          albumLink  : spotifyTrack.album.external_urls.spotify,\n          track      : spotifyTrack\n        });\n      }\n    }\n    return <Modal\n      title=\"Song Settings\"\n      visible={this.state.settingsVisible}\n      footer={null}\n      onCancel={() => {\n        this.setState({settingsVisible: false});\n        setTimeout(() => this.setState({settingsItem: null}), 200);\n      }}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={item => {\n          const switchAction = <Switch\n            checked={selectedTrack.id === item.id}\n            onChange={() => {\n              playlist.setSpotifySelected(settingsItem, item.id);\n            }}/>;\n          return <List.Item actions={[switchAction]}>\n            <List.Item.Meta\n              avatar={<Avatar src={item.image} size=\"large\"/>}\n              description={<p>Album: <a href={item.albumLink}>{item.albumName}</a> - {formatSeconds(item.duration)}</p>}\n              title={<a rel=\"noopener noreferrer\" href={item.link} target=\"_blank\">{item.artistName} - {item.name}</a>}\n            />\n          </List.Item>;\n        }}\n      />\n    </Modal>;\n  }\n\n  render () {\n    return <div>\n      {this.buttons('top')}\n      <Table\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Status',\n            dataIndex: 'status',\n            width    : '13%',\n            render   : this.statusColumn.bind(this)\n          },\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.playlist}\n        pagination={false}\n        bordered\n      />\n      {this.buttons('bottom')}\n      {this.songSettingsModal()}\n    </div>;\n  }\n}\n\nTransferPlaylistStep3.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  nextStep: PropTypes.func.isRequired\n};\n\nexport default Form.create()(TransferPlaylistStep3);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { chunk } from 'lodash';\nimport { Card, Dropdown, Button, Menu, Form, Input, Modal, Checkbox, Table, Alert } from 'antd';\n\nimport { getPlaylists, createPlaylist, addTrackToPlaylist } from '../../services/ApiService';\n\nconst FormItem = Form.Item;\nconst {TextArea} = Input;\n\nclass TransferPlaylistStep4 extends React.Component {\n\n  state = {\n    playlist                  : null,\n    userPlaylists             : null,\n    fetchingPlaylists         : false,\n    isCreatingPlaylist        : false,\n    createPlaylistModalVisible: false,\n    isImporting               : false\n  };\n\n  componentDidMount () {\n    this.props.playlist.onChange(() => {\n      this.forceUpdate();\n    });\n  }\n\n  selectPlaylist () {\n    if (this.state.userPlaylists !== null) {\n      return;\n    }\n    this.setState({fetchingPlaylists: true});\n    getPlaylists()\n      .then((res) => {\n        this.setState({\n          fetchingPlaylists: false,\n          userPlaylists    : res.data\n        });\n      })\n      .catch(() => {\n        alert('Couldn\\'t get playlists. Please try again.');\n      });\n  }\n\n  selectPlaylistsMenu () {\n    return <Menu onClick={(event) => {\n      this.setState({\n        playlist: event.item.props.playlist\n      }, () => {\n        this.importSong();\n      });\n    }}>\n      {this.state.userPlaylists === null ? null : this.state.userPlaylists.items.map((playlist, index) => {\n        return <Menu.Item key={index} playlist={playlist}>\n          {playlist.name}\n        </Menu.Item>;\n      })}\n    </Menu>;\n  }\n\n  createPlaylistModal () {\n    const {getFieldDecorator} = this.props.form;\n    return <Modal\n      title=\"Create Playlist\"\n      closable={false}\n      maskClosable={true}\n      visible={this.state.createPlaylistModalVisible}\n      onCancel={() => this.setState({createPlaylistModalVisible: false})}\n      footer={[\n        <Button style={{cursor: 'pointer'}} key=\"back\" onClick={() => this.setState({createPlaylistModalVisible: false})}>Cancel</Button>,\n        <Button style={{cursor: 'pointer'}} key=\"submit\" type=\"primary\" loading={this.state.isCreatingPlaylist} onClick={this.createPlaylist.bind(this)}>\n          Create\n        </Button>,\n      ]}\n    >\n      <Form onSubmit={this.createPlaylist.bind(this)}>\n        <FormItem>\n          {getFieldDecorator('name', {\n            validateTrigger: 'onBlur',\n            rules          : [\n              {\n                required: true,\n                message : 'Please enter a name'\n              }\n            ]\n          })(\n            <Input placeholder=\"Playlist Name\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('description', {\n            initialValue: ''\n          })(\n            <TextArea autosize={true} placeholder=\"Playlist Description\"/>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('isPublic', {\n            initialValue: true\n          })(\n            <Checkbox defaultChecked={true}>This is a public playlist!</Checkbox>\n          )}\n        </FormItem>\n      </Form>\n    </Modal>;\n  }\n\n  createPlaylist (e) {\n    if (e)\n      e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.setState({\n          isCreatingPlaylist: true\n        });\n        createPlaylist(\n          this.props.user.id,\n          values.name,\n          values.description,\n          values.isPublic\n        )\n          .then((res) => {\n            this.setState({\n              isCreatingPlaylist        : false,\n              createPlaylistModalVisible: false,\n              playlist                  : res.data\n            });\n            this.importSong();\n          })\n          .catch(() => {\n            alert(`Couldn't create the playlist. Please refresh the page.`);\n          });\n      }\n    });\n\n  }\n\n  async importSong () {\n    this.props.playlist.setSpotifyStatus('importing');\n    const songs = this.props.playlist.getPlaylist('withResult');\n    const chunks = chunk(songs, 100);\n    for (let index = 0; chunks.length > index; index++) {\n      let songsUri = [];\n      for (let songIndex = 0; chunks[index].length > songIndex; songIndex++) {\n        songsUri.push(chunks[index][songIndex].spotifySelected.uri);\n      }\n      await addTrackToPlaylist(this.props.user.id, this.state.playlist.id, songsUri);\n    }\n    this.props.playlist.setSpotifyStatus('done');\n  }\n\n  importTable () {\n    return (\n      <Table\n        loading={this.state.isImporting}\n        bordered={true}\n        rowKey=\"index\"\n        columns={[\n          {\n            title    : 'Name',\n            dataIndex: 'name',\n          },\n          {\n            title    : 'Artist',\n            dataIndex: 'artist',\n          },\n          {\n            title    : 'Album',\n            dataIndex: 'album',\n          }\n        ]}\n        dataSource={this.props.playlist.getPlaylist('withResult')}\n        pagination={false}/>\n    );\n  }\n\n  render () {\n    const {playlist} = this.props;\n    if (playlist.spotifyStatus === 'done') {\n      return <Alert\n        message=\"All Songs Imported\"\n        description={<div>\n          All songs imported. <br/>\n          <a href={this.state.playlist.external_urls.spotify}>{this.state.playlist.name}</a>\n        </div>}\n        type=\"success\"\n        showIcon\n      />;\n    }\n    return <div>\n      {this.state.playlist === null &&\n      <Card style={{marginRight: 'auto', marginLeft: 'auto', maxWidth: '650px', textAlign: 'center'}}>\n        <Button\n          type=\"link\"\n          size={'large'}\n          onClick={() => this.setState({createPlaylistModalVisible: true})}\n          style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '50px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n          Create a New Playlist\n        </Button>\n        <Dropdown trigger={['click']} overlay={this.selectPlaylistsMenu()} placement=\"bottomLeft\">\n          <Button\n            type=\"link\"\n            size={'large'}\n            onClick={this.selectPlaylist.bind(this)}\n            loading={this.state.fetchingPlaylists}\n            style={{marginLeft: 5, marginTop: 13, borderRadius: '500px', maxWidth: '600px', height: '50px', background: '#1DB954', color: '#fff', cursor: 'pointer'}}>\n            Import to Existing Playlist\n          </Button>\n        </Dropdown>\n      </Card>}\n      {this.state.playlist !== null && this.importTable()}\n\n      {this.createPlaylistModal()}\n    </div>;\n  }\n}\n\nTransferPlaylistStep4.propTypes = {\n  user    : PropTypes.object.isRequired,\n  playlist: PropTypes.object.isRequired\n};\n\nexport default Form.create()(TransferPlaylistStep4);","import React from 'react';\nimport { Steps } from 'antd';\n\nimport { isLoggedIn } from '../../services/AuthService';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\nimport { getCurrentUser } from '../../services/ApiService';\nimport TransferPlaylistStep1 from './TransferPlaylistStep1';\nimport TransferPlaylistStep2 from './TransferPlaylistStep2';\nimport TransferPlaylistStep3 from './TransferPlaylistStep3';\nimport TransferPlaylistStep4 from './TransferPlaylistStep4';\n\nexport default class TransferPlaylist extends React.Component {\n\n  state = {\n    isFetching    : false,\n    isFetchingUser: false,\n    user          : null,\n    step          : 0\n  };\n\n  constructor () {\n    super();\n    this.appleMusicPlaylist = new AppleMusicPlaylist({});\n  }\n\n  componentWillMount () {\n    if (isLoggedIn()) {\n      this.setState({\n        isFetchingUser: true\n      });\n      getCurrentUser()\n        .then((res) => {\n          this.setState({\n            isFetchingUser: false,\n            user          : res.data\n          });\n        })\n        .catch(() => {\n          alert(`Couldn't fetch your data. Please refresh the page or try logging in again!`);\n        });\n    }\n  }\n\n  step1 () {\n    return <TransferPlaylistStep1\n      playlist={this.appleMusicPlaylist}\n      onUpload={() => {\n        this.setState({\n          step: 1\n        });\n      }}\n    />;\n  }\n\n  step2 () {\n    return <TransferPlaylistStep2\n      playlist={this.appleMusicPlaylist}\n      next={() => this.setState({step: 2})}\n    />;\n  }\n\n  step3 () {\n    return <TransferPlaylistStep3\n      playlist={this.appleMusicPlaylist}\n      nextStep={() => this.setState({step: 3})}\n    />;\n  }\n\n  step4 () {\n    return <TransferPlaylistStep4\n      user={this.state.user}\n      playlist={this.appleMusicPlaylist}\n    />;\n  }\n\n  content () {\n    switch (this.state.step) {\n      default:\n      case 0:\n        return this.step1();\n      case 1:\n        return this.step2();\n      case 2:\n        return this.step3();\n      case 3:\n        return this.step4();\n    }\n  }\n\n  render () {\n    const Step = Steps.Step;\n    if (!isLoggedIn()) {\n      return <h2 style={{textAlign: 'center'}}>You need to login first.</h2>;\n    }\n    if (this.state.isFetchingUser) {\n      return <p style={{textAlign: 'center'}}>Fetching your data...</p>;\n    }\n    return (\n      <div>\n        <h2 style={{textAlign: 'center'}}>Transfer Playlist</h2><br/>\n        <Steps current={this.state.step}>\n          <Step title=\"Upload Playlist\" description=\"Upload playlist file\"/>\n          <Step title=\"Select Playlist Songs\" description=\"Select specific songs of the playlist to transfer\"/>\n          <Step title=\"Find Playlist Songs\" description=\"Search for playlist songs on Spotify\"/>\n          <Step title=\"Import Songs\" description=\"Import playlist songs to a Spotify playlist\"/>\n        </Steps>\n        <div style={{marginTop: 50}}>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { parse } from 'qs';\n\nimport { setToken } from '../services/AuthService';\n\nclass LoginCallback extends React.Component {\n\n  componentDidMount () {\n    setToken(\n      parse(this.props.location.hash.slice(1)).access_token\n    );\n    this.props.history.push('/');\n  }\n\n  render () {\n    return (\n      <span>...</span>\n    );\n  }\n}\n\nexport default withRouter(LoginCallback);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport * as RouteConstants from '../constants/RouteConstants';\n\nimport Home from './Home';\nimport TransferPlaylist from './transfer-playlist/TransferPlaylist';\nimport LoginCallback from './LoginCallback';\n\nexport default class Routes extends React.Component {\n  render () {\n    return (\n      <Switch>\n        <Route exact path={RouteConstants.HOME} component={Home}/>\n        <Route path={RouteConstants.TRANSFER_PLAYLIST} component={TransferPlaylist}/>\n        <Route path={RouteConstants.LOGIN_CALLBACK} component={LoginCallback}/>\n      </Switch>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Layout } from 'antd';\n\nimport Header from './components/shared/Header';\nimport Routes from './components/Routes';\n\nimport 'antd/dist/antd.css';\nimport 'sanitize.css';\nimport './styles.css';\n\nclass App extends Component {\n  render () {\n    return (\n      <Layout>\n        <Header/>\n        <div id='content'>\n          <div className='container'>\n            <Routes/>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router basename={'/applemusic2spotify'}>\n    <App/>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}