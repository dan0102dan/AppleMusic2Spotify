{"ast":null,"code":"var _jsxFileName = \"/Users/daniildavydov/Downloads/applemusic2spotify/src/components/transfer-playlist/TransferPlaylistStep2.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Icon, Button } from 'antd';\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\nexport default class TransferPlaylistStep2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedRowKeys: []\n    };\n\n    this.onSelectChange = selectedRowKeys => {\n      this.setState({\n        selectedRowKeys\n      });\n    };\n  }\n\n  nextStep() {\n    this.props.playlist.filter(this.state.selectedRowKeys);\n    this.props.next();\n  }\n\n  nextStepButton() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const hasSelected = selectedRowKeys.length > 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '16px 0',\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, hasSelected ? `Selected ${selectedRowKeys.length} items` : ''), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: 'large',\n      onClick: this.nextStep.bind(this),\n      disabled: !hasSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, \"Next Step\", /*#__PURE__*/React.createElement(Icon, {\n      type: \"arrow-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }\n    })));\n  }\n\n  render() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, this.nextStepButton(), /*#__PURE__*/React.createElement(Table, {\n      rowSelection: rowSelection,\n      columns: [{\n        title: 'Name',\n        dataIndex: 'name'\n      }, {\n        title: 'Artist',\n        dataIndex: 'artist'\n      }, {\n        title: 'Album',\n        dataIndex: 'album'\n      }],\n      rowKey: 'index',\n      dataSource: this.props.playlist.playlist,\n      pagination: false,\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), this.nextStepButton());\n  }\n\n}\nTransferPlaylistStep2.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  next: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/daniildavydov/Downloads/applemusic2spotify/src/components/transfer-playlist/TransferPlaylistStep2.js"],"names":["React","PropTypes","Table","Icon","Button","AppleMusicPlaylist","TransferPlaylistStep2","Component","state","selectedRowKeys","onSelectChange","setState","nextStep","props","playlist","filter","next","nextStepButton","hasSelected","length","margin","textAlign","marginRight","bind","render","rowSelection","onChange","title","dataIndex","propTypes","instanceOf","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Icon, Button } from 'antd';\n\nimport AppleMusicPlaylist from '../../services/AppleMusicPlaylist';\n\nexport default class TransferPlaylistStep2 extends React.Component {\n\n  state = {\n    selectedRowKeys: []\n  };\n\n  nextStep () {\n    this.props.playlist.filter(this.state.selectedRowKeys);\n    this.props.next();\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    this.setState({selectedRowKeys});\n  };\n\n  nextStepButton () {\n    const {selectedRowKeys} = this.state;\n    const hasSelected = selectedRowKeys.length > 0;\n    return <div style={{margin: '16px 0', textAlign: 'right'}}>\n           <span style={{marginRight: 8}}>\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\n          </span>\n      <Button\n        type=\"primary\"\n        size={'large'}\n        onClick={this.nextStep.bind(this)}\n        disabled={!hasSelected}\n      >\n        Next Step<Icon type=\"arrow-right\"/>\n      </Button>\n    </div>;\n  }\n\n  render () {\n    const {selectedRowKeys} = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    return (\n      <div>\n        {this.nextStepButton()}\n        <Table\n          rowSelection={rowSelection}\n          columns={[\n            {\n              title    : 'Name',\n              dataIndex: 'name',\n            },\n            {\n              title    : 'Artist',\n              dataIndex: 'artist',\n            },\n            {\n              title    : 'Album',\n              dataIndex: 'album',\n            }\n          ]}\n          rowKey={'index'}\n          dataSource={this.props.playlist.playlist}\n          pagination={false}\n          bordered\n        />\n        {this.nextStepButton()}\n      </div>\n    );\n  }\n}\n\nTransferPlaylistStep2.propTypes = {\n  playlist: PropTypes.instanceOf(AppleMusicPlaylist).isRequired,\n  next    : PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}